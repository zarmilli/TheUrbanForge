{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/functions-js/src/helper.ts"],"sourcesContent":["import { Fetch } from './types'\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) =>\n      import('@supabase/node-fetch' as any).then(({ default: fetch }) => fetch(...args))\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n"],"names":[],"mappings":";;;AAEO,MAAM,eAAe,CAAC;IAC3B,IAAI;IACJ,IAAI,aAAa;QACf,SAAS;IACX,OAAO,IAAI,OAAO,UAAU,aAAa;QACvC,SAAS,CAAC,GAAG,OACX,6IAAsC,IAAI,CAAC,CAAC,EAAE,SAAS,MAAK,EAAE,GAAK,UAAS;IAChF,OAAO;QACL,SAAS;IACX;IACA,OAAO,CAAC,GAAG,OAAS,UAAU;AAChC"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/functions-js/src/types.ts"],"sourcesContent":["export type Fetch = typeof fetch\n\n/**\n * Response format\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n  response?: Response\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n  response?: Response\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    this.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n// Define the enum for the 'region' property\nexport enum FunctionRegion {\n  Any = 'any',\n  ApNortheast1 = 'ap-northeast-1',\n  ApNortheast2 = 'ap-northeast-2',\n  ApSouth1 = 'ap-south-1',\n  ApSoutheast1 = 'ap-southeast-1',\n  ApSoutheast2 = 'ap-southeast-2',\n  CaCentral1 = 'ca-central-1',\n  EuCentral1 = 'eu-central-1',\n  EuWest1 = 'eu-west-1',\n  EuWest2 = 'eu-west-2',\n  EuWest3 = 'eu-west-3',\n  SaEast1 = 'sa-east-1',\n  UsEast1 = 'us-east-1',\n  UsWest1 = 'us-west-1',\n  UsWest2 = 'us-west-2',\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * Object representing the headers to send with the request.\n   */\n  headers?: { [key: string]: string }\n  /**\n   * The HTTP verb of the request\n   */\n  method?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n  /**\n   * The Region to invoke the function in.\n   */\n  region?: FunctionRegion\n  /**\n   * The body of the request.\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n  /**\n   * The AbortSignal to use for the request.\n   * */\n  signal?: AbortSignal\n}\n"],"names":[],"mappings":";;;;;;;AAiBM,MAAO,uBAAuB;IAElC,YAAY,OAAe,EAAE,OAAO,gBAAgB,EAAE,OAAa,CAAA;QACjE,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;IACjB;;AAGI,MAAO,4BAA4B;IACvC,YAAY,OAAY,CAAA;QACtB,KAAK,CAAC,iDAAiD,uBAAuB;IAChF;;AAGI,MAAO,4BAA4B;IACvC,YAAY,OAAY,CAAA;QACtB,KAAK,CAAC,0CAA0C,uBAAuB;IACzE;;AAGI,MAAO,2BAA2B;IACtC,YAAY,OAAY,CAAA;QACtB,KAAK,CAAC,gDAAgD,sBAAsB;IAC9E;;AAGF,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,MAAA,GAAA;IACA,cAAA,CAAA,eAAA,GAAA;IACA,cAAA,CAAA,eAAA,GAAA;IACA,cAAA,CAAA,WAAA,GAAA;IACA,cAAA,CAAA,eAAA,GAAA;IACA,cAAA,CAAA,eAAA,GAAA;IACA,cAAA,CAAA,aAAA,GAAA;IACA,cAAA,CAAA,aAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAhBW,kBAAc,CAAd,iBAAc,CAAA,CAAA"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/functions-js/src/FunctionsClient.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionInvokeOptions,\n  FunctionRegion,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected region: FunctionRegion\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n      region = FunctionRegion.Any,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n      region?: FunctionRegion\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.region = region\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - The name of the Function to invoke.\n   * @param options - Options for invoking the Function.\n   */\n  async invoke<T = any>(\n    functionName: string,\n    options: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, method, body: functionArgs, signal } = options\n      let _headers: Record<string, string> = {}\n      let { region } = options\n      if (!region) {\n        region = this.region\n      }\n      // Add region as query parameter using URL API\n      const url = new URL(`${this.url}/${functionName}`)\n      if (region && region !== 'any') {\n        _headers['x-region'] = region\n        url.searchParams.set('forceFunctionRegion', region)\n      }\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(url.toString(), {\n        method: method || 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n        signal,\n      }).catch((fetchError) => {\n        if (fetchError.name === 'AbortError') {\n          throw fetchError\n        }\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'text/event-stream') {\n        data = response\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null, response }\n    } catch (error) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        return { data: null, error: new FunctionsFetchError(error) }\n      }\n      return {\n        data: null,\n        error,\n        response:\n          error instanceof FunctionsHttpError || error instanceof FunctionsRelayError\n            ? error.context\n            : undefined,\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/webidl-conversions/lib/index.js"],"sourcesContent":["\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/whatwg-url/lib/utils.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n"],"names":[],"mappings":"AAAA;AAEA,OAAO,OAAO,CAAC,KAAK,GAAG,SAAS,MAAM,MAAM,EAAE,MAAM;IAClD,MAAM,OAAO,OAAO,mBAAmB,CAAC;IACxC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,EAAE,EAAG;QACpC,OAAO,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,wBAAwB,CAAC,QAAQ,IAAI,CAAC,EAAE;IACxF;AACF;AAEA,OAAO,OAAO,CAAC,aAAa,GAAG,OAAO;AACtC,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO;AAEnC,OAAO,OAAO,CAAC,cAAc,GAAG,SAAU,IAAI;IAC5C,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,aAAa,CAAC;AAC3C;AAEA,OAAO,OAAO,CAAC,cAAc,GAAG,SAAU,OAAO;IAC/C,OAAO,OAAO,CAAC,OAAO,OAAO,CAAC,UAAU,CAAC;AAC3C"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/tr46/index.js"],"sourcesContent":["\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/whatwg-url/lib/url-state-machine.js"],"sourcesContent":["\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1701, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/whatwg-url/lib/URL-impl.js"],"sourcesContent":["\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1881, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/whatwg-url/lib/URL.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n"],"names":[],"mappings":"AAAA;AAEA,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,OAAO,MAAM,UAAU;AAE7B,SAAS,IAAI,GAAG;IACd,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,YAAY,GAAG,GAAG;QACjD,MAAM,IAAI,UAAU;IACtB;IACA,IAAI,UAAU,MAAM,GAAG,GAAG;QACxB,MAAM,IAAI,UAAU,8DAA8D,UAAU,MAAM,GAAG;IACvG;IACA,MAAM,OAAO,EAAE;IACf,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,IAAI,IAAI,GAAG,EAAE,EAAG;QAClD,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE;IACxB;IACA,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;IAC1C,IAAI,IAAI,CAAC,EAAE,KAAK,WAAW;QAC3B,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;IAC1C;IAEA,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE;AAC7B;AAEA,IAAI,SAAS,CAAC,MAAM,GAAG,SAAS;IAC9B,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,GAAG;QACrC,MAAM,IAAI,UAAU;IACtB;IACA,MAAM,OAAO,EAAE;IACf,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,IAAI,IAAI,GAAG,EAAE,EAAG;QAClD,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE;IACxB;IACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;AAC7C;AACA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,QAAQ;IAC3C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;IACpB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,IAAI,SAAS,CAAC,QAAQ,GAAG;IACvB,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,GAAG;QACrC,MAAM,IAAI,UAAU;IACtB;IACA,OAAO,IAAI,CAAC,IAAI;AAClB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,UAAU;IAC7C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;IAC1B;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,YAAY;IAC/C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IACxB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,YAAY;IAC/C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IACxB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,YAAY;IAC/C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IACxB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,QAAQ;IAC3C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;IACpB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,YAAY;IAC/C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IACxB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,QAAQ;IAC3C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;IACpB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,YAAY;IAC/C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IACxB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,UAAU;IAC7C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;IAC1B;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;IACtB;IACA,YAAY;IACZ,cAAc;AAChB;AAEA,OAAO,cAAc,CAAC,IAAI,SAAS,EAAE,QAAQ;IAC3C;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB;IACA,KAAI,CAAC;QACH,IAAI,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;IACpB;IACA,YAAY;IACZ,cAAc;AAChB;AAGA,OAAO,OAAO,GAAG;IACf,IAAG,GAAG;QACJ,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,YAAY,KAAK,cAAc;IAC1D;IACA,QAAO,eAAe,EAAE,WAAW;QACjC,IAAI,MAAM,OAAO,MAAM,CAAC,IAAI,SAAS;QACrC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB;QACjC,OAAO;IACT;IACA,OAAM,GAAG,EAAE,eAAe,EAAE,WAAW;QACrC,IAAI,CAAC,aAAa,cAAc,CAAC;QACjC,YAAY,OAAO,GAAG;QAEtB,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,cAAc,CAAC,iBAAiB;QACrD,GAAG,CAAC,KAAK,CAAC,MAAM,aAAa,CAAC,GAAG;IACnC;IACA,WAAW;IACX,QAAQ;QACN,QAAQ;YAAE,KAAK;QAAI;QACnB,QAAQ;YAAE,KAAK;QAAI;IACrB;AACF"}},
    {"offset": {"line": 2061, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2065, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/node_modules/whatwg-url/lib/public-api.js"],"sourcesContent":["\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n"],"names":[],"mappings":"AAAA;AAEA,QAAQ,GAAG,GAAG,+HAAiB,SAAS;AACxC,QAAQ,YAAY,GAAG,6IAA+B,YAAY;AAClE,QAAQ,kBAAkB,GAAG,6IAA+B,kBAAkB;AAC9E,QAAQ,aAAa,GAAG,6IAA+B,aAAa;AACpE,QAAQ,cAAc,GAAG,6IAA+B,cAAc;AACtE,QAAQ,cAAc,GAAG,6IAA+B,cAAc;AACtE,QAAQ,aAAa,GAAG,6IAA+B,aAAa;AACpE,QAAQ,gBAAgB,GAAG,6IAA+B,gBAAgB;AAC1E,QAAQ,QAAQ,GAAG,6IAA+B,QAAQ"}},
    {"offset": {"line": 2075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2079, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/node-fetch/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\t{\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3662, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/PostgrestError.ts"],"sourcesContent":["/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nexport default class PostgrestError extends Error {\n  details: string\n  hint: string\n  code: string\n\n  constructor(context: { message: string; details: string; hint: string; code: string }) {\n    super(context.message)\n    this.name = 'PostgrestError'\n    this.details = context.details\n    this.hint = context.hint\n    this.code = context.code\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;;;IAKA,MAAqB,uBAAuB;IAK1C,YAAY,OAAyE,CAAA;QACnF,KAAK,CAAC,QAAQ,OAAO;QACrB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG,QAAQ,OAAO;QAC9B,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI;QACxB,IAAI,CAAC,IAAI,GAAG,QAAQ,IAAI;IAC1B;;AAXF,QAAA,OAAA,GAAA"}},
    {"offset": {"line": 3680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3684, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/PostgrestBuilder.ts"],"sourcesContent":["// @ts-ignore\nimport nodeFetch from '@supabase/node-fetch'\n\nimport type {\n  Fetch,\n  PostgrestSingleResponse,\n  PostgrestResponseSuccess,\n  CheckMatchingArrayTypes,\n  MergePartialResult,\n  IsValidResultOverride,\n  ClientServerOptions,\n} from './types'\nimport PostgrestError from './PostgrestError'\nimport { ContainsNull } from './select-query-parser/types'\n\nexport default abstract class PostgrestBuilder<\n  ClientOptions extends ClientServerOptions,\n  Result,\n  ThrowOnError extends boolean = false,\n> implements\n    PromiseLike<\n      ThrowOnError extends true ? PostgrestResponseSuccess<Result> : PostgrestSingleResponse<Result>\n    >\n{\n  protected method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url: URL\n  protected headers: Headers\n  protected schema?: string\n  protected body?: unknown\n  protected shouldThrowOnError = false\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n  protected isMaybeSingle: boolean\n\n  constructor(builder: {\n    method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n    url: URL\n    headers: HeadersInit\n    schema?: string\n    body?: unknown\n    shouldThrowOnError?: boolean\n    signal?: AbortSignal\n    fetch?: Fetch\n    isMaybeSingle?: boolean\n  }) {\n    this.method = builder.method\n    this.url = builder.url\n    this.headers = new Headers(builder.headers)\n    this.schema = builder.schema\n    this.body = builder.body\n    this.shouldThrowOnError = builder.shouldThrowOnError ?? false\n    this.signal = builder.signal\n    this.isMaybeSingle = builder.isMaybeSingle ?? false\n\n    if (builder.fetch) {\n      this.fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      this.fetch = nodeFetch\n    } else {\n      this.fetch = fetch\n    }\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(): this & PostgrestBuilder<ClientOptions, Result, true> {\n    this.shouldThrowOnError = true\n    return this as this & PostgrestBuilder<ClientOptions, Result, true>\n  }\n\n  /**\n   * Set an HTTP header for the request.\n   */\n  setHeader(name: string, value: string): this {\n    this.headers = new Headers(this.headers)\n    this.headers.set(name, value)\n    return this\n  }\n\n  then<\n    TResult1 = ThrowOnError extends true\n      ? PostgrestResponseSuccess<Result>\n      : PostgrestSingleResponse<Result>,\n    TResult2 = never,\n  >(\n    onfulfilled?:\n      | ((\n          value: ThrowOnError extends true\n            ? PostgrestResponseSuccess<Result>\n            : PostgrestSingleResponse<Result>\n        ) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (this.schema === undefined) {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers.set('Accept-Profile', this.schema)\n    } else {\n      this.headers.set('Content-Profile', this.schema)\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers.set('Content-Type', 'application/json')\n    }\n\n    // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n    // https://github.com/supabase/postgrest-js/pull/247\n    const _fetch = this.fetch\n    let res = _fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count: number | null = null\n      let status = res.status\n      let statusText = res.statusText\n\n      if (res.ok) {\n        if (this.method !== 'HEAD') {\n          const body = await res.text()\n          if (body === '') {\n            // Prefer: return=minimal\n          } else if (this.headers.get('Accept') === 'text/csv') {\n            data = body\n          } else if (\n            this.headers.get('Accept') &&\n            this.headers.get('Accept')?.includes('application/vnd.pgrst.plan+text')\n          ) {\n            data = body\n          } else {\n            data = JSON.parse(body)\n          }\n        }\n\n        const countHeader = this.headers.get('Prefer')?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n          if (data.length > 1) {\n            error = {\n              // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n              code: 'PGRST116',\n              details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n              hint: null,\n              message: 'JSON object requested, multiple (or no) rows returned',\n            }\n            data = null\n            count = null\n            status = 406\n            statusText = 'Not Acceptable'\n          } else if (data.length === 1) {\n            data = data[0]\n          } else {\n            data = null\n          }\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (Array.isArray(error) && res.status === 404) {\n            data = []\n            error = null\n            status = 200\n            statusText = 'OK'\n          }\n        } catch {\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (res.status === 404 && body === '') {\n            status = 204\n            statusText = 'No Content'\n          } else {\n            error = {\n              message: body,\n            }\n          }\n        }\n\n        if (error && this.isMaybeSingle && error?.details?.includes('0 rows')) {\n          error = null\n          status = 200\n          statusText = 'OK'\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw new PostgrestError(error)\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `${fetchError?.name ?? 'FetchError'}: ${fetchError?.message}`,\n          details: `${fetchError?.stack ?? ''}`,\n          hint: '',\n          code: `${fetchError?.code ?? ''}`,\n        },\n        data: null,\n        count: null,\n        status: 0,\n        statusText: '',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n   */\n  returns<NewResult>(): PostgrestBuilder<\n    ClientOptions,\n    CheckMatchingArrayTypes<Result, NewResult>,\n    ThrowOnError\n  > {\n    /* istanbul ignore next */\n    return this as unknown as PostgrestBuilder<\n      ClientOptions,\n      CheckMatchingArrayTypes<Result, NewResult>,\n      ThrowOnError\n    >\n  }\n\n  /**\n   * Override the type of the returned `data` field in the response.\n   *\n   * @typeParam NewResult - The new type to cast the response data to\n   * @typeParam Options - Optional type configuration (defaults to { merge: true })\n   * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n   * @example\n   * ```typescript\n   * // Merge with existing types (default behavior)\n   * const query = supabase\n   *   .from('users')\n   *   .select()\n   *   .overrideTypes<{ custom_field: string }>()\n   *\n   * // Replace existing types completely\n   * const replaceQuery = supabase\n   *   .from('users')\n   *   .select()\n   *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n   * ```\n   * @returns A PostgrestBuilder instance with the new type\n   */\n  overrideTypes<\n    NewResult,\n    Options extends { merge?: boolean } = { merge: true },\n  >(): PostgrestBuilder<\n    ClientOptions,\n    IsValidResultOverride<Result, NewResult, false, false> extends true\n      ? // Preserve the optionality of the result if the overriden type is an object (case of chaining with `maybeSingle`)\n        ContainsNull<Result> extends true\n        ? MergePartialResult<NewResult, NonNullable<Result>, Options> | null\n        : MergePartialResult<NewResult, Result, Options>\n      : CheckMatchingArrayTypes<Result, NewResult>,\n    ThrowOnError\n  > {\n    return this as unknown as PostgrestBuilder<\n      ClientOptions,\n      IsValidResultOverride<Result, NewResult, false, false> extends true\n        ? // Preserve the optionality of the result if the overriden type is an object (case of chaining with `maybeSingle`)\n          ContainsNull<Result> extends true\n          ? MergePartialResult<NewResult, NonNullable<Result>, Options> | null\n          : MergePartialResult<NewResult, Result, Options>\n        : CheckMatchingArrayTypes<Result, NewResult>,\n      ThrowOnError\n    >\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3898, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/PostgrestTransformBuilder.ts"],"sourcesContent":["import PostgrestBuilder from './PostgrestBuilder'\nimport { InvalidMethodError } from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser/result'\nimport {\n  GenericSchema,\n  CheckMatchingArrayTypes,\n  ClientServerOptions,\n  MaxAffectedEnabled,\n} from './types'\n\nexport default class PostgrestTransformBuilder<\n  ClientOptions extends ClientServerOptions,\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result,\n  RelationName = unknown,\n  Relationships = unknown,\n  Method = unknown,\n> extends PostgrestBuilder<ClientOptions, Result> {\n  /**\n   * Perform a SELECT on the query result.\n   *\n   * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n   * return modified rows. By calling this method, modified rows are returned in\n   * `data`.\n   *\n   * @param columns - The columns to retrieve, separated by commas\n   */\n  select<\n    Query extends string = '*',\n    NewResultOne = GetResult<Schema, Row, RelationName, Relationships, Query, ClientOptions>,\n  >(\n    columns?: Query\n  ): PostgrestTransformBuilder<\n    ClientOptions,\n    Schema,\n    Row,\n    NewResultOne[],\n    RelationName,\n    Relationships,\n    Method\n  > {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    this.headers.append('Prefer', 'return=representation')\n    return this as unknown as PostgrestTransformBuilder<\n      ClientOptions,\n      Schema,\n      Row,\n      NewResultOne[],\n      RelationName,\n      Relationships,\n      Method\n    >\n  }\n\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; referencedTable?: undefined }\n  ): this\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; referencedTable?: string }\n  ): this\n  /**\n   * @deprecated Use `options.referencedTable` instead of `options.foreignTable`\n   */\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: undefined }\n  ): this\n  /**\n   * @deprecated Use `options.referencedTable` instead of `options.foreignTable`\n   */\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string }\n  ): this\n  /**\n   * Order the query result by `column`.\n   *\n   * You can call this method multiple times to order by multiple columns.\n   *\n   * You can order referenced tables, but it only affects the ordering of the\n   * parent table if you use `!inner` in the query.\n   *\n   * @param column - The column to order by\n   * @param options - Named parameters\n   * @param options.ascending - If `true`, the result will be in ascending order\n   * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n   * `null`s appear last.\n   * @param options.referencedTable - Set this to order a referenced table by\n   * its columns\n   * @param options.foreignTable - Deprecated, use `options.referencedTable`\n   * instead\n   */\n  order(\n    column: string,\n    {\n      ascending = true,\n      nullsFirst,\n      foreignTable,\n      referencedTable = foreignTable,\n    }: {\n      ascending?: boolean\n      nullsFirst?: boolean\n      foreignTable?: string\n      referencedTable?: string\n    } = {}\n  ): this {\n    const key = referencedTable ? `${referencedTable}.order` : 'order'\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${\n        nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limit the query result by `count`.\n   *\n   * @param count - The maximum number of rows to return\n   * @param options - Named parameters\n   * @param options.referencedTable - Set this to limit rows of referenced\n   * tables instead of the parent table\n   * @param options.foreignTable - Deprecated, use `options.referencedTable`\n   * instead\n   */\n  limit(\n    count: number,\n    {\n      foreignTable,\n      referencedTable = foreignTable,\n    }: { foreignTable?: string; referencedTable?: string } = {}\n  ): this {\n    const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n   * Only records within this range are returned.\n   * This respects the query order and if there is no order clause the range could behave unexpectedly.\n   * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n   * and fourth rows of the query.\n   *\n   * @param from - The starting index from which to limit the result\n   * @param to - The last index to which to limit the result\n   * @param options - Named parameters\n   * @param options.referencedTable - Set this to limit rows of referenced\n   * tables instead of the parent table\n   * @param options.foreignTable - Deprecated, use `options.referencedTable`\n   * instead\n   */\n  range(\n    from: number,\n    to: number,\n    {\n      foreignTable,\n      referencedTable = foreignTable,\n    }: { foreignTable?: string; referencedTable?: string } = {}\n  ): this {\n    const keyOffset =\n      typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`\n    const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Set the AbortSignal for the fetch request.\n   *\n   * @param signal - The AbortSignal to use for the fetch request\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n   * returns an error.\n   */\n  single<ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never>(): PostgrestBuilder<\n    ClientOptions,\n    ResultOne\n  > {\n    this.headers.set('Accept', 'application/vnd.pgrst.object+json')\n    return this as unknown as PostgrestBuilder<ClientOptions, ResultOne>\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n   * this returns an error.\n   */\n  maybeSingle<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never,\n  >(): PostgrestBuilder<ClientOptions, ResultOne | null> {\n    // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n    // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n    if (this.method === 'GET') {\n      this.headers.set('Accept', 'application/json')\n    } else {\n      this.headers.set('Accept', 'application/vnd.pgrst.object+json')\n    }\n    this.isMaybeSingle = true\n    return this as unknown as PostgrestBuilder<ClientOptions, ResultOne | null>\n  }\n\n  /**\n   * Return `data` as a string in CSV format.\n   */\n  csv(): PostgrestBuilder<ClientOptions, string> {\n    this.headers.set('Accept', 'text/csv')\n    return this as unknown as PostgrestBuilder<ClientOptions, string>\n  }\n\n  /**\n   * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n   */\n  geojson(): PostgrestBuilder<ClientOptions, Record<string, unknown>> {\n    this.headers.set('Accept', 'application/geo+json')\n    return this as unknown as PostgrestBuilder<ClientOptions, Record<string, unknown>>\n  }\n\n  /**\n   * Return `data` as the EXPLAIN plan for the query.\n   *\n   * You need to enable the\n   * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n   * setting before using this method.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.analyze - If `true`, the query will be executed and the\n   * actual run time will be returned\n   *\n   * @param options.verbose - If `true`, the query identifier will be returned\n   * and `data` will include the output columns of the query\n   *\n   * @param options.settings - If `true`, include information on configuration\n   * parameters that affect query planning\n   *\n   * @param options.buffers - If `true`, include information on buffer usage\n   *\n   * @param options.wal - If `true`, include information on WAL record generation\n   *\n   * @param options.format - The format of the output, can be `\"text\"` (default)\n   * or `\"json\"`\n   */\n  explain({\n    analyze = false,\n    verbose = false,\n    settings = false,\n    buffers = false,\n    wal = false,\n    format = 'text',\n  }: {\n    analyze?: boolean\n    verbose?: boolean\n    settings?: boolean\n    buffers?: boolean\n    wal?: boolean\n    format?: 'json' | 'text'\n  } = {}) {\n    const options = [\n      analyze ? 'analyze' : null,\n      verbose ? 'verbose' : null,\n      settings ? 'settings' : null,\n      buffers ? 'buffers' : null,\n      wal ? 'wal' : null,\n    ]\n      .filter(Boolean)\n      .join('|')\n    // An Accept header can carry multiple media types but postgrest-js always sends one\n    const forMediatype = this.headers.get('Accept') ?? 'application/json'\n    this.headers.set(\n      'Accept',\n      `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`\n    )\n    if (format === 'json') {\n      return this as unknown as PostgrestBuilder<ClientOptions, Record<string, unknown>[]>\n    } else {\n      return this as unknown as PostgrestBuilder<ClientOptions, string>\n    }\n  }\n\n  /**\n   * Rollback the query.\n   *\n   * `data` will still be returned, but the query is not committed.\n   */\n  rollback(): this {\n    this.headers.append('Prefer', 'tx=rollback')\n    return this\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n   */\n  returns<NewResult>(): PostgrestTransformBuilder<\n    ClientOptions,\n    Schema,\n    Row,\n    CheckMatchingArrayTypes<Result, NewResult>,\n    RelationName,\n    Relationships,\n    Method\n  > {\n    return this as unknown as PostgrestTransformBuilder<\n      ClientOptions,\n      Schema,\n      Row,\n      CheckMatchingArrayTypes<Result, NewResult>,\n      RelationName,\n      Relationships,\n      Method\n    >\n  }\n\n  /**\n   * Set the maximum number of rows that can be affected by the query.\n   * Only available in PostgREST v13+ and only works with PATCH and DELETE methods.\n   *\n   * @param value - The maximum number of rows that can be affected\n   */\n  maxAffected(value: number): MaxAffectedEnabled<ClientOptions['PostgrestVersion']> extends true\n    ? // TODO: update the RPC case to only work on RPC that returns SETOF rows\n      Method extends 'PATCH' | 'DELETE' | 'RPC'\n      ? this\n      : InvalidMethodError<'maxAffected method only available on update or delete'>\n    : InvalidMethodError<'maxAffected method only available on postgrest 13+'> {\n    this.headers.append('Prefer', 'handling=strict')\n    this.headers.append('Prefer', `max-affected=${value}`)\n    return this as unknown as MaxAffectedEnabled<ClientOptions['PostgrestVersion']> extends true\n      ? Method extends 'PATCH' | 'DELETE' | 'RPC'\n        ? this\n        : InvalidMethodError<'maxAffected method only available on update or delete'>\n      : InvalidMethodError<'maxAffected method only available on postgrest 13+'>\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4111, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts"],"sourcesContent":["import PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport { JsonPathToAccessor, JsonPathToType } from './select-query-parser/utils'\nimport { ClientServerOptions, GenericSchema } from './types'\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n\nexport type IsStringOperator<Path extends string> = Path extends `${string}->>${string}`\n  ? true\n  : false\n\n// Match relationship filters with `table.column` syntax and resolve underlying\n// column value. If not matched, fallback to generic type.\n// TODO: Validate the relationship itself ala select-query-parser. Currently we\n// assume that all tables have valid relationships to each other, despite\n// nonexistent foreign keys.\ntype ResolveFilterValue<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  ColumnName extends string,\n> = ColumnName extends `${infer RelationshipTable}.${infer Remainder}`\n  ? Remainder extends `${infer _}.${infer _}`\n    ? ResolveFilterValue<Schema, Row, Remainder>\n    : ResolveFilterRelationshipValue<Schema, RelationshipTable, Remainder>\n  : ColumnName extends keyof Row\n    ? Row[ColumnName]\n    : // If the column selection is a jsonpath like `data->value` or `data->>value` we attempt to match\n      // the expected type with the parsed custom json type\n      IsStringOperator<ColumnName> extends true\n      ? string\n      : JsonPathToType<Row, JsonPathToAccessor<ColumnName>> extends infer JsonPathValue\n        ? JsonPathValue extends never\n          ? never\n          : JsonPathValue\n        : never\n\ntype ResolveFilterRelationshipValue<\n  Schema extends GenericSchema,\n  RelationshipTable extends string,\n  RelationshipColumn extends string,\n> = Schema['Tables'] & Schema['Views'] extends infer TablesAndViews\n  ? RelationshipTable extends keyof TablesAndViews\n    ? 'Row' extends keyof TablesAndViews[RelationshipTable]\n      ? RelationshipColumn extends keyof TablesAndViews[RelationshipTable]['Row']\n        ? TablesAndViews[RelationshipTable]['Row'][RelationshipColumn]\n        : unknown\n      : unknown\n    : unknown\n  : never\n\nexport type InvalidMethodError<S extends string> = { Error: S }\n\nexport default class PostgrestFilterBuilder<\n  ClientOptions extends ClientServerOptions,\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result,\n  RelationName = unknown,\n  Relationships = unknown,\n  Method = unknown,\n> extends PostgrestTransformBuilder<\n  ClientOptions,\n  Schema,\n  Row,\n  Result,\n  RelationName,\n  Relationships,\n  Method\n> {\n  /**\n   * Match only rows where `column` is equal to `value`.\n   *\n   * To check if the value of `column` is NULL, you should use `.is()` instead.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  eq<ColumnName extends string>(\n    column: ColumnName,\n    value: ResolveFilterValue<Schema, Row, ColumnName> extends never\n      ? NonNullable<unknown>\n      : // We want to infer the type before wrapping it into a `NonNullable` to avoid too deep\n        // type resolution error\n        ResolveFilterValue<Schema, Row, ColumnName> extends infer ResolvedFilterValue\n        ? NonNullable<ResolvedFilterValue>\n        : // We should never enter this case as all the branches are covered above\n          never\n  ): this {\n    this.url.searchParams.append(column, `eq.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows where `column` is not equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  neq<ColumnName extends string>(\n    column: ColumnName,\n    value: ResolveFilterValue<Schema, Row, ColumnName> extends never\n      ? unknown\n      : ResolveFilterValue<Schema, Row, ColumnName> extends infer ResolvedFilterValue\n        ? ResolvedFilterValue\n        : never\n  ): this {\n    this.url.searchParams.append(column, `neq.${value}`)\n    return this\n  }\n\n  gt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gt.${value}`)\n    return this\n  }\n\n  gte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gte.${value}`)\n    return this\n  }\n\n  lt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lt.${value}`)\n    return this\n  }\n\n  lte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lte.${value}`)\n    return this\n  }\n\n  like<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  like(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  like(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `like.${pattern}`)\n    return this\n  }\n\n  likeAllOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  likeAllOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches all of `patterns` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  likeAllOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`)\n    return this\n  }\n\n  likeAnyOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  likeAnyOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches any of `patterns` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  likeAnyOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`)\n    return this\n  }\n\n  ilike<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  ilike(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  ilike(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `ilike.${pattern}`)\n    return this\n  }\n\n  ilikeAllOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  ilikeAllOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches all of `patterns` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  ilikeAllOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`)\n    return this\n  }\n\n  ilikeAnyOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  ilikeAnyOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches any of `patterns` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  ilikeAnyOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`)\n    return this\n  }\n\n  is<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: Row[ColumnName] & (boolean | null)\n  ): this\n  is(column: string, value: boolean | null): this\n  /**\n   * Match only rows where `column` IS `value`.\n   *\n   * For non-boolean columns, this is only relevant for checking if the value of\n   * `column` is NULL by setting `value` to `null`.\n   *\n   * For boolean columns, you can also set `value` to `true` or `false` and it\n   * will behave the same way as `.eq()`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  is(column: string, value: boolean | null): this {\n    this.url.searchParams.append(column, `is.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows where `column` is included in the `values` array.\n   *\n   * @param column - The column to filter on\n   * @param values - The values array to filter with\n   */\n  in<ColumnName extends string>(\n    column: ColumnName,\n    values: ReadonlyArray<\n      ResolveFilterValue<Schema, Row, ColumnName> extends never\n        ? unknown\n        : // We want to infer the type before wrapping it into a `NonNullable` to avoid too deep\n          // type resolution error\n          ResolveFilterValue<Schema, Row, ColumnName> extends infer ResolvedFilterValue\n          ? ResolvedFilterValue\n          : // We should never enter this case as all the branches are covered above\n            never\n    >\n  ): this {\n    const cleanedValues = Array.from(new Set(values))\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(column, `in.(${cleanedValues})`)\n    return this\n  }\n\n  contains<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | ReadonlyArray<Row[ColumnName]> | Record<string, unknown>\n  ): this\n  contains(column: string, value: string | readonly unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * `column` contains every element appearing in `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  contains(column: string, value: string | readonly unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(column, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  containedBy<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | ReadonlyArray<Row[ColumnName]> | Record<string, unknown>\n  ): this\n  containedBy(column: string, value: string | readonly unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * every element appearing in `column` is contained by `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  containedBy(column: string, value: string | readonly unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  rangeGt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is greater than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sr.${range}`)\n    return this\n  }\n\n  rangeGte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or greater than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxl.${range}`)\n    return this\n  }\n\n  rangeLt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is less than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sl.${range}`)\n    return this\n  }\n\n  rangeLte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or less than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxr.${range}`)\n    return this\n  }\n\n  rangeAdjacent<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeAdjacent(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where `column` is\n   * mutually exclusive to `range` and there can be no element between the two\n   * ranges.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeAdjacent(column: string, range: string): this {\n    this.url.searchParams.append(column, `adj.${range}`)\n    return this\n  }\n\n  overlaps<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | ReadonlyArray<Row[ColumnName]>\n  ): this\n  overlaps(column: string, value: string | readonly unknown[]): this\n  /**\n   * Only relevant for array and range columns. Match only rows where\n   * `column` and `value` have an element in common.\n   *\n   * @param column - The array or range column to filter on\n   * @param value - The array or range value to filter with\n   */\n  overlaps(column: string, value: string | readonly unknown[]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(column, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  textSearch<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  textSearch(\n    column: string,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  /**\n   * Only relevant for text and tsvector columns. Match only rows where\n   * `column` matches the query string in `query`.\n   *\n   * @param column - The text or tsvector column to filter on\n   * @param query - The query text to match with\n   * @param options - Named parameters\n   * @param options.config - The text search configuration to use\n   * @param options.type - Change how the `query` text is interpreted\n   */\n  textSearch(\n    column: string,\n    query: string,\n    { config, type }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  match<ColumnName extends string & keyof Row>(query: Record<ColumnName, Row[ColumnName]>): this\n  match(query: Record<string, unknown>): this\n  /**\n   * Match only rows where each column in `query` keys is equal to its\n   * associated value. Shorthand for multiple `.eq()`s.\n   *\n   * @param query - The object to filter with, with column names as keys mapped\n   * to their filter values\n   */\n  match(query: Record<string, unknown>): this {\n    Object.entries(query).forEach(([column, value]) => {\n      this.url.searchParams.append(column, `eq.${value}`)\n    })\n    return this\n  }\n\n  not<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: FilterOperator,\n    value: Row[ColumnName]\n  ): this\n  not(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which doesn't satisfy the filter.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to be negated to filter with, following\n   * PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  not(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows which satisfy at least one of the filters.\n   *\n   * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure it's properly sanitized.\n   *\n   * It's currently not possible to do an `.or()` filter across multiple tables.\n   *\n   * @param filters - The filters to use, following PostgREST syntax\n   * @param options - Named parameters\n   * @param options.referencedTable - Set this to filter on referenced tables\n   * instead of the parent table\n   * @param options.foreignTable - Deprecated, use `referencedTable` instead\n   */\n  or(\n    filters: string,\n    {\n      foreignTable,\n      referencedTable = foreignTable,\n    }: { foreignTable?: string; referencedTable?: string } = {}\n  ): this {\n    const key = referencedTable ? `${referencedTable}.or` : 'or'\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  filter<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: `${'' | 'not.'}${FilterOperator}`,\n    value: unknown\n  ): this\n  filter(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which satisfy the filter. This is an escape hatch - you\n   * should use the specific filter methods wherever possible.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to filter with, following PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  filter(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `${operator}.${value}`)\n    return this\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4461, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/PostgrestQueryBuilder.ts"],"sourcesContent":["import PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser/result'\nimport { ClientServerOptions, Fetch, GenericSchema, GenericTable, GenericView } from './types'\n\nexport default class PostgrestQueryBuilder<\n  ClientOptions extends ClientServerOptions,\n  Schema extends GenericSchema,\n  Relation extends GenericTable | GenericView,\n  RelationName = unknown,\n  Relationships = Relation extends { Relationships: infer R } ? R : unknown,\n> {\n  url: URL\n  headers: Headers\n  schema?: string\n  signal?: AbortSignal\n  fetch?: Fetch\n\n  constructor(\n    url: URL,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: HeadersInit\n      schema?: string\n      fetch?: Fetch\n    }\n  ) {\n    this.url = url\n    this.headers = new Headers(headers)\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  /**\n   * Perform a SELECT query on the table or view.\n   *\n   * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n   *\n   * @param options - Named parameters\n   *\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   *\n   * @param options.count - Count algorithm to use to count rows in the table or view.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  select<\n    Query extends string = '*',\n    ResultOne = GetResult<\n      Schema,\n      Relation['Row'],\n      RelationName,\n      Relationships,\n      Query,\n      ClientOptions\n    >,\n  >(\n    columns?: Query,\n    options?: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    ResultOne[],\n    RelationName,\n    Relationships,\n    'GET'\n  > {\n    const { head = false, count } = options ?? {}\n\n    const method = head ? 'HEAD' : 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n    })\n  }\n\n  // TODO(v3): Make `defaultToNull` consistent for both single & bulk inserts.\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row,\n    options?: {\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row[],\n    options?: {\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  /**\n   * Perform an INSERT into the table or view.\n   *\n   * By default, inserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to insert. Pass an object to insert a single row\n   * or an array to insert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count inserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   *\n   * @param options.defaultToNull - Make missing fields default to `null`.\n   * Otherwise, use the default value for the column. Only applies for bulk\n   * inserts.\n   */\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      count,\n      defaultToNull = true,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  > {\n    const method = 'POST'\n\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n    if (!defaultToNull) {\n      this.headers.append('Prefer', `missing=default`)\n    }\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n\n  // TODO(v3): Make `defaultToNull` consistent for both single & bulk upserts.\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row,\n    options?: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row[],\n    options?: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  /**\n   * Perform an UPSERT on the table or view. Depending on the column(s) passed\n   * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n   * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n   * exist, or if it does exist, perform an alternative action depending on\n   * `ignoreDuplicates`.\n   *\n   * By default, upserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to upsert with. Pass an object to upsert a\n   * single row or an array to upsert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n   * duplicate rows are determined. Two rows are duplicates if all the\n   * `onConflict` columns are equal.\n   *\n   * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n   * `false`, duplicate rows are merged with existing rows.\n   *\n   * @param options.count - Count algorithm to use to count upserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   *\n   * @param options.defaultToNull - Make missing fields default to `null`.\n   * Otherwise, use the default value for the column. This only applies when\n   * inserting new rows, not when merging with existing rows under\n   * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n   */\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      onConflict,\n      ignoreDuplicates = false,\n      count,\n      defaultToNull = true,\n    }: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  > {\n    const method = 'POST'\n\n    this.headers.append('Prefer', `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`)\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n    if (!defaultToNull) {\n      this.headers.append('Prefer', 'missing=default')\n    }\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n\n  /**\n   * Perform an UPDATE on the table or view.\n   *\n   * By default, updated rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param values - The values to update with\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count updated rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  update<Row extends Relation extends { Update: unknown } ? Relation['Update'] : never>(\n    values: Row,\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'PATCH'\n  > {\n    const method = 'PATCH'\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n\n  /**\n   * Perform a DELETE on the table or view.\n   *\n   * By default, deleted rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count deleted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  delete({\n    count,\n  }: {\n    count?: 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'DELETE'\n  > {\n    const method = 'DELETE'\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4711, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4715, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/PostgrestClient.ts"],"sourcesContent":["import PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { Fetch, GenericSchema, ClientServerOptions } from './types'\n\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient<\n  Database = any,\n  ClientOptions extends ClientServerOptions = Database extends {\n    __InternalSupabase: infer I extends ClientServerOptions\n  }\n    ? I\n    : {},\n  SchemaName extends string &\n    keyof Omit<Database, '__InternalSupabase'> = 'public' extends keyof Omit<\n    Database,\n    '__InternalSupabase'\n  >\n    ? 'public'\n    : string & keyof Omit<Database, '__InternalSupabase'>,\n  Schema extends GenericSchema = Omit<\n    Database,\n    '__InternalSupabase'\n  >[SchemaName] extends GenericSchema\n    ? Omit<Database, '__InternalSupabase'>[SchemaName]\n    : any,\n> {\n  url: string\n  headers: Headers\n  schemaName?: SchemaName\n  fetch?: Fetch\n\n  // TODO: Add back shouldThrowOnError once we figure out the typings\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url - URL of the PostgREST endpoint\n   * @param options - Named parameters\n   * @param options.headers - Custom headers\n   * @param options.schema - Postgres schema to switch to\n   * @param options.fetch - Custom fetch\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: HeadersInit\n      schema?: SchemaName\n      fetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = new Headers(headers)\n    this.schemaName = schema\n    this.fetch = fetch\n  }\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName],\n  >(relation: TableName): PostgrestQueryBuilder<ClientOptions, Schema, Table, TableName>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<ClientOptions, Schema, View, ViewName>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<ClientOptions, Schema, any, any> {\n    const url = new URL(`${this.url}/${relation}`)\n    return new PostgrestQueryBuilder(url, {\n      headers: new Headers(this.headers),\n      schema: this.schemaName,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Select a schema to query or perform an function (rpc) call.\n   *\n   * The schema needs to be on the list of exposed schemas inside Supabase.\n   *\n   * @param schema - The schema to query\n   */\n  schema<DynamicSchema extends string & keyof Omit<Database, '__InternalSupabase'>>(\n    schema: DynamicSchema\n  ): PostgrestClient<\n    Database,\n    ClientOptions,\n    DynamicSchema,\n    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any\n  > {\n    return new PostgrestClient(this.url, {\n      headers: this.headers,\n      schema,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.get - When set to `true`, the function will be called with\n   * read-only access mode.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<FnName extends string & keyof Schema['Functions'], Fn extends Schema['Functions'][FnName]>(\n    fn: FnName,\n    args: Fn['Args'] = {},\n    {\n      head = false,\n      get = false,\n      count,\n    }: {\n      head?: boolean\n      get?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Fn['Returns'] extends any[]\n      ? Fn['Returns'][number] extends Record<string, unknown>\n        ? Fn['Returns'][number]\n        : never\n      : never,\n    Fn['Returns'],\n    FnName,\n    null,\n    'RPC'\n  > {\n    let method: 'HEAD' | 'GET' | 'POST'\n    const url = new URL(`${this.url}/rpc/${fn}`)\n    let body: unknown | undefined\n    if (head || get) {\n      method = head ? 'HEAD' : 'GET'\n      Object.entries(args)\n        // params with undefined value needs to be filtered out, otherwise it'll\n        // show up as `?param=undefined`\n        .filter(([_, value]) => value !== undefined)\n        // array values need special syntax\n        .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n        .forEach(([name, value]) => {\n          url.searchParams.append(name, value)\n        })\n    } else {\n      method = 'POST'\n      body = args\n    }\n\n    const headers = new Headers(this.headers)\n    if (count) {\n      headers.set('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url,\n      headers,\n      schema: this.schemaName,\n      body,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA,MAAA,0BAAA;AACA,MAAA,2BAAA;AAGA;;;;;;;;;IAUA,MAAqB;IA0BnB,mEAAmE;IACnE;;;;;;;;QASA,YACE,GAAW,EACX,EACE,UAAU,CAAA,CAAE,EACZ,MAAM,EACN,OAAA,MAAK,EAAA,GAKH,CAAA,CAAE,CAAA;QAEN,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,QAAQ;QAC3B,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,KAAK,GAAG;IACf;IAQA;;;;QAKA,KAAK,QAAgB,EAAA;QACnB,MAAM,MAAM,IAAI,IAAI,CAAA,EAAG,IAAI,CAAC,GAAG,CAAA,CAAA,EAAI,SAAQ,CAAE;QAC7C,OAAO,IAAI,wBAAA,OAAqB,CAAC,KAAK;YACpC,SAAS,IAAI,QAAQ,IAAI,CAAC,OAAO;YACjC,QAAQ,IAAI,CAAC,UAAU;YACvB,OAAO,IAAI,CAAC,KAAK;;IAErB;IAEA;;;;;;QAOA,OACE,MAAqB,EAAA;QAOrB,OAAO,IAAI,gBAAgB,IAAI,CAAC,GAAG,EAAE;YACnC,SAAS,IAAI,CAAC,OAAO;YACrB;YACA,OAAO,IAAI,CAAC,KAAK;;IAErB;IAEA;;;;;;;;;;;;;;;;;;;;;;QAuBA,IACE,EAAU,EACV,OAAmB,CAAA,CAAE,EACrB,EACE,OAAO,KAAK,EACZ,MAAM,KAAK,EACX,KAAK,EAAA,GAKH,CAAA,CAAE,EAAA;;QAcN,IAAI;QACJ,MAAM,MAAM,IAAI,IAAI,CAAA,EAAG,IAAI,CAAC,GAAG,CAAA,KAAA,EAAQ,GAAE,CAAE;QAC3C,IAAI;QACJ,IAAI,QAAQ,KAAK;YACf,SAAS,OAAO,SAAS;YACzB,OAAO,OAAO,CAAC,KACb,wEAAwE;YACxE,gCAAgC;aAC/B,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAK,UAAU,UAClC,mCAAmC;aAClC,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK;oBAAC;oBAAM,MAAM,OAAO,CAAC,SAAS,CAAA,CAAA,EAAI,MAAM,IAAI,CAAC,KAAI,CAAA,CAAG,GAAG,CAAA,EAAG,MAAK,CAAE;iBAAC,EACzF,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM;gBACrB,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM;YAChC;QACJ,OAAO;YACL,SAAS;YACT,OAAO;QACT;QAEA,MAAM,UAAU,IAAI,QAAQ,IAAI,CAAC,OAAO;QACxC,IAAI,OAAO;YACT,QAAQ,GAAG,CAAC,UAAU,CAAA,MAAA,EAAS,MAAK,CAAE;QACxC;QAEA,OAAO,IAAI,yBAAA,OAAsB,CAAC;YAChC;YACA;YACA;YACA,QAAQ,IAAI,CAAC,UAAU;YACvB;YACA,OAAO,CAAA,KAAA,IAAI,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;;IAEzB;;AAhLF,QAAA,OAAA,GAAA"}},
    {"offset": {"line": 4833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4837, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/src/index.ts"],"sourcesContent":["// Always update wrapper.mjs when updating this file.\nimport PostgrestClient from './PostgrestClient'\nimport PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport PostgrestBuilder from './PostgrestBuilder'\nimport PostgrestError from './PostgrestError'\n\nexport {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\nexport type {\n  PostgrestResponse,\n  PostgrestResponseFailure,\n  PostgrestResponseSuccess,\n  PostgrestSingleResponse,\n  PostgrestMaybeSingleResponse,\n  ClientServerOptions as PostgrestClientOptions,\n} from './types'\n// https://github.com/supabase/postgrest-js/issues/551\n// To be replaced with a helper type that only uses public types\nexport type { GetResult as UnstableGetResult } from './select-query-parser/result'\n"],"names":[],"mappings":";;;;;;;;;;AAAA,qDAAqD;AACrD,MAAA,oBAAA;AAQE,QAAA,eAAA,GARK,kBAAA,OAAe;AACtB,MAAA,0BAAA;AAQE,QAAA,qBAAA,GARK,wBAAA,OAAqB;AAC5B,MAAA,2BAAA;AAQE,QAAA,sBAAA,GARK,yBAAA,OAAsB;AAC7B,MAAA,8BAAA;AAQE,QAAA,yBAAA,GARK,4BAAA,OAAyB;AAChC,MAAA,qBAAA;AAQE,QAAA,gBAAA,GARK,mBAAA,OAAgB;AACvB,MAAA,mBAAA;AAQE,QAAA,cAAA,GARK,iBAAA,OAAc;AAUrB,QAAA,OAAA,GAAe;IACb,iBAAA,kBAAA,OAAe;IACf,uBAAA,wBAAA,OAAqB;IACrB,wBAAA,yBAAA,OAAsB;IACtB,2BAAA,4BAAA,OAAyB;IACzB,kBAAA,mBAAA,OAAgB;IAChB,gBAAA,iBAAA,OAAc"}},
    {"offset": {"line": 4868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4873, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs"],"sourcesContent":["import index from '../cjs/index.js'\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = index\n\nexport {\n  PostgrestBuilder,\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n  PostgrestTransformBuilder,\n  PostgrestError,\n}\n\n// compatibility with CJS output\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AACA,MAAM,EACJ,eAAe,EACf,qBAAqB,EACrB,sBAAsB,EACtB,yBAAyB,EACzB,gBAAgB,EAChB,cAAc,EACf,GAAG,qKAAA,CAAA,UAAK;;uCAYM;IACb;IACA;IACA;IACA;IACA;IACA;AACF"}},
    {"offset": {"line": 4895, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4900, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/websocket-factory.ts"],"sourcesContent":["export interface WebSocketLike {\n  readonly CONNECTING: number\n  readonly OPEN: number\n  readonly CLOSING: number\n  readonly CLOSED: number\n  readonly readyState: number\n  readonly url: string\n  readonly protocol: string\n\n  close(code?: number, reason?: string): void\n  send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void\n\n  onopen: ((this: any, ev: Event) => any) | null\n  onmessage: ((this: any, ev: MessageEvent) => any) | null\n  onclose: ((this: any, ev: CloseEvent) => any) | null\n  onerror: ((this: any, ev: Event) => any) | null\n\n  addEventListener(type: string, listener: EventListener): void\n  removeEventListener(type: string, listener: EventListener): void\n\n  // Add additional properties that may exist on WebSocket implementations\n  binaryType?: string\n  bufferedAmount?: number\n  extensions?: string\n  dispatchEvent?: (event: Event) => boolean\n}\n\nexport interface WebSocketEnvironment {\n  type: 'native' | 'ws' | 'cloudflare' | 'unsupported'\n  constructor?: any\n  error?: string\n  workaround?: string\n}\n\nexport class WebSocketFactory {\n  private static detectEnvironment(): WebSocketEnvironment {\n    if (typeof WebSocket !== 'undefined') {\n      return { type: 'native', constructor: WebSocket }\n    }\n\n    if (typeof globalThis !== 'undefined' && typeof (globalThis as any).WebSocket !== 'undefined') {\n      return { type: 'native', constructor: (globalThis as any).WebSocket }\n    }\n\n    if (typeof global !== 'undefined' && typeof (global as any).WebSocket !== 'undefined') {\n      return { type: 'native', constructor: (global as any).WebSocket }\n    }\n\n    if (\n      typeof globalThis !== 'undefined' &&\n      typeof (globalThis as any).WebSocketPair !== 'undefined' &&\n      typeof globalThis.WebSocket === 'undefined'\n    ) {\n      return {\n        type: 'cloudflare',\n        error:\n          'Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.',\n        workaround:\n          'Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime.',\n      }\n    }\n\n    if (\n      (typeof globalThis !== 'undefined' && (globalThis as any).EdgeRuntime) ||\n      (typeof navigator !== 'undefined' && navigator.userAgent?.includes('Vercel-Edge'))\n    ) {\n      return {\n        type: 'unsupported',\n        error:\n          'Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.',\n        workaround:\n          'Use serverless functions or a different deployment target for WebSocket functionality.',\n      }\n    }\n\n    if (typeof process !== 'undefined') {\n      // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n      const processVersions = (process as any)['versions']\n      if (processVersions && processVersions['node']) {\n        // Remove 'v' prefix if present and parse the major version\n        const versionString = processVersions['node']\n        const nodeVersion = parseInt(versionString.replace(/^v/, '').split('.')[0])\n\n        // Node.js 22+ should have native WebSocket\n        if (nodeVersion >= 22) {\n          // Check if native WebSocket is available (should be in Node.js 22+)\n          if (typeof globalThis.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: globalThis.WebSocket }\n          }\n          // If not available, user needs to provide it\n          return {\n            type: 'unsupported',\n            error: `Node.js ${nodeVersion} detected but native WebSocket not found.`,\n            workaround: 'Provide a WebSocket implementation via the transport option.',\n          }\n        }\n\n        // Node.js < 22 doesn't have native WebSocket\n        return {\n          type: 'unsupported',\n          error: `Node.js ${nodeVersion} detected without native WebSocket support.`,\n          workaround:\n            'For Node.js < 22, install \"ws\" package and provide it via the transport option:\\n' +\n            'import ws from \"ws\"\\n' +\n            'new RealtimeClient(url, { transport: ws })',\n        }\n      }\n    }\n\n    return {\n      type: 'unsupported',\n      error: 'Unknown JavaScript runtime without WebSocket support.',\n      workaround:\n        \"Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation.\",\n    }\n  }\n\n  public static getWebSocketConstructor(): typeof WebSocket {\n    const env = this.detectEnvironment()\n    if (env.constructor) {\n      return env.constructor\n    }\n    let errorMessage = env.error || 'WebSocket not supported in this environment.'\n    if (env.workaround) {\n      errorMessage += `\\n\\nSuggested solution: ${env.workaround}`\n    }\n    throw new Error(errorMessage)\n  }\n\n  public static createWebSocket(url: string | URL, protocols?: string | string[]): WebSocketLike {\n    const WS = this.getWebSocketConstructor()\n    return new WS(url, protocols)\n  }\n\n  public static isWebSocketSupported(): boolean {\n    try {\n      const env = this.detectEnvironment()\n      return env.type === 'native' || env.type === 'ws'\n    } catch {\n      return false\n    }\n  }\n}\n\nexport default WebSocketFactory\n"],"names":[],"mappings":";;;;AAkCM,MAAO;IACH,OAAO,oBAAiB;;QAC9B,IAAI,OAAO,cAAc,aAAa;YACpC,OAAO;gBAAE,MAAM;gBAAU,aAAa;YAAS;QACjD;QAEA,IAAI,OAAO,eAAe,eAAe,OAAQ,WAAmB,SAAS,KAAK,aAAa;YAC7F,OAAO;gBAAE,MAAM;gBAAU,aAAc,WAAmB,SAAS;YAAA;QACrE;QAEA,IAAI,OAAO,WAAW,eAAe,OAAQ,OAAe,SAAS,KAAK,aAAa;YACrF,OAAO;gBAAE,MAAM;gBAAU,aAAc,OAAe,SAAS;YAAA;QACjE;QAEA,IACE,OAAO,eAAe,eACtB,OAAQ,WAAmB,aAAa,KAAK,eAC7C,OAAO,WAAW,SAAS,KAAK,aAChC;YACA,OAAO;gBACL,MAAM;gBACN,OACE;gBACF,YACE;;QAEN;QAEA,IACE,AAAC,OAAO,eAAe,eAAgB,WAAmB,WAAW,IACpE,OAAO,cAAc,eAAW,CAAI,CAAA,KAAA,UAAU,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,CAAC,cAAc,GACjF;YACA,OAAO;gBACL,MAAM;gBACN,OACE;gBACF,YACE;;QAEN;QAEA,IAAI,OAAO,YAAY,aAAa;YAClC,qFAAqF;YACrF,MAAM,kBAAmB,OAAe,CAAC,WAAW;YACpD,IAAI,mBAAmB,eAAe,CAAC,OAAO,EAAE;gBAC9C,2DAA2D;gBAC3D,MAAM,gBAAgB,eAAe,CAAC,OAAO;gBAC7C,MAAM,cAAc,SAAS,cAAc,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;gBAE1E,2CAA2C;gBAC3C,IAAI,eAAe,IAAI;oBACrB,oEAAoE;oBACpE,IAAI,OAAO,WAAW,SAAS,KAAK,aAAa;wBAC/C,OAAO;4BAAE,MAAM;4BAAU,aAAa,WAAW,SAAS;wBAAA;oBAC5D;oBACA,6CAA6C;oBAC7C,OAAO;wBACL,MAAM;wBACN,OAAO,CAAA,QAAA,EAAW,YAAW,yCAAA,CAA2C;wBACxE,YAAY;;gBAEhB;gBAEA,6CAA6C;gBAC7C,OAAO;oBACL,MAAM;oBACN,OAAO,CAAA,QAAA,EAAW,YAAW,2CAAA,CAA6C;oBAC1E,YACE,sFACA,0BACA;;YAEN;QACF;QAEA,OAAO;YACL,MAAM;YACN,OAAO;YACP,YACE;;IAEN;IAEO,OAAO,0BAAuB;QACnC,MAAM,MAAM,IAAI,CAAC,iBAAiB;QAClC,IAAI,IAAI,WAAW,EAAE;YACnB,OAAO,IAAI,WAAW;QACxB;QACA,IAAI,eAAe,IAAI,KAAK,IAAI;QAChC,IAAI,IAAI,UAAU,EAAE;YAClB,gBAAgB,CAAA,wBAAA,EAA2B,IAAI,UAAU,CAAA,CAAE;QAC7D;QACA,MAAM,IAAI,MAAM;IAClB;IAEO,OAAO,gBAAgB,GAAiB,EAAE,SAA6B,EAAA;QAC5E,MAAM,KAAK,IAAI,CAAC,uBAAuB;QACvC,OAAO,IAAI,GAAG,KAAK;IACrB;IAEO,OAAO,uBAAoB;QAChC,IAAI;YACF,MAAM,MAAM,IAAI,CAAC,iBAAiB;YAClC,OAAO,IAAI,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK;QAC/C,EAAE,OAAA,IAAM;YACN,OAAO;QACT;IACF;;uCAGa"}},
    {"offset": {"line": 5002, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5007, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/version.ts"],"sourcesContent":["// Generated automatically during releases by scripts/update-version-files.ts\n// This file provides runtime access to the package version for:\n// - HTTP request headers (e.g., X-Client-Info header for API requests)\n// - Debugging and support (identifying which version is running)\n// - Telemetry and logging (version reporting in errors/analytics)\n// - Ensuring build artifacts match the published package version\nexport const version = '2.74.0'\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,gEAAgE;AAChE,uEAAuE;AACvE,iEAAiE;AACjE,kEAAkE;AAClE,iEAAiE;;;;AAC1D,MAAM,UAAU"}},
    {"offset": {"line": 5017, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5022, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/constants.ts"],"sourcesContent":["import { version } from './version'\n\nexport const DEFAULT_VERSION = `realtime-js/${version}`\nexport const VSN: string = '1.0.0'\n\nexport const VERSION = version\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\nexport const MAX_PUSH_BUFFER_SIZE = 100\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = 'connecting',\n  Open = 'open',\n  Closing = 'closing',\n  Closed = 'closed',\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEO,MAAM,kBAAkB,CAAA,YAAA,EAAe,gLAAA,CAAA,UAAO,CAAA,CAAE;AAChD,MAAM,MAAc;AAEpB,MAAM,UAAU,gLAAA,CAAA,UAAO;AAEvB,MAAM,kBAAkB;AAExB,MAAM,kBAAkB;AACxB,MAAM,uBAAuB;AAEpC,IAAY;AAAZ,CAAA,SAAY,aAAa;IACvB,aAAA,CAAA,aAAA,CAAA,aAAA,GAAA,EAAA,GAAA;IACA,aAAA,CAAA,aAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACA,aAAA,CAAA,aAAA,CAAA,UAAA,GAAA,EAAA,GAAA;IACA,aAAA,CAAA,aAAA,CAAA,SAAA,GAAA,EAAA,GAAA;AACF,CAAC,EALW,iBAAa,CAAb,gBAAa,CAAA,CAAA;AAOzB,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,SAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,SAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;AACF,CAAC,EANW,kBAAc,CAAd,iBAAc,CAAA,CAAA;AAQ1B,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,QAAA,GAAA;IACA,cAAA,CAAA,QAAA,GAAA;IACA,cAAA,CAAA,OAAA,GAAA;IACA,cAAA,CAAA,QAAA,GAAA;IACA,cAAA,CAAA,QAAA,GAAA;IACA,cAAA,CAAA,eAAA,GAAA;AACF,CAAC,EAPW,kBAAc,CAAd,iBAAc,CAAA,CAAA;AAS1B,IAAY;AAAZ,CAAA,SAAY,UAAU;IACpB,UAAA,CAAA,YAAA,GAAA;AACF,CAAC,EAFW,cAAU,CAAV,aAAU,CAAA,CAAA;AAItB,IAAY;AAAZ,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,aAAA,GAAA;IACA,gBAAA,CAAA,OAAA,GAAA;IACA,gBAAA,CAAA,UAAA,GAAA;IACA,gBAAA,CAAA,SAAA,GAAA;AACF,CAAC,EALW,oBAAgB,CAAhB,mBAAgB,CAAA,CAAA"}},
    {"offset": {"line": 5079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5084, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/serializer.ts"],"sourcesContent":["// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: { [key: string]: any }\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)))\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n"],"names":[],"mappings":"AAAA,2HAA2H;AAC3H,8EAA8E;;;;AAEhE,MAAO;IAArB,aAAA;QACE,IAAA,CAAA,aAAa,GAAG;IA0ClB;IAxCE,OAAO,UAAgC,EAAE,QAAkB,EAAA;QACzD,IAAI,WAAW,WAAW,KAAK,aAAa;YAC1C,OAAO,SAAS,IAAI,CAAC,aAAa,CAAC;QACrC;QAEA,IAAI,OAAO,eAAe,UAAU;YAClC,OAAO,SAAS,KAAK,KAAK,CAAC;QAC7B;QAEA,OAAO,SAAS,CAAA;IAClB;IAEQ,cAAc,MAAmB,EAAA;QACvC,MAAM,OAAO,IAAI,SAAS;QAC1B,MAAM,UAAU,IAAI;QAEpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,MAAM;IAC7C;IAEQ,iBACN,MAAmB,EACnB,IAAc,EACd,OAAoB,EAAA;QAOpB,MAAM,YAAY,KAAK,QAAQ,CAAC;QAChC,MAAM,YAAY,KAAK,QAAQ,CAAC;QAChC,IAAI,SAAS,IAAI,CAAC,aAAa,GAAG;QAClC,MAAM,QAAQ,QAAQ,MAAM,CAAC,OAAO,KAAK,CAAC,QAAQ,SAAS;QAC3D,SAAS,SAAS;QAClB,MAAM,QAAQ,QAAQ,MAAM,CAAC,OAAO,KAAK,CAAC,QAAQ,SAAS;QAC3D,SAAS,SAAS;QAClB,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ,MAAM,CAAC,OAAO,KAAK,CAAC,QAAQ,OAAO,UAAU;QAE7E,OAAO;YAAE,KAAK;YAAM,OAAO;YAAO,OAAO;YAAO,SAAS;QAAI;IAC/D"}},
    {"offset": {"line": 5124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5129, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/timer.ts"],"sourcesContent":["/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(\n    public callback: Function,\n    public timerCalc: Function\n  ) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n    this.timer = undefined\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(\n      () => {\n        this.tries = this.tries + 1\n        this.callback()\n      },\n      this.timerCalc(this.tries + 1)\n    )\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAYc,MAAO;IAInB,YACS,QAAkB,EAClB,SAAmB,CAAA;QADnB,IAAA,CAAA,QAAQ,GAAR;QACA,IAAA,CAAA,SAAS,GAAT;QALT,IAAA,CAAA,KAAK,GAAuB;QAC5B,IAAA,CAAA,KAAK,GAAW;QAMd,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,SAAS,GAAG;IACnB;IAEA,QAAK;QACH,IAAI,CAAC,KAAK,GAAG;QACb,aAAa,IAAI,CAAC,KAAK;QACvB,IAAI,CAAC,KAAK,GAAG;IACf;IAEA,8DAA8D;IAC9D,kBAAe;QACb,aAAa,IAAI,CAAC,KAAK;QAEvB,IAAI,CAAC,KAAK,GAAQ,WAChB;YACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG;YAC1B,IAAI,CAAC,QAAQ;QACf,GACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG;IAEhC"}},
    {"offset": {"line": 5166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5171, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/transformers.ts"],"sourcesContent":["/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record | null,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  if (!record) {\n    return {}\n  }\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n\nexport const httpEndpointURL = (socketUrl: string): string => {\n  let url = socketUrl\n  url = url.replace(/^ws/i, 'http')\n  url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '')\n  return url.replace(/\\/+$/, '') + '/api/broadcast'\n}\n"],"names":[],"mappings":"AAAA;;IAIA,0EAA0E;AAC1E,yFAAyF;;;;;;;;;;;;;AAEzF,IAAY;AAAZ,CAAA,SAAY,aAAa;IACvB,aAAA,CAAA,UAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,YAAA,GAAA;IACA,aAAA,CAAA,SAAA,GAAA;IACA,aAAA,CAAA,SAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,YAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,YAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,QAAA,GAAA;IACA,aAAA,CAAA,QAAA,GAAA;IACA,aAAA,CAAA,UAAA,GAAA;IACA,aAAA,CAAA,MAAA,GAAA;IACA,aAAA,CAAA,UAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,OAAA,GAAA;IACA,aAAA,CAAA,YAAA,GAAA;IACA,aAAA,CAAA,cAAA,GAAA;IACA,aAAA,CAAA,SAAA,GAAA;IACA,aAAA,CAAA,UAAA,GAAA;IACA,aAAA,CAAA,YAAA,GAAA;AACF,CAAC,EAzBW,iBAAa,CAAb,gBAAa,CAAA,CAAA;AAqDlB,MAAM,oBAAoB,CAC/B,SACA,QACA,UAAoC,CAAA,CAAE;;IAEtC,MAAM,YAAY,CAAA,KAAA,QAAQ,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE;IAEzC,IAAI,CAAC,QAAQ;QACX,OAAO,CAAA;IACT;IAEA,OAAO,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK;QACtC,GAAG,CAAC,QAAQ,GAAG,cAAc,SAAS,SAAS,QAAQ;QACvD,OAAO;IACT,GAAG,CAAA;AACL;AAgBO,MAAM,gBAAgB,CAC3B,YACA,SACA,QACA;IAEA,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;IAC9C,MAAM,UAAU,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI;IAC5B,MAAM,QAAQ,MAAM,CAAC,WAAW;IAEhC,IAAI,WAAW,CAAC,UAAU,QAAQ,CAAC,UAAU;QAC3C,OAAO,YAAY,SAAS;IAC9B;IAEA,OAAO,KAAK;AACd;AAeO,MAAM,cAAc,CAAC,MAAc;IACxC,2BAA2B;IAC3B,IAAI,KAAK,MAAM,CAAC,OAAO,KAAK;QAC1B,MAAM,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,MAAM;QAC1C,OAAO,QAAQ,OAAO;IACxB;IAEA,wCAAwC;IACxC,OAAQ;QACN,KAAK,cAAc,IAAI;YACrB,OAAO,UAAU;QACnB,KAAK,cAAc,MAAM;QACzB,KAAK,cAAc,MAAM;QACzB,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,OAAO;QAC1B,KAAK,cAAc,GAAG;YACpB,OAAO,SAAS;QAClB,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,KAAK;YACtB,OAAO,OAAO;QAChB,KAAK,cAAc,SAAS;YAC1B,OAAO,kBAAkB,QAAO,yCAAyC;QAC3E,KAAK,cAAc,OAAO;QAC1B,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,SAAS;QAC5B,KAAK,cAAc,SAAS;QAC5B,KAAK,cAAc,SAAS;QAC5B,KAAK,cAAc,KAAK;QACxB,KAAK,cAAc,OAAO;QAC1B,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,IAAI;QACvB,KAAK,cAAc,WAAW;QAC9B,KAAK,cAAc,MAAM;QACzB,KAAK,cAAc,OAAO;QAC1B,KAAK,cAAc,SAAS;YAC1B,OAAO,KAAK;QACd;YACE,uCAAuC;YACvC,OAAO,KAAK;IAChB;AACF;AAEA,MAAM,OAAO,CAAC;IACZ,OAAO;AACT;AACO,MAAM,YAAY,CAAC;IACxB,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AACO,MAAM,WAAW,CAAC;IACvB,IAAI,OAAO,UAAU,UAAU;QAC7B,MAAM,cAAc,WAAW;QAC/B,IAAI,CAAC,OAAO,KAAK,CAAC,cAAc;YAC9B,OAAO;QACT;IACF;IACA,OAAO;AACT;AACO,MAAM,SAAS,CAAC;IACrB,IAAI,OAAO,UAAU,UAAU;QAC7B,IAAI;YACF,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,CAAA,kBAAA,EAAqB,MAAK,CAAE;YACxC,OAAO;QACT;IACF;IACA,OAAO;AACT;AAYO,MAAM,UAAU,CAAC,OAAoB;IAC1C,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,MAAM,UAAU,MAAM,MAAM,GAAG;IAC/B,MAAM,aAAa,KAAK,CAAC,QAAQ;IACjC,MAAM,YAAY,KAAK,CAAC,EAAE;IAE1B,+DAA+D;IAC/D,IAAI,cAAc,OAAO,eAAe,KAAK;QAC3C,IAAI;QACJ,MAAM,UAAU,MAAM,KAAK,CAAC,GAAG;QAE/B,+DAA+D;QAC/D,IAAI;YACF,MAAM,KAAK,KAAK,CAAC,MAAM,UAAU;QACnC,EAAE,OAAO,GAAG;YACV,4DAA4D;YAC5D,MAAM,UAAU,QAAQ,KAAK,CAAC,OAAO,EAAE;QACzC;QAEA,OAAO,IAAI,GAAG,CAAC,CAAC,MAAmB,YAAY,MAAM;IACvD;IAEA,OAAO;AACT;AASO,MAAM,oBAAoB,CAAC;IAChC,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,MAAM,OAAO,CAAC,KAAK;IAC5B;IAEA,OAAO;AACT;AAEO,MAAM,kBAAkB,CAAC;IAC9B,IAAI,MAAM;IACV,MAAM,IAAI,OAAO,CAAC,QAAQ;IAC1B,MAAM,IAAI,OAAO,CAAC,mDAAmD;IACrE,OAAO,IAAI,OAAO,CAAC,QAAQ,MAAM;AACnC"}},
    {"offset": {"line": 5343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5348, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/lib/push.ts"],"sourcesContent":["import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport type RealtimeChannel from '../RealtimeChannel'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: { [key: string]: any }\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    public event: string,\n    public payload: { [key: string]: any } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel._joinRef(),\n    })\n  }\n\n  updatePayload(payload: { [key: string]: any }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket._makeRef()\n    this.refEvent = this.channel._replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    this.channel._on(this.refEvent, {}, callback)\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent) this.channel._trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    this.channel._off(this.refEvent, {})\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({ status, response }: { status: string; response: Function }) {\n    this.recHooks.filter((h) => h.status === status).forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5460, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/RealtimePresence.ts"],"sourcesContent":["/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport type { PresenceOpts, PresenceOnJoinCallback, PresenceOnLeaveCallback } from 'phoenix'\nimport type RealtimeChannel from './RealtimeChannel'\n\ntype Presence<T extends { [key: string]: any } = {}> = {\n  presence_ref: string\n} & T\n\nexport type RealtimePresenceState<T extends { [key: string]: any } = {}> = {\n  [key: string]: Presence<T>[]\n}\n\nexport type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}`\n  key: string\n  currentPresences: Presence<T>[]\n  newPresences: Presence<T>[]\n}\n\nexport type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}`\n  key: string\n  currentPresences: Presence<T>[]\n  leftPresences: Presence<T>[]\n}\n\nexport enum REALTIME_PRESENCE_LISTEN_EVENTS {\n  SYNC = 'sync',\n  JOIN = 'join',\n  LEAVE = 'leave',\n}\n\ntype PresenceDiff = {\n  joins: RealtimePresenceState\n  leaves: RealtimePresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: {\n    metas: {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  }\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: Presence[]) => T\n\nexport default class RealtimePresence {\n  state: RealtimePresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  enabled: boolean = false\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    opts?: PresenceOpts\n  ) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel._on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel._joinRef()\n\n      this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel._on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave)\n\n        onSync()\n      }\n    })\n\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel._trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences,\n      })\n    })\n\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel._trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences,\n      })\n    })\n\n    this.onSync(() => {\n      this.channel._trigger('presence', { event: 'sync' })\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @internal\n   */\n  private static syncState(\n    currentState: RealtimePresenceState,\n    newState: RawPresenceState | RealtimePresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: RealtimePresenceState = {}\n    const leaves: RealtimePresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map((m: Presence) => m.presence_ref)\n        const curPresenceRefs = currentPresences.map((m: Presence) => m.presence_ref)\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   *\n   * @internal\n   */\n  private static syncDiff(\n    state: RealtimePresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key] ?? []\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map((m: Presence) => m.presence_ref)\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceRefsToRemove = leftPresences.map((m: Presence) => m.presence_ref)\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceRefsToRemove.indexOf(m.presence_ref) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /** @internal */\n  private static map<T = any>(obj: RealtimePresenceState, func: PresenceChooser<T>): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   *\n   * @internal\n   */\n  private static transformState(\n    state: RawPresenceState | RealtimePresenceState\n  ): RealtimePresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_ref'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as RealtimePresenceState)\n  }\n\n  /** @internal */\n  private static cloneDeep(obj: { [key: string]: any }) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  /** @internal */\n  private onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  /** @internal */\n  private onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  /** @internal */\n  private onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  /** @internal */\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel._joinRef()\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5677, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5682, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts"],"sourcesContent":["import { CHANNEL_EVENTS, CHANNEL_STATES, MAX_PUSH_BUFFER_SIZE } from './lib/constants'\nimport Push from './lib/push'\nimport type RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\nimport RealtimePresence, { REALTIME_PRESENCE_LISTEN_EVENTS } from './RealtimePresence'\nimport type {\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n} from './RealtimePresence'\nimport * as Transformers from './lib/transformers'\nimport { httpEndpointURL } from './lib/transformers'\n\ntype ReplayOption = {\n  since: number\n  limit?: number\n}\n\nexport type RealtimeChannelOptions = {\n  config: {\n    /**\n     * self option enables client to receive message it broadcast\n     * ack option instructs server to acknowledge that broadcast message was received\n     * replay option instructs server to replay broadcast messages\n     */\n    broadcast?: { self?: boolean; ack?: boolean; replay?: ReplayOption }\n    /**\n     * key option is used to track presence payload across clients\n     */\n    presence?: { key?: string; enabled?: boolean }\n    /**\n     * defines if the channel is private or not and if RLS policies will be used to check data\n     */\n    private?: boolean\n  }\n}\n\ntype RealtimePostgresChangesPayloadBase = {\n  schema: string\n  table: string\n  commit_timestamp: string\n  errors: string[]\n}\n\nexport type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`\n    new: T\n    old: {}\n  }\n\nexport type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`\n    new: T\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`\n    new: {}\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =\n  | RealtimePostgresInsertPayload<T>\n  | RealtimePostgresUpdatePayload<T>\n  | RealtimePostgresDeletePayload<T>\n\nexport type RealtimePostgresChangesFilter<T extends `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT}`> = {\n  /**\n   * The type of database change to listen to.\n   */\n  event: T\n  /**\n   * The database schema to listen to.\n   */\n  schema: string\n  /**\n   * The database table to listen to.\n   */\n  table?: string\n  /**\n   * Receive database changes when filter is matched.\n   */\n  filter?: string\n}\n\nexport type RealtimeChannelSendResponse = 'ok' | 'timed out' | 'error'\n\nexport enum REALTIME_POSTGRES_CHANGES_LISTEN_EVENT {\n  ALL = '*',\n  INSERT = 'INSERT',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n}\n\nexport enum REALTIME_LISTEN_TYPES {\n  BROADCAST = 'broadcast',\n  PRESENCE = 'presence',\n  POSTGRES_CHANGES = 'postgres_changes',\n  SYSTEM = 'system',\n}\n\nexport enum REALTIME_SUBSCRIBE_STATES {\n  SUBSCRIBED = 'SUBSCRIBED',\n  TIMED_OUT = 'TIMED_OUT',\n  CLOSED = 'CLOSED',\n  CHANNEL_ERROR = 'CHANNEL_ERROR',\n}\n\nexport const REALTIME_CHANNEL_STATES = CHANNEL_STATES\n\ninterface PostgresChangesFilters {\n  postgres_changes: {\n    id: string\n    event: string\n    schema?: string\n    table?: string\n    filter?: string\n  }[]\n}\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nexport default class RealtimeChannel {\n  bindings: {\n    [key: string]: {\n      type: string\n      filter: { [key: string]: any }\n      callback: Function\n      id?: string\n    }[]\n  } = {}\n  timeout: number\n  state: CHANNEL_STATES = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n  presence: RealtimePresence\n  broadcastEndpointURL: string\n  subTopic: string\n  private: boolean\n\n  constructor(\n    /** Topic name can be any string. */\n    public topic: string,\n    public params: RealtimeChannelOptions = { config: {} },\n    public socket: RealtimeClient\n  ) {\n    this.subTopic = topic.replace(/^realtime:/i, '')\n    this.params.config = {\n      ...{\n        broadcast: { ack: false, self: false },\n        presence: { key: '', enabled: false },\n        private: false,\n      },\n      ...params.config,\n    }\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs)\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this._onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket._remove(this)\n    })\n    this._onError((reason: string) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this._isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n\n    this.joinPush.receive('error', (reason: any) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {\n      this._trigger(this._replyEventName(ref), payload)\n    })\n\n    this.presence = new RealtimePresence(this)\n\n    this.broadcastEndpointURL = httpEndpointURL(this.socket.endPoint)\n    this.private = this.params.config.private || false\n\n    if (!this.private && this.params.config?.broadcast?.replay) {\n      throw `tried to use replay on public channel '${this.topic}'. It must be a private channel.`\n    }\n  }\n\n  /** Subscribe registers your client with the server */\n  subscribe(\n    callback?: (status: REALTIME_SUBSCRIBE_STATES, err?: Error) => void,\n    timeout = this.timeout\n  ): RealtimeChannel {\n    if (!this.socket.isConnected()) {\n      this.socket.connect()\n    }\n    if (this.state == CHANNEL_STATES.closed) {\n      const {\n        config: { broadcast, presence, private: isPrivate },\n      } = this.params\n\n      const postgres_changes = this.bindings.postgres_changes?.map((r) => r.filter) ?? []\n\n      const presence_enabled =\n        (!!this.bindings[REALTIME_LISTEN_TYPES.PRESENCE] &&\n          this.bindings[REALTIME_LISTEN_TYPES.PRESENCE].length > 0) ||\n        this.params.config.presence?.enabled === true\n      const accessTokenPayload: { access_token?: string } = {}\n      const config = {\n        broadcast,\n        presence: { ...presence, enabled: presence_enabled },\n        postgres_changes,\n        private: isPrivate,\n      }\n\n      if (this.socket.accessTokenValue) {\n        accessTokenPayload.access_token = this.socket.accessTokenValue\n      }\n\n      this._onError((e: Error) => callback?.(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e))\n\n      this._onClose(() => callback?.(REALTIME_SUBSCRIBE_STATES.CLOSED))\n\n      this.updateJoinPayload({ ...{ config }, ...accessTokenPayload })\n\n      this.joinedOnce = true\n      this._rejoin(timeout)\n\n      this.joinPush\n        .receive('ok', async ({ postgres_changes }: PostgresChangesFilters) => {\n          this.socket.setAuth()\n          if (postgres_changes === undefined) {\n            callback?.(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED)\n            return\n          } else {\n            const clientPostgresBindings = this.bindings.postgres_changes\n            const bindingsLen = clientPostgresBindings?.length ?? 0\n            const newPostgresBindings = []\n\n            for (let i = 0; i < bindingsLen; i++) {\n              const clientPostgresBinding = clientPostgresBindings[i]\n              const {\n                filter: { event, schema, table, filter },\n              } = clientPostgresBinding\n              const serverPostgresFilter = postgres_changes && postgres_changes[i]\n\n              if (\n                serverPostgresFilter &&\n                serverPostgresFilter.event === event &&\n                serverPostgresFilter.schema === schema &&\n                serverPostgresFilter.table === table &&\n                serverPostgresFilter.filter === filter\n              ) {\n                newPostgresBindings.push({\n                  ...clientPostgresBinding,\n                  id: serverPostgresFilter.id,\n                })\n              } else {\n                this.unsubscribe()\n                this.state = CHANNEL_STATES.errored\n\n                callback?.(\n                  REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR,\n                  new Error('mismatch between server and client bindings for postgres changes')\n                )\n                return\n              }\n            }\n\n            this.bindings.postgres_changes = newPostgresBindings\n\n            callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED)\n            return\n          }\n        })\n        .receive('error', (error: { [key: string]: any }) => {\n          this.state = CHANNEL_STATES.errored\n          callback?.(\n            REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR,\n            new Error(JSON.stringify(Object.values(error).join(', ') || 'error'))\n          )\n          return\n        })\n        .receive('timeout', () => {\n          callback?.(REALTIME_SUBSCRIBE_STATES.TIMED_OUT)\n          return\n        })\n    }\n    return this\n  }\n\n  presenceState<T extends { [key: string]: any } = {}>(): RealtimePresenceState<T> {\n    return this.presence.state as RealtimePresenceState<T>\n  }\n\n  async track(\n    payload: { [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'track',\n        payload,\n      },\n      opts.timeout || this.timeout\n    )\n  }\n\n  async untrack(opts: { [key: string]: any } = {}): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'untrack',\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates an event handler that listens to changes.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.SYNC}` },\n    callback: () => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}` },\n    callback: (payload: RealtimePresenceJoinPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}` },\n    callback: (payload: RealtimePresenceLeavePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL}`>,\n    callback: (payload: RealtimePostgresChangesPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`>,\n    callback: (payload: RealtimePostgresInsertPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`>,\n    callback: (payload: RealtimePostgresUpdatePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`>,\n    callback: (payload: RealtimePostgresDeletePayload<T>) => void\n  ): RealtimeChannel\n  /**\n   * The following is placed here to display on supabase.com/docs/reference/javascript/subscribe.\n   * @param type One of \"broadcast\", \"presence\", or \"postgres_changes\".\n   * @param filter Custom object specific to the Realtime feature detailing which payloads to receive.\n   * @param callback Function to be invoked when event handler is triggered.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      meta?: {\n        replayed?: boolean\n        id: string\n      }\n      [key: string]: any\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      meta?: {\n        replayed?: boolean\n        id: string\n      }\n      payload: T\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.SYSTEM}`,\n    filter: {},\n    callback: (payload: any) => void\n  ): RealtimeChannel\n  on(\n    type: `${REALTIME_LISTEN_TYPES}`,\n    filter: { event: string; [key: string]: string },\n    callback: (payload: any) => void\n  ): RealtimeChannel {\n    if (this.state === CHANNEL_STATES.joined && type === REALTIME_LISTEN_TYPES.PRESENCE) {\n      this.socket.log(\n        'channel',\n        `resubscribe to ${this.topic} due to change in presence callbacks on joined channel`\n      )\n      this.unsubscribe().then(() => this.subscribe())\n    }\n    return this._on(type, filter, callback)\n  }\n  /**\n   * Sends a message into the channel.\n   *\n   * @param args Arguments to send to channel\n   * @param args.type The type of event to send\n   * @param args.event The name of the event being sent\n   * @param args.payload Payload to be sent\n   * @param opts Options to be used during the send process\n   */\n  async send(\n    args: {\n      type: 'broadcast' | 'presence' | 'postgres_changes'\n      event: string\n      payload?: any\n      [key: string]: any\n    },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    if (!this._canPush() && args.type === 'broadcast') {\n      const { event, payload: endpoint_payload } = args\n      const authorization = this.socket.accessTokenValue\n        ? `Bearer ${this.socket.accessTokenValue}`\n        : ''\n      const options = {\n        method: 'POST',\n        headers: {\n          Authorization: authorization,\n          apikey: this.socket.apiKey ? this.socket.apiKey : '',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          messages: [\n            {\n              topic: this.subTopic,\n              event,\n              payload: endpoint_payload,\n              private: this.private,\n            },\n          ],\n        }),\n      }\n\n      try {\n        const response = await this._fetchWithTimeout(\n          this.broadcastEndpointURL,\n          options,\n          opts.timeout ?? this.timeout\n        )\n\n        await response.body?.cancel()\n        return response.ok ? 'ok' : 'error'\n      } catch (error: any) {\n        if (error.name === 'AbortError') {\n          return 'timed out'\n        } else {\n          return 'error'\n        }\n      }\n    } else {\n      return new Promise((resolve) => {\n        const push = this._push(args.type, args, opts.timeout || this.timeout)\n\n        if (args.type === 'broadcast' && !this.params?.config?.broadcast?.ack) {\n          resolve('ok')\n        }\n\n        push.receive('ok', () => resolve('ok'))\n        push.receive('error', () => resolve('error'))\n        push.receive('timeout', () => resolve('timed out'))\n      })\n    }\n  }\n\n  updateJoinPayload(payload: { [key: string]: any }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel.\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout): Promise<'ok' | 'timed out' | 'error'> {\n    this.state = CHANNEL_STATES.leaving\n    const onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef())\n    }\n\n    this.joinPush.destroy()\n\n    let leavePush: Push | null = null\n\n    return new Promise<RealtimeChannelSendResponse>((resolve) => {\n      leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n      leavePush\n        .receive('ok', () => {\n          onClose()\n          resolve('ok')\n        })\n        .receive('timeout', () => {\n          onClose()\n          resolve('timed out')\n        })\n        .receive('error', () => {\n          resolve('error')\n        })\n\n      leavePush.send()\n      if (!this._canPush()) {\n        leavePush.trigger('ok', {})\n      }\n    }).finally(() => {\n      leavePush?.destroy()\n    })\n  }\n  /**\n   * Teardown the channel.\n   *\n   * Destroys and stops related timers.\n   */\n  teardown() {\n    this.pushBuffer.forEach((push: Push) => push.destroy())\n    this.pushBuffer = []\n    this.rejoinTimer.reset()\n    this.joinPush.destroy()\n    this.state = CHANNEL_STATES.closed\n    this.bindings = {}\n  }\n\n  /** @internal */\n\n  async _fetchWithTimeout(url: string, options: { [key: string]: any }, timeout: number) {\n    const controller = new AbortController()\n    const id = setTimeout(() => controller.abort(), timeout)\n\n    const response = await this.socket.fetch(url, {\n      ...options,\n      signal: controller.signal,\n    })\n\n    clearTimeout(id)\n\n    return response\n  }\n\n  /** @internal */\n  _push(event: string, payload: { [key: string]: any }, timeout = this.timeout) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this._canPush()) {\n      pushEvent.send()\n    } else {\n      this._addToPushBuffer(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** @internal */\n  _addToPushBuffer(pushEvent: Push) {\n    pushEvent.startTimeout()\n    this.pushBuffer.push(pushEvent)\n\n    // Enforce buffer size limit\n    if (this.pushBuffer.length > MAX_PUSH_BUFFER_SIZE) {\n      const removedPush = this.pushBuffer.shift()\n      if (removedPush) {\n        removedPush.destroy()\n        this.socket.log(\n          'channel',\n          `discarded push due to buffer overflow: ${removedPush.event}`,\n          removedPush.payload\n        )\n      }\n    }\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   *\n   * @internal\n   */\n  _onMessage(_event: string, payload: any, _ref?: string) {\n    return payload\n  }\n\n  /** @internal */\n  _isMember(topic: string): boolean {\n    return this.topic === topic\n  }\n\n  /** @internal */\n  _joinRef(): string {\n    return this.joinPush.ref\n  }\n\n  /** @internal */\n  _trigger(type: string, payload?: any, ref?: string) {\n    const typeLower = type.toLocaleLowerCase()\n    const { close, error, leave, join } = CHANNEL_EVENTS\n    const events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n      return\n    }\n    let handledPayload = this._onMessage(typeLower, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    if (['insert', 'update', 'delete'].includes(typeLower)) {\n      this.bindings.postgres_changes\n        ?.filter((bind) => {\n          return bind.filter?.event === '*' || bind.filter?.event?.toLocaleLowerCase() === typeLower\n        })\n        .map((bind) => bind.callback(handledPayload, ref))\n    } else {\n      this.bindings[typeLower]\n        ?.filter((bind) => {\n          if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n            if ('id' in bind) {\n              const bindId = bind.id\n              const bindEvent = bind.filter?.event\n              return (\n                bindId &&\n                payload.ids?.includes(bindId) &&\n                (bindEvent === '*' ||\n                  bindEvent?.toLocaleLowerCase() === payload.data?.type.toLocaleLowerCase())\n              )\n            } else {\n              const bindEvent = bind?.filter?.event?.toLocaleLowerCase()\n              return bindEvent === '*' || bindEvent === payload?.event?.toLocaleLowerCase()\n            }\n          } else {\n            return bind.type.toLocaleLowerCase() === typeLower\n          }\n        })\n        .map((bind) => {\n          if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n            const postgresChanges = handledPayload.data\n            const { schema, table, commit_timestamp, type, errors } = postgresChanges\n            const enrichedPayload = {\n              schema: schema,\n              table: table,\n              commit_timestamp: commit_timestamp,\n              eventType: type,\n              new: {},\n              old: {},\n              errors: errors,\n            }\n            handledPayload = {\n              ...enrichedPayload,\n              ...this._getPayloadRecords(postgresChanges),\n            }\n          }\n          bind.callback(handledPayload, ref)\n        })\n    }\n  }\n\n  /** @internal */\n  _isClosed(): boolean {\n    return this.state === CHANNEL_STATES.closed\n  }\n\n  /** @internal */\n  _isJoined(): boolean {\n    return this.state === CHANNEL_STATES.joined\n  }\n\n  /** @internal */\n  _isJoining(): boolean {\n    return this.state === CHANNEL_STATES.joining\n  }\n\n  /** @internal */\n  _isLeaving(): boolean {\n    return this.state === CHANNEL_STATES.leaving\n  }\n\n  /** @internal */\n  _replyEventName(ref: string): string {\n    return `chan_reply_${ref}`\n  }\n\n  /** @internal */\n  _on(type: string, filter: { [key: string]: any }, callback: Function) {\n    const typeLower = type.toLocaleLowerCase()\n    const binding = {\n      type: typeLower,\n      filter: filter,\n      callback: callback,\n    }\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower].push(binding)\n    } else {\n      this.bindings[typeLower] = [binding]\n    }\n\n    return this\n  }\n\n  /** @internal */\n  _off(type: string, filter: { [key: string]: any }) {\n    const typeLower = type.toLocaleLowerCase()\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n        return !(\n          bind.type?.toLocaleLowerCase() === typeLower &&\n          RealtimeChannel.isEqual(bind.filter, filter)\n        )\n      })\n    }\n    return this\n  }\n\n  /** @internal */\n  private static isEqual(obj1: { [key: string]: string }, obj2: { [key: string]: string }) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false\n    }\n\n    for (const k in obj1) {\n      if (obj1[k] !== obj2[k]) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /** @internal */\n  private _rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this._rejoin()\n    }\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel closes.\n   *\n   * @internal\n   */\n  private _onClose(callback: Function) {\n    this._on(CHANNEL_EVENTS.close, {}, callback)\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel encounteres an error.\n   *\n   * @internal\n   */\n  private _onError(callback: Function) {\n    this._on(CHANNEL_EVENTS.error, {}, (reason: string) => callback(reason))\n  }\n\n  /**\n   * Returns `true` if the socket is connected and the channel has been joined.\n   *\n   * @internal\n   */\n  private _canPush(): boolean {\n    return this.socket.isConnected() && this._isJoined()\n  }\n\n  /** @internal */\n  private _rejoin(timeout = this.timeout): void {\n    if (this._isLeaving()) {\n      return\n    }\n    this.socket._leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /** @internal */\n  private _getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(payload.columns, payload.record)\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(payload.columns, payload.old_record)\n    }\n\n    return records\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6211, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/RealtimeClient.ts"],"sourcesContent":["import WebSocketFactory, { WebSocketLike } from './lib/websocket-factory'\n\nimport {\n  CHANNEL_EVENTS,\n  CONNECTION_STATE,\n  DEFAULT_VERSION,\n  DEFAULT_TIMEOUT,\n  SOCKET_STATES,\n  TRANSPORTS,\n  VSN,\n  WS_CLOSE_NORMAL,\n} from './lib/constants'\n\nimport Serializer from './lib/serializer'\nimport Timer from './lib/timer'\n\nimport { httpEndpointURL } from './lib/transformers'\nimport RealtimeChannel from './RealtimeChannel'\nimport type { RealtimeChannelOptions } from './RealtimeChannel'\n\ntype Fetch = typeof fetch\n\nexport type Channel = {\n  name: string\n  inserted_at: string\n  updated_at: string\n  id: number\n}\nexport type LogLevel = 'info' | 'warn' | 'error'\n\nexport type RealtimeMessage = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n  join_ref?: string\n}\n\nexport type RealtimeRemoveChannelResponse = 'ok' | 'timed out' | 'error'\nexport type HeartbeatStatus = 'sent' | 'ok' | 'error' | 'timeout' | 'disconnected'\n\nconst noop = () => {}\n\ntype RealtimeClientState = 'connecting' | 'connected' | 'disconnecting' | 'disconnected'\n\n// Connection-related constants\nconst CONNECTION_TIMEOUTS = {\n  HEARTBEAT_INTERVAL: 25000,\n  RECONNECT_DELAY: 10,\n  HEARTBEAT_TIMEOUT_FALLBACK: 100,\n} as const\n\nconst RECONNECT_INTERVALS = [1000, 2000, 5000, 10000] as const\nconst DEFAULT_RECONNECT_FALLBACK = 10000\n\nexport interface WebSocketLikeConstructor {\n  new (address: string | URL, subprotocols?: string | string[] | undefined): WebSocketLike\n  // Allow additional properties that may exist on WebSocket constructors\n  [key: string]: any\n}\n\nexport interface WebSocketLikeError {\n  error: any\n  message: string\n  type: string\n}\n\nexport type RealtimeClientOptions = {\n  transport?: WebSocketLikeConstructor\n  timeout?: number\n  heartbeatIntervalMs?: number\n  heartbeatCallback?: (status: HeartbeatStatus) => void\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: any }\n  //Deprecated: Use it in favour of correct casing `logLevel`\n  log_level?: LogLevel\n  logLevel?: LogLevel\n  fetch?: Fetch\n  worker?: boolean\n  workerUrl?: string\n  accessToken?: () => Promise<string | null>\n}\n\nconst WORKER_SCRIPT = `\n  addEventListener(\"message\", (e) => {\n    if (e.data.event === \"start\") {\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\n    }\n  });`\n\nexport default class RealtimeClient {\n  accessTokenValue: string | null = null\n  apiKey: string | null = null\n  channels: RealtimeChannel[] = new Array()\n  endPoint: string = ''\n  httpEndpoint: string = ''\n  /** @deprecated headers cannot be set on websocket connections */\n  headers?: { [key: string]: string } = {}\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: WebSocketLikeConstructor | null = null\n  heartbeatIntervalMs: number = CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  heartbeatCallback: (status: HeartbeatStatus) => void = noop\n  ref: number = 0\n  reconnectTimer: Timer | null = null\n  logger: Function = noop\n  logLevel?: LogLevel\n  encode!: Function\n  decode!: Function\n  reconnectAfterMs!: Function\n  conn: WebSocketLike | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n  fetch: Fetch\n  accessToken: (() => Promise<string | null>) | null = null\n  worker?: boolean\n  workerUrl?: string\n  workerRef?: Worker\n  private _connectionState: RealtimeClientState = 'disconnected'\n  private _wasManualDisconnect: boolean = false\n  private _authPromise: Promise<void> | null = null\n\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers Deprecated: headers cannot be set on websocket connections and this option will be removed in the future.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.heartbeatCallback The optional function to handle heartbeat status.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.logLevel Sets the log level for Realtime\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n   * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n   */\n  constructor(endPoint: string, options?: RealtimeClientOptions) {\n    // Validate required parameters\n    if (!options?.params?.apikey) {\n      throw new Error('API key is required to connect to Realtime')\n    }\n    this.apiKey = options.params.apikey\n\n    // Initialize endpoint URLs\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.httpEndpoint = httpEndpointURL(endPoint)\n\n    this._initializeOptions(options)\n    this._setupReconnectionTimer()\n    this.fetch = this._resolveFetch(options?.fetch)\n  }\n\n  /**\n   * Connects the socket, unless already connected.\n   */\n  connect(): void {\n    // Skip if already connecting, disconnecting, or connected\n    if (\n      this.isConnecting() ||\n      this.isDisconnecting() ||\n      (this.conn !== null && this.isConnected())\n    ) {\n      return\n    }\n\n    this._setConnectionState('connecting')\n    this._setAuthSafely('connect')\n\n    // Establish WebSocket connection\n    if (this.transport) {\n      // Use custom transport if provided\n      this.conn = new this.transport(this.endpointURL()) as WebSocketLike\n    } else {\n      // Try to use native WebSocket\n      try {\n        this.conn = WebSocketFactory.createWebSocket(this.endpointURL())\n      } catch (error) {\n        this._setConnectionState('disconnected')\n        const errorMessage = (error as Error).message\n\n        // Provide helpful error message based on environment\n        if (errorMessage.includes('Node.js')) {\n          throw new Error(\n            `${errorMessage}\\n\\n` +\n              'To use Realtime in Node.js, you need to provide a WebSocket implementation:\\n\\n' +\n              'Option 1: Use Node.js 22+ which has native WebSocket support\\n' +\n              'Option 2: Install and provide the \"ws\" package:\\n\\n' +\n              '  npm install ws\\n\\n' +\n              '  import ws from \"ws\"\\n' +\n              '  const client = new RealtimeClient(url, {\\n' +\n              '    ...options,\\n' +\n              '    transport: ws\\n' +\n              '  })'\n          )\n        }\n        throw new Error(`WebSocket not available: ${errorMessage}`)\n      }\n    }\n    this._setupConnectionHandlers()\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   * @returns string The URL of the websocket.\n   */\n  endpointURL(): string {\n    return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }))\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(code?: number, reason?: string): void {\n    if (this.isDisconnecting()) {\n      return\n    }\n\n    this._setConnectionState('disconnecting', true)\n\n    if (this.conn) {\n      // Setup fallback timer to prevent hanging in disconnecting state\n      const fallbackTimer = setTimeout(() => {\n        this._setConnectionState('disconnected')\n      }, 100)\n\n      this.conn.onclose = () => {\n        clearTimeout(fallbackTimer)\n        this._setConnectionState('disconnected')\n      }\n\n      // Close the WebSocket connection\n      if (code) {\n        this.conn.close(code, reason ?? '')\n      } else {\n        this.conn.close()\n      }\n\n      this._teardownConnection()\n    } else {\n      this._setConnectionState('disconnected')\n    }\n  }\n\n  /**\n   * Returns all created channels\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.channels\n  }\n\n  /**\n   * Unsubscribes and removes a single channel\n   * @param channel A RealtimeChannel instance\n   */\n  async removeChannel(channel: RealtimeChannel): Promise<RealtimeRemoveChannelResponse> {\n    const status = await channel.unsubscribe()\n\n    if (this.channels.length === 0) {\n      this.disconnect()\n    }\n\n    return status\n  }\n\n  /**\n   * Unsubscribes and removes all channels\n   */\n  async removeAllChannels(): Promise<RealtimeRemoveChannelResponse[]> {\n    const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()))\n    this.channels = []\n    this.disconnect()\n    return values_1\n  }\n\n  /**\n   * Logs the message.\n   *\n   * For customized logging, `this.logger` can be overridden.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState(): CONNECTION_STATE {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return CONNECTION_STATE.Connecting\n      case SOCKET_STATES.open:\n        return CONNECTION_STATE.Open\n      case SOCKET_STATES.closing:\n        return CONNECTION_STATE.Closing\n      default:\n        return CONNECTION_STATE.Closed\n    }\n  }\n\n  /**\n   * Returns `true` is the connection is open.\n   */\n  isConnected(): boolean {\n    return this.connectionState() === CONNECTION_STATE.Open\n  }\n\n  /**\n   * Returns `true` if the connection is currently connecting.\n   */\n  isConnecting(): boolean {\n    return this._connectionState === 'connecting'\n  }\n\n  /**\n   * Returns `true` if the connection is currently disconnecting.\n   */\n  isDisconnecting(): boolean {\n    return this._connectionState === 'disconnecting'\n  }\n\n  channel(topic: string, params: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    const realtimeTopic = `realtime:${topic}`\n    const exists = this.getChannels().find((c: RealtimeChannel) => c.topic === realtimeTopic)\n\n    if (!exists) {\n      const chan = new RealtimeChannel(`realtime:${topic}`, params, this)\n      this.channels.push(chan)\n\n      return chan\n    } else {\n      return exists\n    }\n  }\n\n  /**\n   * Push out a message if the socket is connected.\n   *\n   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n   */\n  push(data: RealtimeMessage): void {\n    const { topic, event, payload, ref } = data\n    const callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      callback()\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * If param is null it will use the `accessToken` callback function or the token set on the client.\n   *\n   * On callback used, it will set the value of the token internal to the client.\n   *\n   * @param token A JWT string to override the token set on the client.\n   */\n  async setAuth(token: string | null = null): Promise<void> {\n    this._authPromise = this._performAuth(token)\n    try {\n      await this._authPromise\n    } finally {\n      this._authPromise = null\n    }\n  }\n  /**\n   * Sends a heartbeat message if the socket is connected.\n   */\n  async sendHeartbeat() {\n    if (!this.isConnected()) {\n      try {\n        this.heartbeatCallback('disconnected')\n      } catch (e) {\n        this.log('error', 'error in heartbeat callback', e)\n      }\n      return\n    }\n\n    // Handle heartbeat timeout and force reconnection if needed\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log('transport', 'heartbeat timeout. Attempting to re-establish connection')\n      try {\n        this.heartbeatCallback('timeout')\n      } catch (e) {\n        this.log('error', 'error in heartbeat callback', e)\n      }\n\n      // Force reconnection after heartbeat timeout\n      this._wasManualDisconnect = false\n      this.conn?.close(WS_CLOSE_NORMAL, 'heartbeat timeout')\n\n      setTimeout(() => {\n        if (!this.isConnected()) {\n          this.reconnectTimer?.scheduleTimeout()\n        }\n      }, CONNECTION_TIMEOUTS.HEARTBEAT_TIMEOUT_FALLBACK)\n      return\n    }\n\n    // Send heartbeat message to server\n    this.pendingHeartbeatRef = this._makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    try {\n      this.heartbeatCallback('sent')\n    } catch (e) {\n      this.log('error', 'error in heartbeat callback', e)\n    }\n\n    this._setAuthSafely('heartbeat')\n  }\n\n  onHeartbeat(callback: (status: HeartbeatStatus) => void): void {\n    this.heartbeatCallback = callback\n  }\n  /**\n   * Flushes send buffer\n   */\n  flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  /**\n   * Use either custom fetch, if provided, or default fetch to make HTTP requests\n   *\n   * @internal\n   */\n  _resolveFetch = (customFetch?: Fetch): Fetch => {\n    let _fetch: Fetch\n    if (customFetch) {\n      _fetch = customFetch\n    } else if (typeof fetch === 'undefined') {\n      // Node.js environment without native fetch\n      _fetch = (...args) =>\n        import('@supabase/node-fetch' as any)\n          .then(({ default: fetch }) => fetch(...args))\n          .catch((error) => {\n            throw new Error(\n              `Failed to load @supabase/node-fetch: ${error.message}. ` +\n                `This is required for HTTP requests in Node.js environments without native fetch.`\n            )\n          })\n    } else {\n      _fetch = fetch\n    }\n    return (...args) => _fetch(...args)\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   *\n   * @internal\n   */\n  _makeRef(): string {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Unsubscribe from channels with the specified topic.\n   *\n   * @internal\n   */\n  _leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c._isJoined() || c._isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   *\n   * @internal\n   */\n  _remove(channel: RealtimeChannel) {\n    this.channels = this.channels.filter((c) => c.topic !== channel.topic)\n  }\n\n  /** @internal */\n  private _onConnMessage(rawMessage: { data: any }) {\n    this.decode(rawMessage.data, (msg: RealtimeMessage) => {\n      // Handle heartbeat responses\n      if (msg.topic === 'phoenix' && msg.event === 'phx_reply') {\n        try {\n          this.heartbeatCallback(msg.payload.status === 'ok' ? 'ok' : 'error')\n        } catch (e) {\n          this.log('error', 'error in heartbeat callback', e)\n        }\n      }\n\n      // Handle pending heartbeat reference cleanup\n      if (msg.ref && msg.ref === this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null\n      }\n\n      // Log incoming message\n      const { topic, event, payload, ref } = msg\n      const refString = ref ? `(${ref})` : ''\n      const status = payload.status || ''\n      this.log('receive', `${status} ${topic} ${event} ${refString}`.trim(), payload)\n\n      // Route message to appropriate channels\n      this.channels\n        .filter((channel: RealtimeChannel) => channel._isMember(topic))\n        .forEach((channel: RealtimeChannel) => channel._trigger(event, payload, ref))\n\n      this._triggerStateCallbacks('message', msg)\n    })\n  }\n\n  /**\n   * Clear specific timer\n   * @internal\n   */\n  private _clearTimer(timer: 'heartbeat' | 'reconnect'): void {\n    if (timer === 'heartbeat' && this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = undefined\n    } else if (timer === 'reconnect') {\n      this.reconnectTimer?.reset()\n    }\n  }\n\n  /**\n   * Clear all timers\n   * @internal\n   */\n  private _clearAllTimers(): void {\n    this._clearTimer('heartbeat')\n    this._clearTimer('reconnect')\n  }\n\n  /**\n   * Setup connection handlers for WebSocket events\n   * @internal\n   */\n  private _setupConnectionHandlers(): void {\n    if (!this.conn) return\n\n    // Set binary type if supported (browsers and most WebSocket implementations)\n    if ('binaryType' in this.conn) {\n      ;(this.conn as any).binaryType = 'arraybuffer'\n    }\n\n    this.conn.onopen = () => this._onConnOpen()\n    this.conn.onerror = (error: Event) => this._onConnError(error)\n    this.conn.onmessage = (event: any) => this._onConnMessage(event)\n    this.conn.onclose = (event: any) => this._onConnClose(event)\n  }\n\n  /**\n   * Teardown connection and cleanup resources\n   * @internal\n   */\n  private _teardownConnection(): void {\n    if (this.conn) {\n      this.conn.onopen = null\n      this.conn.onerror = null\n      this.conn.onmessage = null\n      this.conn.onclose = null\n      this.conn = null\n    }\n    this._clearAllTimers()\n    this.channels.forEach((channel) => channel.teardown())\n  }\n\n  /** @internal */\n  private _onConnOpen() {\n    this._setConnectionState('connected')\n    this.log('transport', `connected to ${this.endpointURL()}`)\n    this.flushSendBuffer()\n    this._clearTimer('reconnect')\n\n    if (!this.worker) {\n      this._startHeartbeat()\n    } else {\n      if (!this.workerRef) {\n        this._startWorkerHeartbeat()\n      }\n    }\n\n    this._triggerStateCallbacks('open')\n  }\n  /** @internal */\n  private _startHeartbeat() {\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  /** @internal */\n  private _startWorkerHeartbeat() {\n    if (this.workerUrl) {\n      this.log('worker', `starting worker for from ${this.workerUrl}`)\n    } else {\n      this.log('worker', `starting default worker`)\n    }\n    const objectUrl = this._workerObjectUrl(this.workerUrl!)\n    this.workerRef = new Worker(objectUrl)\n    this.workerRef.onerror = (error) => {\n      this.log('worker', 'worker error', (error as ErrorEvent).message)\n      this.workerRef!.terminate()\n    }\n    this.workerRef.onmessage = (event) => {\n      if (event.data.event === 'keepAlive') {\n        this.sendHeartbeat()\n      }\n    }\n    this.workerRef.postMessage({\n      event: 'start',\n      interval: this.heartbeatIntervalMs,\n    })\n  }\n  /** @internal */\n  private _onConnClose(event: any) {\n    this._setConnectionState('disconnected')\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this._clearTimer('heartbeat')\n\n    // Only schedule reconnection if it wasn't a manual disconnect\n    if (!this._wasManualDisconnect) {\n      this.reconnectTimer?.scheduleTimeout()\n    }\n\n    this._triggerStateCallbacks('close', event)\n  }\n\n  /** @internal */\n  private _onConnError(error: Event) {\n    this._setConnectionState('disconnected')\n    this.log('transport', `${error}`)\n    this._triggerChanError()\n    this._triggerStateCallbacks('error', error)\n  }\n\n  /** @internal */\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeChannel) => channel._trigger(CHANNEL_EVENTS.error))\n  }\n\n  /** @internal */\n  private _appendParams(url: string, params: { [key: string]: string }): string {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n    return `${url}${prefix}${query}`\n  }\n\n  private _workerObjectUrl(url: string | undefined): string {\n    let result_url: string\n    if (url) {\n      result_url = url\n    } else {\n      const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' })\n      result_url = URL.createObjectURL(blob)\n    }\n    return result_url\n  }\n\n  /**\n   * Set connection state with proper state management\n   * @internal\n   */\n  private _setConnectionState(state: RealtimeClientState, manual = false): void {\n    this._connectionState = state\n\n    if (state === 'connecting') {\n      this._wasManualDisconnect = false\n    } else if (state === 'disconnecting') {\n      this._wasManualDisconnect = manual\n    }\n  }\n\n  /**\n   * Perform the actual auth operation\n   * @internal\n   */\n  private async _performAuth(token: string | null = null): Promise<void> {\n    let tokenToSend: string | null\n\n    if (token) {\n      tokenToSend = token\n    } else if (this.accessToken) {\n      // Always call the accessToken callback to get fresh token\n      tokenToSend = await this.accessToken()\n    } else {\n      tokenToSend = this.accessTokenValue\n    }\n\n    if (this.accessTokenValue != tokenToSend) {\n      this.accessTokenValue = tokenToSend\n      this.channels.forEach((channel) => {\n        const payload = {\n          access_token: tokenToSend,\n          version: DEFAULT_VERSION,\n        }\n\n        tokenToSend && channel.updateJoinPayload(payload)\n\n        if (channel.joinedOnce && channel._isJoined()) {\n          channel._push(CHANNEL_EVENTS.access_token, {\n            access_token: tokenToSend,\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Wait for any in-flight auth operations to complete\n   * @internal\n   */\n  private async _waitForAuthIfNeeded(): Promise<void> {\n    if (this._authPromise) {\n      await this._authPromise\n    }\n  }\n\n  /**\n   * Safely call setAuth with standardized error handling\n   * @internal\n   */\n  private _setAuthSafely(context = 'general'): void {\n    this.setAuth().catch((e) => {\n      this.log('error', `error setting auth in ${context}`, e)\n    })\n  }\n\n  /**\n   * Trigger state change callbacks with proper error handling\n   * @internal\n   */\n  private _triggerStateCallbacks(event: keyof typeof this.stateChangeCallbacks, data?: any): void {\n    try {\n      this.stateChangeCallbacks[event].forEach((callback) => {\n        try {\n          callback(data)\n        } catch (e) {\n          this.log('error', `error in ${event} callback`, e)\n        }\n      })\n    } catch (e) {\n      this.log('error', `error triggering ${event} callbacks`, e)\n    }\n  }\n\n  /**\n   * Setup reconnection timer with proper configuration\n   * @internal\n   */\n  private _setupReconnectionTimer(): void {\n    this.reconnectTimer = new Timer(async () => {\n      setTimeout(async () => {\n        await this._waitForAuthIfNeeded()\n        if (!this.isConnected()) {\n          this.connect()\n        }\n      }, CONNECTION_TIMEOUTS.RECONNECT_DELAY)\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Initialize client options with defaults\n   * @internal\n   */\n  private _initializeOptions(options?: RealtimeClientOptions): void {\n    // Set defaults\n    this.transport = options?.transport ?? null\n    this.timeout = options?.timeout ?? DEFAULT_TIMEOUT\n    this.heartbeatIntervalMs =\n      options?.heartbeatIntervalMs ?? CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL\n    this.worker = options?.worker ?? false\n    this.accessToken = options?.accessToken ?? null\n    this.heartbeatCallback = options?.heartbeatCallback ?? noop\n    // Handle special cases\n    if (options?.params) this.params = options.params\n    if (options?.logger) this.logger = options.logger\n    if (options?.logLevel || options?.log_level) {\n      this.logLevel = options.logLevel || options.log_level\n      this.params = { ...this.params, log_level: this.logLevel as string }\n    }\n\n    // Set up functions with defaults\n    this.reconnectAfterMs =\n      options?.reconnectAfterMs ??\n      ((tries: number) => {\n        return RECONNECT_INTERVALS[tries - 1] || DEFAULT_RECONNECT_FALLBACK\n      })\n\n    this.encode =\n      options?.encode ??\n      ((payload: JSON, callback: Function) => {\n        return callback(JSON.stringify(payload))\n      })\n\n    this.decode = options?.decode ?? this.serializer.decode.bind(this.serializer)\n\n    // Handle worker setup\n    if (this.worker) {\n      if (typeof window !== 'undefined' && !window.Worker) {\n        throw new Error('Web Worker is not supported')\n      }\n      this.workerUrl = options?.workerUrl\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6870, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6875, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/realtime-js/src/index.ts"],"sourcesContent":["import RealtimeClient, {\n  RealtimeClientOptions,\n  RealtimeMessage,\n  RealtimeRemoveChannelResponse,\n  WebSocketLikeConstructor,\n} from './RealtimeClient'\nimport RealtimeChannel, {\n  RealtimeChannelOptions,\n  RealtimeChannelSendResponse,\n  RealtimePostgresChangesFilter,\n  RealtimePostgresChangesPayload,\n  RealtimePostgresInsertPayload,\n  RealtimePostgresUpdatePayload,\n  RealtimePostgresDeletePayload,\n  REALTIME_LISTEN_TYPES,\n  REALTIME_POSTGRES_CHANGES_LISTEN_EVENT,\n  REALTIME_SUBSCRIBE_STATES,\n  REALTIME_CHANNEL_STATES,\n} from './RealtimeChannel'\nimport RealtimePresence, {\n  RealtimePresenceState,\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n} from './RealtimePresence'\nimport WebSocketFactory, { WebSocketLike } from './lib/websocket-factory'\n\nexport {\n  RealtimePresence,\n  RealtimeChannel,\n  RealtimeChannelOptions,\n  RealtimeChannelSendResponse,\n  RealtimeClient,\n  RealtimeClientOptions,\n  RealtimeMessage,\n  RealtimePostgresChangesFilter,\n  RealtimePostgresChangesPayload,\n  RealtimePostgresInsertPayload,\n  RealtimePostgresUpdatePayload,\n  RealtimePostgresDeletePayload,\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n  RealtimeRemoveChannelResponse,\n  REALTIME_LISTEN_TYPES,\n  REALTIME_POSTGRES_CHANGES_LISTEN_EVENT,\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n  REALTIME_SUBSCRIBE_STATES,\n  REALTIME_CHANNEL_STATES,\n  WebSocketFactory,\n  WebSocketLike,\n  WebSocketLikeConstructor,\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6882, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6909, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/lib/errors.ts"],"sourcesContent":["export class StorageError extends Error {\n  protected __isStorageError = true\n\n  constructor(message: string) {\n    super(message)\n    this.name = 'StorageError'\n  }\n}\n\nexport function isStorageError(error: unknown): error is StorageError {\n  return typeof error === 'object' && error !== null && '__isStorageError' in error\n}\n\nexport class StorageApiError extends StorageError {\n  status: number\n  statusCode: string\n\n  constructor(message: string, status: number, statusCode: string) {\n    super(message)\n    this.name = 'StorageApiError'\n    this.status = status\n    this.statusCode = statusCode\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      statusCode: this.statusCode,\n    }\n  }\n}\n\nexport class StorageUnknownError extends StorageError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'StorageUnknownError'\n    this.originalError = originalError\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAM,MAAO,qBAAqB;IAGhC,YAAY,OAAe,CAAA;QACzB,KAAK,CAAC;QAHE,IAAA,CAAA,gBAAgB,GAAG;QAI3B,IAAI,CAAC,IAAI,GAAG;IACd;;AAGI,SAAU,eAAe,KAAc;IAC3C,OAAO,OAAO,UAAU,YAAY,UAAU,QAAQ,sBAAsB;AAC9E;AAEM,MAAO,wBAAwB;IAInC,YAAY,OAAe,EAAE,MAAc,EAAE,UAAkB,CAAA;QAC7D,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,UAAU,GAAG;IACpB;IAEA,SAAM;QACJ,OAAO;YACL,MAAM,IAAI,CAAC,IAAI;YACf,SAAS,IAAI,CAAC,OAAO;YACrB,QAAQ,IAAI,CAAC,MAAM;YACnB,YAAY,IAAI,CAAC,UAAU;;IAE/B;;AAGI,MAAO,4BAA4B;IAGvC,YAAY,OAAe,EAAE,aAAsB,CAAA;QACjD,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,aAAa,GAAG;IACvB"}},
    {"offset": {"line": 6948, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6953, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/lib/helpers.ts"],"sourcesContent":["type Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) =>\n      import('@supabase/node-fetch' as any).then(({ default: fetch }) => fetch(...args))\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveResponse = async (): Promise<typeof Response> => {\n  if (typeof Response === 'undefined') {\n    // @ts-ignore\n    return (await import('@supabase/node-fetch' as any)).Response\n  }\n\n  return Response\n}\n\nexport const recursiveToCamel = (item: Record<string, any>): unknown => {\n  if (Array.isArray(item)) {\n    return item.map((el) => recursiveToCamel(el))\n  } else if (typeof item === 'function' || item !== Object(item)) {\n    return item\n  }\n\n  const result: Record<string, any> = {}\n  Object.entries(item).forEach(([key, value]) => {\n    const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''))\n    result[newKey] = recursiveToCamel(value)\n  })\n\n  return result\n}\n\n/**\n * Determine if input is a plain object\n * An object is plain if it's created by either {}, new Object(), or Object.create(null)\n * source: https://github.com/sindresorhus/is-plain-obj\n */\nexport const isPlainObject = (value: object): boolean => {\n  if (typeof value !== 'object' || value === null) {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n  return (\n    (prototype === null ||\n      prototype === Object.prototype ||\n      Object.getPrototypeOf(prototype) === null) &&\n    !(Symbol.toStringTag in value) &&\n    !(Symbol.iterator in value)\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAM,eAAe,CAAC;IAC3B,IAAI;IACJ,IAAI,aAAa;QACf,SAAS;IACX,OAAO,IAAI,OAAO,UAAU,aAAa;QACvC,SAAS,CAAC,GAAG,OACX,6IAAsC,IAAI,CAAC,CAAC,EAAE,SAAS,MAAK,EAAE,GAAK,UAAS;IAChF,OAAO;QACL,SAAS;IACX;IACA,OAAO,CAAC,GAAG,OAAS,UAAU;AAChC;AAEO,MAAM,kBAAkB,IAAqC,UAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA;QAClE,IAAI,OAAO,aAAa,aAAa;YACnC,aAAa;YACb,OAAO,CAAC,kJAA2C,EAAE,QAAQ;QAC/D;QAEA,OAAO;IACT;AAEO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,MAAM,OAAO,CAAC,OAAO;QACvB,OAAO,KAAK,GAAG,CAAC,CAAC,KAAO,iBAAiB;IAC3C,OAAO,IAAI,OAAO,SAAS,cAAc,SAAS,OAAO,OAAO;QAC9D,OAAO;IACT;IAEA,MAAM,SAA8B,CAAA;IACpC,OAAO,OAAO,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;QACxC,MAAM,SAAS,IAAI,OAAO,CAAC,iBAAiB,CAAC,IAAM,EAAE,WAAW,GAAG,OAAO,CAAC,SAAS;QACpF,MAAM,CAAC,OAAO,GAAG,iBAAiB;IACpC;IAEA,OAAO;AACT;AAOO,MAAM,gBAAgB,CAAC;IAC5B,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;QAC/C,OAAO;IACT;IAEA,MAAM,YAAY,OAAO,cAAc,CAAC;IACxC,OACE,CAAC,cAAc,QACb,cAAc,OAAO,SAAS,IAC9B,OAAO,cAAc,CAAC,eAAe,IAAI,KAC3C,CAAC,CAAC,OAAO,WAAW,IAAI,KAAK,KAC7B,CAAC,CAAC,OAAO,QAAQ,IAAI,KAAK;AAE9B"}},
    {"offset": {"line": 7024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7029, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/lib/fetch.ts"],"sourcesContent":["import { StorageApiError, StorageUnknownError } from './errors'\nimport { isPlainObject, resolveResponse } from './helpers'\nimport { FetchParameters } from './types'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  duplex?: string\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (\n  error: unknown,\n  reject: (reason?: any) => void,\n  options?: FetchOptions\n) => {\n  const Res = await resolveResponse()\n\n  if (error instanceof Res && !options?.noResolveJson) {\n    error\n      .json()\n      .then((err) => {\n        const status = error.status || 500\n        const statusCode = err?.statusCode || status + ''\n        reject(new StorageApiError(_getErrorMessage(err), status, statusCode))\n      })\n      .catch((err) => {\n        reject(new StorageUnknownError(_getErrorMessage(err), err))\n      })\n  } else {\n    reject(new StorageUnknownError(_getErrorMessage(error), error))\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET' || !body) {\n    return params\n  }\n\n  if (isPlainObject(body)) {\n    params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n    params.body = JSON.stringify(body)\n  } else {\n    params.body = body\n  }\n\n  if (options?.duplex) {\n    params.duplex = options.duplex\n  }\n\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject, options))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function head(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(\n    fetcher,\n    'HEAD',\n    url,\n    {\n      ...options,\n      noResolveJson: true,\n    },\n    parameters\n  )\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7147, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/packages/StreamDownloadBuilder.ts"],"sourcesContent":["import { isStorageError } from '../lib/errors'\nimport { DownloadResult } from '../lib/types'\n\nexport default class StreamDownloadBuilder implements PromiseLike<DownloadResult<ReadableStream>> {\n  constructor(\n    private downloadFn: () => Promise<Response>,\n    private shouldThrowOnError: boolean\n  ) {}\n\n  then<TResult1 = DownloadResult<ReadableStream>, TResult2 = never>(\n    onfulfilled?:\n      | ((value: DownloadResult<ReadableStream>) => TResult1 | PromiseLike<TResult1>)\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n  ): Promise<TResult1 | TResult2> {\n    return this.execute().then(onfulfilled, onrejected)\n  }\n\n  private async execute(): Promise<DownloadResult<ReadableStream>> {\n    try {\n      const result = await this.downloadFn()\n\n      return {\n        data: result.body as ReadableStream,\n        error: null,\n      }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGc,MAAO;IACnB,YACU,UAAmC,EACnC,kBAA2B,CAAA;QAD3B,IAAA,CAAA,UAAU,GAAV;QACA,IAAA,CAAA,kBAAkB,GAAlB;IACP;IAEH,KACE,WAEQ,EACR,UAAuE,EAAA;QAEvE,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa;IAC1C;IAEc,UAAO;;YACnB,IAAI;gBACF,MAAM,SAAS,MAAM,IAAI,CAAC,UAAU;gBAEpC,OAAO;oBACL,MAAM,OAAO,IAAsB;oBACnC,OAAO;;YAEX,EAAE,OAAO,OAAO;gBACd,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC3B,MAAM;gBACR;gBAEA,IAAI,CAAA,GAAA,8KAAA,CAAA,iBAAc,AAAd,EAAe,QAAQ;oBACzB,OAAO;wBAAE,MAAM;wBAAM;oBAAK;gBAC5B;gBAEA,MAAM;YACR;QACF"}},
    {"offset": {"line": 7211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7216, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/packages/BlobDownloadBuilder.ts"],"sourcesContent":["import { isStorageError } from '../lib/errors'\nimport { DownloadResult } from '../lib/types'\nimport StreamDownloadBuilder from './StreamDownloadBuilder'\n\nexport default class BlobDownloadBuilder implements PromiseLike<DownloadResult<Blob>> {\n  constructor(\n    private downloadFn: () => Promise<Response>,\n    private shouldThrowOnError: boolean\n  ) {}\n\n  asStream(): StreamDownloadBuilder {\n    return new StreamDownloadBuilder(this.downloadFn, this.shouldThrowOnError)\n  }\n\n  then<TResult1 = DownloadResult<Blob>, TResult2 = never>(\n    onfulfilled?: ((value: DownloadResult<Blob>) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n  ): Promise<TResult1 | TResult2> {\n    return this.execute().then(onfulfilled, onrejected)\n  }\n\n  private async execute(): Promise<DownloadResult<Blob>> {\n    try {\n      const result = await this.downloadFn()\n\n      return {\n        data: await result.blob(),\n        error: null,\n      }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIc,MAAO;IACnB,YACU,UAAmC,EACnC,kBAA2B,CAAA;QAD3B,IAAA,CAAA,UAAU,GAAV;QACA,IAAA,CAAA,kBAAkB,GAAlB;IACP;IAEH,WAAQ;QACN,OAAO,IAAI,kMAAA,CAAA,UAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB;IAC3E;IAEA,KACE,WAAwF,EACxF,UAAuE,EAAA;QAEvE,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa;IAC1C;IAEc,UAAO;;YACnB,IAAI;gBACF,MAAM,SAAS,MAAM,IAAI,CAAC,UAAU;gBAEpC,OAAO;oBACL,MAAM,MAAM,OAAO,IAAI;oBACvB,OAAO;;YAEX,EAAE,OAAO,OAAO;gBACd,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC3B,MAAM;gBACR;gBAEA,IAAI,CAAA,GAAA,8KAAA,CAAA,iBAAc,AAAd,EAAe,QAAQ;oBACzB,OAAO;wBAAE,MAAM;wBAAM;oBAAK;gBAC5B;gBAEA,MAAM;YACR;QACF"}},
    {"offset": {"line": 7285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7290, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts"],"sourcesContent":["import { isStorageError, StorageError, StorageUnknownError } from '../lib/errors'\nimport { Fetch, get, head, post, put, remove } from '../lib/fetch'\nimport { recursiveToCamel, resolveFetch } from '../lib/helpers'\nimport {\n  FileObject,\n  FileOptions,\n  SearchOptions,\n  FetchParameters,\n  TransformOptions,\n  DestinationOptions,\n  FileObjectV2,\n  Camelize,\n  SearchV2Options,\n  SearchV2Result,\n} from '../lib/types'\nimport BlobDownloadBuilder from './BlobDownloadBuilder'\n\nconst DEFAULT_SEARCH_OPTIONS = {\n  limit: 100,\n  offset: 0,\n  sortBy: {\n    column: 'name',\n    order: 'asc',\n  },\n}\n\nconst DEFAULT_FILE_OPTIONS: FileOptions = {\n  cacheControl: '3600',\n  contentType: 'text/plain;charset=UTF-8',\n  upsert: false,\n}\n\ntype FileBody =\n  | ArrayBuffer\n  | ArrayBufferView\n  | Blob\n  | Buffer\n  | File\n  | FormData\n  | NodeJS.ReadableStream\n  | ReadableStream<Uint8Array>\n  | URLSearchParams\n  | string\n\nexport default class StorageFileApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected bucketId?: string\n  protected fetch: Fetch\n  protected shouldThrowOnError = false\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    bucketId?: string,\n    fetch?: Fetch\n  ) {\n    this.url = url\n    this.headers = headers\n    this.bucketId = bucketId\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Enable throwing errors instead of returning them.\n   */\n  public throwOnError(): this {\n    this.shouldThrowOnError = true\n    return this\n  }\n\n  /**\n   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n   *\n   * @param method HTTP method.\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  private async uploadOrUpdate(\n    method: 'POST' | 'PUT',\n    path: string,\n    fileBody: FileBody,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { id: string; path: string; fullPath: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let body\n      const options = { ...DEFAULT_FILE_OPTIONS, ...fileOptions }\n      let headers: Record<string, string> = {\n        ...this.headers,\n        ...(method === 'POST' && { 'x-upsert': String(options.upsert as boolean) }),\n      }\n\n      const metadata = options.metadata\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        if (metadata) {\n          body.append('metadata', this.encodeMetadata(metadata))\n        }\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n        if (metadata) {\n          body.append('metadata', this.encodeMetadata(metadata))\n        }\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n\n        if (metadata) {\n          headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata))\n        }\n      }\n\n      if (fileOptions?.headers) {\n        headers = { ...headers, ...fileOptions.headers }\n      }\n\n      const cleanPath = this._removeEmptyFolders(path)\n      const _path = this._getFinalPath(cleanPath)\n      const data = await (method == 'PUT' ? put : post)(\n        this.fetch,\n        `${this.url}/object/${_path}`,\n        body as object,\n        { headers, ...(options?.duplex ? { duplex: options.duplex } : {}) }\n      )\n\n      return {\n        data: { path: cleanPath, id: data.Id, fullPath: data.Key },\n        error: null,\n      }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Uploads a file to an existing bucket.\n   *\n   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async upload(\n    path: string,\n    fileBody: FileBody,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { id: string; path: string; fullPath: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('POST', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Upload a file with a token generated from `createSignedUploadUrl`.\n   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param token The token generated from `createSignedUploadUrl`\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async uploadToSignedUrl(\n    path: string,\n    token: string,\n    fileBody: FileBody,\n    fileOptions?: FileOptions\n  ) {\n    const cleanPath = this._removeEmptyFolders(path)\n    const _path = this._getFinalPath(cleanPath)\n\n    const url = new URL(this.url + `/object/upload/sign/${_path}`)\n    url.searchParams.set('token', token)\n\n    try {\n      let body\n      const options = { upsert: DEFAULT_FILE_OPTIONS.upsert, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...{ 'x-upsert': String(options.upsert as boolean) },\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const data = await put(this.fetch, url.toString(), body as object, { headers })\n\n      return {\n        data: { path: cleanPath, fullPath: data.Key },\n        error: null,\n      }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a signed upload URL.\n   * Signed upload URLs can be used to upload files to the bucket without further authentication.\n   * They are valid for 2 hours.\n   * @param path The file path, including the current file name. For example `folder/image.png`.\n   * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\n   */\n  async createSignedUploadUrl(\n    path: string,\n    options?: { upsert: boolean }\n  ): Promise<\n    | {\n        data: { signedUrl: string; token: string; path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let _path = this._getFinalPath(path)\n\n      const headers = { ...this.headers }\n\n      if (options?.upsert) {\n        headers['x-upsert'] = 'true'\n      }\n\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/upload/sign/${_path}`,\n        {},\n        { headers }\n      )\n\n      const url = new URL(this.url + data.url)\n\n      const token = url.searchParams.get('token')\n\n      if (!token) {\n        throw new StorageError('No token returned by API')\n      }\n\n      return { data: { signedUrl: url.toString(), path, token }, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Replaces an existing file at the specified path with a new one.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async update(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { id: string; path: string; fullPath: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('PUT', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Moves an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n   * @param options The destination options.\n   */\n  async move(\n    fromPath: string,\n    toPath: string,\n    options?: DestinationOptions\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/move`,\n        {\n          bucketId: this.bucketId,\n          sourceKey: fromPath,\n          destinationKey: toPath,\n          destinationBucket: options?.destinationBucket,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Copies an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n   * @param options The destination options.\n   */\n  async copy(\n    fromPath: string,\n    toPath: string,\n    options?: DestinationOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/copy`,\n        {\n          bucketId: this.bucketId,\n          sourceKey: fromPath,\n          destinationKey: toPath,\n          destinationBucket: options?.destinationBucket,\n        },\n        { headers: this.headers }\n      )\n      return { data: { path: data.Key }, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param path The file path, including the current file name. For example `folder/image.png`.\n   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async createSignedUrl(\n    path: string,\n    expiresIn: number,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: { signedUrl: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let _path = this._getFinalPath(path)\n\n      let data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${_path}`,\n        { expiresIn, ...(options?.transform ? { transform: options.transform } : {}) },\n        { headers: this.headers }\n      )\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`)\n      data = { signedUrl }\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   */\n  async createSignedUrls(\n    paths: string[],\n    expiresIn: number,\n    options?: { download: string | boolean }\n  ): Promise<\n    | {\n        data: { error: string | null; path: string | null; signedUrl: string }[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${this.bucketId}`,\n        { expiresIn, paths },\n        { headers: this.headers }\n      )\n\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      return {\n        data: data.map((datum: { signedURL: string }) => ({\n          ...datum,\n          signedUrl: datum.signedURL\n            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n            : null,\n        })),\n        error: null,\n      }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n   *\n   * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  download<Options extends { transform?: TransformOptions }>(\n    path: string,\n    options?: Options\n  ): BlobDownloadBuilder {\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n    const queryString = transformationQuery ? `?${transformationQuery}` : ''\n    const _path = this._getFinalPath(path)\n    const downloadFn = () =>\n      get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n        headers: this.headers,\n        noResolveJson: true,\n      })\n    return new BlobDownloadBuilder(downloadFn, this.shouldThrowOnError)\n  }\n\n  /**\n   * Retrieves the details of an existing file.\n   * @param path\n   */\n  async info(path: string): Promise<\n    | {\n        data: Camelize<FileObjectV2>\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    const _path = this._getFinalPath(path)\n\n    try {\n      const data = await get(this.fetch, `${this.url}/object/info/${_path}`, {\n        headers: this.headers,\n      })\n\n      return { data: recursiveToCamel(data) as Camelize<FileObjectV2>, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks the existence of a file.\n   * @param path\n   */\n  async exists(path: string): Promise<\n    | {\n        data: boolean\n        error: null\n      }\n    | {\n        data: boolean\n        error: StorageError\n      }\n  > {\n    const _path = this._getFinalPath(path)\n\n    try {\n      await head(this.fetch, `${this.url}/object/${_path}`, {\n        headers: this.headers,\n      })\n\n      return { data: true, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error) && error instanceof StorageUnknownError) {\n        const originalError = error.originalError as unknown as { status: number }\n\n        if ([400, 404].includes(originalError?.status)) {\n          return { data: false, error }\n        }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n   * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n   *\n   * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n   * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  getPublicUrl(\n    path: string,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): { data: { publicUrl: string } } {\n    const _path = this._getFinalPath(path)\n    const _queryString = []\n\n    const downloadQueryParam = options?.download\n      ? `download=${options.download === true ? '' : options.download}`\n      : ''\n\n    if (downloadQueryParam !== '') {\n      _queryString.push(downloadQueryParam)\n    }\n\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n\n    if (transformationQuery !== '') {\n      _queryString.push(transformationQuery)\n    }\n\n    let queryString = _queryString.join('&')\n    if (queryString !== '') {\n      queryString = `?${queryString}`\n    }\n\n    return {\n      data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n    }\n  }\n\n  /**\n   * Deletes files within the same bucket\n   *\n   * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n   */\n  async remove(paths: string[]): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/object/${this.bucketId}`,\n        { prefixes: paths },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get file metadata\n   * @param id the file id to retrieve metadata\n   */\n  // async getMetadata(\n  //   id: string\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Update file metadata\n   * @param id the file id to update metadata\n   * @param meta the new file metadata\n   */\n  // async updateMetadata(\n  //   id: string,\n  //   meta: Metadata\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await post(\n  //       this.fetch,\n  //       `${this.url}/metadata/${id}`,\n  //       { ...meta },\n  //       { headers: this.headers }\n  //     )\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Lists all the files and folders within a path of the bucket.\n   * @param path The folder path.\n   * @param options Search options including limit (defaults to 100), offset, sortBy, and search\n   */\n  async list(\n    path?: string,\n    options?: SearchOptions,\n    parameters?: FetchParameters\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const body = { ...DEFAULT_SEARCH_OPTIONS, ...options, prefix: path || '' }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * @experimental this method signature might change in the future\n   * @param options search options\n   * @param parameters\n   */\n  async listV2(\n    options?: SearchV2Options,\n    parameters?: FetchParameters\n  ): Promise<\n    | {\n        data: SearchV2Result\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const body = { ...options }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list-v2/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  protected encodeMetadata(metadata: Record<string, any>) {\n    return JSON.stringify(metadata)\n  }\n\n  toBase64(data: string) {\n    if (typeof Buffer !== 'undefined') {\n      return Buffer.from(data).toString('base64')\n    }\n    return btoa(data)\n  }\n\n  private _getFinalPath(path: string) {\n    return `${this.bucketId}/${path.replace(/^\\/+/, '')}`\n  }\n\n  private _removeEmptyFolders(path: string) {\n    return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/')\n  }\n\n  private transformOptsToQueryString(transform: TransformOptions) {\n    const params = []\n    if (transform.width) {\n      params.push(`width=${transform.width}`)\n    }\n\n    if (transform.height) {\n      params.push(`height=${transform.height}`)\n    }\n\n    if (transform.resize) {\n      params.push(`resize=${transform.resize}`)\n    }\n\n    if (transform.format) {\n      params.push(`format=${transform.format}`)\n    }\n\n    if (transform.quality) {\n      params.push(`quality=${transform.quality}`)\n    }\n\n    return params.join('&')\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7988, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/lib/version.ts"],"sourcesContent":["// Generated automatically during releases by scripts/update-version-files.ts\n// This file provides runtime access to the package version for:\n// - HTTP request headers (e.g., X-Client-Info header for API requests)\n// - Debugging and support (identifying which version is running)\n// - Telemetry and logging (version reporting in errors/analytics)\n// - Ensuring build artifacts match the published package version\nexport const version = '2.74.0'\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,gEAAgE;AAChE,uEAAuE;AACvE,iEAAiE;AACjE,kEAAkE;AAClE,iEAAiE;;;;AAC1D,MAAM,UAAU"}},
    {"offset": {"line": 7998, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8003, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/lib/constants.ts"],"sourcesContent":["import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` }\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB;IAAE,iBAAiB,CAAA,WAAA,EAAc,+KAAA,CAAA,UAAO,CAAA,CAAE;AAAA"}},
    {"offset": {"line": 8012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8017, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/packages/StorageBucketApi.ts"],"sourcesContent":["import { DEFAULT_HEADERS } from '../lib/constants'\nimport { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, put, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport { Bucket, BucketType } from '../lib/types'\nimport { StorageClientOptions } from '../StorageClient'\n\nexport default class StorageBucketApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected fetch: Fetch\n  protected shouldThrowOnError = false\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    fetch?: Fetch,\n    opts?: StorageClientOptions\n  ) {\n    const baseUrl = new URL(url)\n\n    // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n    // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n    if (opts?.useNewHostname) {\n      const isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname)\n      if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n        baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.')\n      }\n    }\n\n    this.url = baseUrl.href.replace(/\\/$/, '')\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Enable throwing errors instead of returning them.\n   */\n  public throwOnError(): this {\n    this.shouldThrowOnError = true\n    return this\n  }\n\n  /**\n   * Retrieves the details of all Storage buckets within an existing project.\n   */\n  async listBuckets(): Promise<\n    | {\n        data: Bucket[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  async getBucket(id: string): Promise<\n    | {\n        data: Bucket\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n   * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n   * The global file size limit takes precedence over this value.\n   * The default value is null, which doesn't set a per bucket file size limit.\n   * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n   * The default value is null, which allows files with all mime types to be uploaded.\n   * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n   * @returns newly created bucket id\n   * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n   *   - default bucket type is `STANDARD`\n   */\n  async createBucket(\n    id: string,\n    options: {\n      public: boolean\n      fileSizeLimit?: number | string | null\n      allowedMimeTypes?: string[] | null\n      type?: BucketType\n    } = {\n      public: false,\n    }\n  ): Promise<\n    | {\n        data: Pick<Bucket, 'name'>\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket`,\n        {\n          id,\n          name: id,\n          type: options.type,\n          public: options.public,\n          file_size_limit: options.fileSizeLimit,\n          allowed_mime_types: options.allowedMimeTypes,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates a Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are updating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n   * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n   * The global file size limit takes precedence over this value.\n   * The default value is null, which doesn't set a per bucket file size limit.\n   * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n   * The default value is null, which allows files with all mime types to be uploaded.\n   * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n   */\n  async updateBucket(\n    id: string,\n    options: {\n      public: boolean\n      fileSizeLimit?: number | string | null\n      allowedMimeTypes?: string[] | null\n    }\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await put(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {\n          id,\n          name: id,\n          public: options.public,\n          file_size_limit: options.fileSizeLimit,\n          allowed_mime_types: options.allowedMimeTypes,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  async emptyBucket(id: string): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket/${id}/empty`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  async deleteBucket(id: string): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (this.shouldThrowOnError) {\n        throw error\n      }\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8283, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/storage-js/src/StorageClient.ts"],"sourcesContent":["import StorageFileApi from './packages/StorageFileApi'\nimport StorageBucketApi from './packages/StorageBucketApi'\nimport { Fetch } from './lib/fetch'\n\nexport interface StorageClientOptions {\n  useNewHostname?: boolean\n}\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    fetch?: Fetch,\n    opts?: StorageClientOptions\n  ) {\n    super(url, headers, fetch, opts)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAQM,MAAO,sBAAsB,6LAAA,CAAA,UAAgB;IACjD,YACE,GAAW,EACX,UAAqC,CAAA,CAAE,EACvC,KAAa,EACb,IAA2B,CAAA;QAE3B,KAAK,CAAC,KAAK,SAAS,OAAO;IAC7B;IAEA;;;;QAKA,KAAK,EAAU,EAAA;QACb,OAAO,IAAI,2LAAA,CAAA,UAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK;IAClE"}},
    {"offset": {"line": 8303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8308, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/lib/version.ts"],"sourcesContent":["// Generated automatically during releases by scripts/update-version-files.ts\n// This file provides runtime access to the package version for:\n// - HTTP request headers (e.g., X-Client-Info header for API requests)\n// - Debugging and support (identifying which version is running)\n// - Telemetry and logging (version reporting in errors/analytics)\n// - Ensuring build artifacts match the published package version\nexport const version = '2.74.0'\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,gEAAgE;AAChE,uEAAuE;AACvE,iEAAiE;AACjE,kEAAkE;AAClE,iEAAiE;;;;AAC1D,MAAM,UAAU"}},
    {"offset": {"line": 8318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8323, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/lib/constants.ts"],"sourcesContent":["// constants.ts\nimport { RealtimeClientOptions } from '@supabase/realtime-js'\nimport { SupabaseAuthClientOptions } from './types'\nimport { version } from './version'\n\nlet JS_ENV = ''\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n  JS_ENV = 'deno'\n} else if (typeof document !== 'undefined') {\n  JS_ENV = 'web'\n} else if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n  JS_ENV = 'react-native'\n} else {\n  JS_ENV = 'node'\n}\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${version}` }\n\nexport const DEFAULT_GLOBAL_OPTIONS = {\n  headers: DEFAULT_HEADERS,\n}\n\nexport const DEFAULT_DB_OPTIONS = {\n  schema: 'public',\n}\n\nexport const DEFAULT_AUTH_OPTIONS: SupabaseAuthClientOptions = {\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  flowType: 'implicit',\n}\n\nexport const DEFAULT_REALTIME_OPTIONS: RealtimeClientOptions = {}\n"],"names":[],"mappings":";;;;;;;;;;AAKA,IAAI,SAAS;AACb,aAAa;AACb,IAAI,OAAO,SAAS,aAAa;IAC/B,SAAS;AACX,OAAO,IAAI,OAAO,aAAa,aAAa;IAC1C,SAAS;AACX,OAAO,IAAI,OAAO,cAAc,eAAe,UAAU,OAAO,KAAK,eAAe;IAClF,SAAS;AACX,OAAO;IACL,SAAS;AACX;AAEO,MAAM,kBAAkB;IAAE,iBAAiB,CAAA,YAAA,EAAe,OAAM,CAAA,EAAI,gLAAA,CAAA,UAAO,CAAA,CAAE;AAAA;AAE7E,MAAM,yBAAyB;IACpC,SAAS;;AAGJ,MAAM,qBAAqB;IAChC,QAAQ;;AAGH,MAAM,uBAAkD;IAC7D,kBAAkB;IAClB,gBAAgB;IAChB,oBAAoB;IACpB,UAAU;;AAGL,MAAM,2BAAkD,CAAA"}},
    {"offset": {"line": 8360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8365, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/lib/fetch.ts"],"sourcesContent":["// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = nodeFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args: Parameters<Fetch>) => _fetch(...args)\n}\n\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === 'undefined') {\n    return NodeFetchHeaders\n  }\n\n  return Headers\n}\n\nexport const fetchWithAuth = (\n  supabaseKey: string,\n  getAccessToken: () => Promise<string | null>,\n  customFetch?: Fetch\n): Fetch => {\n  const fetch = resolveFetch(customFetch)\n  const HeadersConstructor = resolveHeadersConstructor()\n\n  return async (input, init) => {\n    const accessToken = (await getAccessToken()) ?? supabaseKey\n    let headers = new HeadersConstructor(init?.headers)\n\n    if (!headers.has('apikey')) {\n      headers.set('apikey', supabaseKey)\n    }\n\n    if (!headers.has('Authorization')) {\n      headers.set('Authorization', `Bearer ${accessToken}`)\n    }\n\n    return fetch(input, { ...init, headers })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,MAAM,eAAe,CAAC;IAC3B,IAAI;IACJ,IAAI,aAAa;QACf,SAAS;IACX,OAAO,IAAI,OAAO,UAAU,aAAa;QACvC,SAAS,2JAAA,CAAA,UAA6B;IACxC,OAAO;QACL,SAAS;IACX;IACA,OAAO,CAAC,GAAG,OAA4B,UAAU;AACnD;AAEO,MAAM,4BAA4B;IACvC,IAAI,OAAO,YAAY,aAAa;QAClC,OAAO,2JAAA,CAAA,UAAgB;IACzB;IAEA,OAAO;AACT;AAEO,MAAM,gBAAgB,CAC3B,aACA,gBACA;IAEA,MAAM,SAAQ,aAAa;IAC3B,MAAM,qBAAqB;IAE3B,OAAO,CAAO,OAAO,OAAQ,UAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA;;YAC3B,MAAM,cAAc,CAAA,KAAC,MAAM,gBAAiB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;YAChD,IAAI,UAAU,IAAI,mBAAmB,SAAI,QAAJ,SAAI,KAAA,IAAA,KAAA,IAAJ,KAAM,OAAO;YAElD,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW;gBAC1B,QAAQ,GAAG,CAAC,UAAU;YACxB;YAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,kBAAkB;gBACjC,QAAQ,GAAG,CAAC,iBAAiB,CAAA,OAAA,EAAU,YAAW,CAAE;YACtD;YAEA,OAAO,OAAM,OAAK,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAO,OAAI;gBAAE;YAAO;QACxC;AACF"}},
    {"offset": {"line": 8435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8440, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/lib/helpers.ts"],"sourcesContent":["// helpers.ts\nimport { SupabaseClientOptions } from './types'\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport function ensureTrailingSlash(url: string): string {\n  return url.endsWith('/') ? url : url + '/'\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function applySettingDefaults<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n>(\n  options: SupabaseClientOptions<SchemaName>,\n  defaults: SupabaseClientOptions<any>\n): Required<SupabaseClientOptions<SchemaName>> {\n  const {\n    db: dbOptions,\n    auth: authOptions,\n    realtime: realtimeOptions,\n    global: globalOptions,\n  } = options\n  const {\n    db: DEFAULT_DB_OPTIONS,\n    auth: DEFAULT_AUTH_OPTIONS,\n    realtime: DEFAULT_REALTIME_OPTIONS,\n    global: DEFAULT_GLOBAL_OPTIONS,\n  } = defaults\n\n  const result: Required<SupabaseClientOptions<SchemaName>> = {\n    db: {\n      ...DEFAULT_DB_OPTIONS,\n      ...dbOptions,\n    },\n    auth: {\n      ...DEFAULT_AUTH_OPTIONS,\n      ...authOptions,\n    },\n    realtime: {\n      ...DEFAULT_REALTIME_OPTIONS,\n      ...realtimeOptions,\n    },\n    storage: {},\n    global: {\n      ...DEFAULT_GLOBAL_OPTIONS,\n      ...globalOptions,\n      headers: {\n        ...(DEFAULT_GLOBAL_OPTIONS?.headers ?? {}),\n        ...(globalOptions?.headers ?? {}),\n      },\n    },\n    accessToken: async () => '',\n  }\n\n  if (options.accessToken) {\n    result.accessToken = options.accessToken\n  } else {\n    // hack around Required<>\n    delete (result as any).accessToken\n  }\n\n  return result\n}\n\n/**\n * Validates a Supabase client URL\n *\n * @param {string} supabaseUrl - The Supabase client URL string.\n * @returns {URL} - The validated base URL.\n * @throws {Error}\n */\nexport function validateSupabaseUrl(supabaseUrl: string): URL {\n  const trimmedUrl = supabaseUrl?.trim()\n\n  if (!trimmedUrl) {\n    throw new Error('supabaseUrl is required.')\n  }\n\n  if (!trimmedUrl.match(/^https?:\\/\\//i)) {\n    throw new Error('Invalid supabaseUrl: Must be a valid HTTP or HTTPS URL.')\n  }\n\n  try {\n    return new URL(ensureTrailingSlash(trimmedUrl))\n  } catch {\n    throw Error('Invalid supabaseUrl: Provided URL is malformed.')\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGM,SAAU;IACd,OAAO,uCAAuC,OAAO,CAAC,SAAS,SAAU,CAAC;QACxE,IAAI,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM,GAC7B,IAAI,KAAK,MAAM,IAAI,AAAC,IAAI,MAAO;QACjC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF;AAEM,SAAU,oBAAoB,GAAW;IAC7C,OAAO,IAAI,QAAQ,CAAC,OAAO,MAAM,MAAM;AACzC;AAEO,MAAM,YAAY,IAAM,OAAO,WAAW;AAE3C,SAAU,qBAMd,OAA0C,EAC1C,QAAoC;;IAEpC,MAAM,EACJ,IAAI,SAAS,EACb,MAAM,WAAW,EACjB,UAAU,eAAe,EACzB,QAAQ,aAAa,EACtB,GAAG;IACJ,MAAM,EACJ,IAAI,kBAAkB,EACtB,MAAM,oBAAoB,EAC1B,UAAU,wBAAwB,EAClC,QAAQ,sBAAsB,EAC/B,GAAG;IAEJ,MAAM,SAAsD;QAC1D,IAAE,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACG,qBACA;QAEL,MAAI,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACC,uBACA;QAEL,UAAQ,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACH,2BACA;QAEL,SAAS,CAAA;QACT,QAAM,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACD,yBACA,gBAAa;YAChB,SAAO,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACD,CAAA,KAAA,2BAAsB,QAAtB,2BAAsB,KAAA,IAAA,KAAA,IAAtB,uBAAwB,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,IACnC,CAAA,KAAA,kBAAa,QAAb,kBAAa,KAAA,IAAA,KAAA,IAAb,cAAe,OAAO,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA;QAAG;QAGrC,aAAa,IAAW,UAAA,IAAA,EAAA,KAAA,GAAA,KAAA,GAAA;gBAAC,OAAA;YAAE;;IAG7B,IAAI,QAAQ,WAAW,EAAE;QACvB,OAAO,WAAW,GAAG,QAAQ,WAAW;IAC1C,OAAO;QACL,yBAAyB;QACzB,OAAQ,OAAe,WAAW;IACpC;IAEA,OAAO;AACT;AASM,SAAU,oBAAoB,WAAmB;IACrD,MAAM,aAAa,gBAAW,QAAX,gBAAW,KAAA,IAAA,KAAA,IAAX,YAAa,IAAI;IAEpC,IAAI,CAAC,YAAY;QACf,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,CAAC,WAAW,KAAK,CAAC,kBAAkB;QACtC,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;QACF,OAAO,IAAI,IAAI,oBAAoB;IACrC,EAAE,OAAA,IAAM;QACN,MAAM,MAAM;IACd;AACF"}},
    {"offset": {"line": 8522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8527, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/version.ts"],"sourcesContent":["// Generated automatically during releases by scripts/update-version-files.ts\n// This file provides runtime access to the package version for:\n// - HTTP request headers (e.g., X-Client-Info header for API requests)\n// - Debugging and support (identifying which version is running)\n// - Telemetry and logging (version reporting in errors/analytics)\n// - Ensuring build artifacts match the published package version\nexport const version = '2.74.0'\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,gEAAgE;AAChE,uEAAuE;AACvE,iEAAiE;AACjE,kEAAkE;AAClE,iEAAiE;;;;AAC1D,MAAM,UAAU"}},
    {"offset": {"line": 8537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8542, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/constants.ts"],"sourcesContent":["import { version } from './version'\n\n/** Current session will be checked for refresh at this interval. */\nexport const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nexport const AUTO_REFRESH_TICK_THRESHOLD = 3\n\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\nexport const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS\n\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const NETWORK_FAILURE = {\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2, // in deciseconds\n}\n\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version'\nexport const API_VERSIONS = {\n  '2024-01-01': {\n    timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n    name: '2024-01-01',\n  },\n}\n\nexport const BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i\n\nexport const JWKS_TTL = 10 * 60 * 1000 // 10 minutes\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAGO,MAAM,gCAAgC,KAAK;AAI3C,MAAM,8BAA8B;AAKpC,MAAM,mBAAmB,8BAA8B;AAEvD,MAAM,aAAa;AACnB,MAAM,cAAc;AACpB,MAAM,WAAW;AACjB,MAAM,kBAAkB;IAAE,iBAAiB,CAAA,UAAA,EAAa,4KAAA,CAAA,UAAO,CAAA,CAAE;AAAA;AACjE,MAAM,kBAAkB;IAC7B,aAAa;IACb,gBAAgB;;AAGX,MAAM,0BAA0B;AAChC,MAAM,eAAe;IAC1B,cAAc;QACZ,WAAW,KAAK,KAAK,CAAC;QACtB,MAAM;;;AAIH,MAAM,kBAAkB;AAExB,MAAM,WAAW,KAAK,KAAK,MAAK,aAAa"}},
    {"offset": {"line": 8582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8587, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/errors.ts"],"sourcesContent":["import { WeakPasswordReasons } from './types'\nimport { ErrorCode } from './error-codes'\n\nexport class AuthError extends Error {\n  /**\n   * Error code associated with the error. Most errors coming from\n   * HTTP responses will have a code, though some errors that occur\n   * before a response is received will not have one present. In that\n   * case {@link #status} will also be undefined.\n   */\n  code: ErrorCode | (string & {}) | undefined\n\n  /** HTTP status code that caused the error. */\n  status: number | undefined\n\n  protected __isAuthError = true\n\n  constructor(message: string, status?: number, code?: string) {\n    super(message)\n    this.name = 'AuthError'\n    this.status = status\n    this.code = code\n  }\n}\n\nexport function isAuthError(error: unknown): error is AuthError {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\n}\n\nexport class AuthApiError extends AuthError {\n  status: number\n\n  constructor(message: string, status: number, code: string | undefined) {\n    super(message, status, code)\n    this.name = 'AuthApiError'\n    this.status = status\n    this.code = code\n  }\n}\n\nexport function isAuthApiError(error: unknown): error is AuthApiError {\n  return isAuthError(error) && error.name === 'AuthApiError'\n}\n\nexport class AuthUnknownError extends AuthError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'AuthUnknownError'\n    this.originalError = originalError\n  }\n}\n\nexport class CustomAuthError extends AuthError {\n  name: string\n  status: number\n\n  constructor(message: string, name: string, status: number, code: string | undefined) {\n    super(message, status, code)\n    this.name = name\n    this.status = status\n  }\n}\n\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400, undefined)\n  }\n}\n\nexport function isAuthSessionMissingError(error: any): error is AuthSessionMissingError {\n  return isAuthError(error) && error.name === 'AuthSessionMissingError'\n}\n\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n  constructor() {\n    super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined)\n  }\n}\n\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message: string) {\n    super(message, 'AuthInvalidCredentialsError', 400, undefined)\n  }\n}\n\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthImplicitGrantRedirectError', 500, undefined)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport function isAuthImplicitGrantRedirectError(\n  error: any\n): error is AuthImplicitGrantRedirectError {\n  return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError'\n}\n\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message: string, status: number) {\n    super(message, 'AuthRetryableFetchError', status, undefined)\n  }\n}\n\nexport function isAuthRetryableFetchError(error: unknown): error is AuthRetryableFetchError {\n  return isAuthError(error) && error.name === 'AuthRetryableFetchError'\n}\n\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nexport class AuthWeakPasswordError extends CustomAuthError {\n  /**\n   * Reasons why the password is deemed weak.\n   */\n  reasons: WeakPasswordReasons[]\n\n  constructor(message: string, status: number, reasons: WeakPasswordReasons[]) {\n    super(message, 'AuthWeakPasswordError', status, 'weak_password')\n\n    this.reasons = reasons\n  }\n}\n\nexport function isAuthWeakPasswordError(error: unknown): error is AuthWeakPasswordError {\n  return isAuthError(error) && error.name === 'AuthWeakPasswordError'\n}\n\nexport class AuthInvalidJwtError extends CustomAuthError {\n  constructor(message: string) {\n    super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt')\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8722, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/base64url.ts"],"sourcesContent":["/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */\n\nimport { Uint8Array_ } from './webauthn.dom'\n\n/**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('')\n\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('')\n\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */\nconst FROM_BASE64URL = (() => {\n  const charMap: number[] = new Array(128)\n\n  for (let i = 0; i < charMap.length; i += 1) {\n    charMap[i] = -1\n  }\n\n  for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\n    charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2\n  }\n\n  for (let i = 0; i < TO_BASE64URL.length; i += 1) {\n    charMap[TO_BASE64URL[i].charCodeAt(0)] = i\n  }\n\n  return charMap\n})()\n\n/**\n * Converts a byte to a Base64-URL string.\n *\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next Base64 character when ready.\n */\nexport function byteToBase64URL(\n  byte: number | null,\n  state: { queue: number; queuedBits: number },\n  emit: (char: string) => void\n) {\n  if (byte !== null) {\n    state.queue = (state.queue << 8) | byte\n    state.queuedBits += 8\n\n    while (state.queuedBits >= 6) {\n      const pos = (state.queue >> (state.queuedBits - 6)) & 63\n      emit(TO_BASE64URL[pos])\n      state.queuedBits -= 6\n    }\n  } else if (state.queuedBits > 0) {\n    state.queue = state.queue << (6 - state.queuedBits)\n    state.queuedBits = 6\n\n    while (state.queuedBits >= 6) {\n      const pos = (state.queue >> (state.queuedBits - 6)) & 63\n      emit(TO_BASE64URL[pos])\n      state.queuedBits -= 6\n    }\n  }\n}\n\n/**\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\n *\n * @param charCode The char code of the JavaScript string.\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next byte.\n */\nexport function byteFromBase64URL(\n  charCode: number,\n  state: { queue: number; queuedBits: number },\n  emit: (byte: number) => void\n) {\n  const bits = FROM_BASE64URL[charCode]\n\n  if (bits > -1) {\n    // valid Base64-URL character\n    state.queue = (state.queue << 6) | bits\n    state.queuedBits += 6\n\n    while (state.queuedBits >= 8) {\n      emit((state.queue >> (state.queuedBits - 8)) & 0xff)\n      state.queuedBits -= 8\n    }\n  } else if (bits === -2) {\n    // ignore spaces, tabs, newlines, =\n    return\n  } else {\n    throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`)\n  }\n}\n\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */\nexport function stringToBase64URL(str: string) {\n  const base64: string[] = []\n\n  const emitter = (char: string) => {\n    base64.push(char)\n  }\n\n  const state = { queue: 0, queuedBits: 0 }\n\n  stringToUTF8(str, (byte: number) => {\n    byteToBase64URL(byte, state, emitter)\n  })\n\n  byteToBase64URL(null, state, emitter)\n\n  return base64.join('')\n}\n\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */\nexport function stringFromBase64URL(str: string) {\n  const conv: string[] = []\n\n  const utf8Emit = (codepoint: number) => {\n    conv.push(String.fromCodePoint(codepoint))\n  }\n\n  const utf8State = {\n    utf8seq: 0,\n    codepoint: 0,\n  }\n\n  const b64State = { queue: 0, queuedBits: 0 }\n\n  const byteEmit = (byte: number) => {\n    stringFromUTF8(byte, utf8State, utf8Emit)\n  }\n\n  for (let i = 0; i < str.length; i += 1) {\n    byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit)\n  }\n\n  return conv.join('')\n}\n\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */\nexport function codepointToUTF8(codepoint: number, emit: (byte: number) => void) {\n  if (codepoint <= 0x7f) {\n    emit(codepoint)\n    return\n  } else if (codepoint <= 0x7ff) {\n    emit(0xc0 | (codepoint >> 6))\n    emit(0x80 | (codepoint & 0x3f))\n    return\n  } else if (codepoint <= 0xffff) {\n    emit(0xe0 | (codepoint >> 12))\n    emit(0x80 | ((codepoint >> 6) & 0x3f))\n    emit(0x80 | (codepoint & 0x3f))\n    return\n  } else if (codepoint <= 0x10ffff) {\n    emit(0xf0 | (codepoint >> 18))\n    emit(0x80 | ((codepoint >> 12) & 0x3f))\n    emit(0x80 | ((codepoint >> 6) & 0x3f))\n    emit(0x80 | (codepoint & 0x3f))\n    return\n  }\n\n  throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`)\n}\n\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */\nexport function stringToUTF8(str: string, emit: (byte: number) => void) {\n  for (let i = 0; i < str.length; i += 1) {\n    let codepoint = str.charCodeAt(i)\n\n    if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n      // most UTF-16 codepoints are Unicode codepoints, except values in this\n      // range where the next UTF-16 codepoint needs to be combined with the\n      // current one to get the Unicode codepoint\n      const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff\n      const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff\n      codepoint = (lowSurrogate | highSurrogate) + 0x10000\n      i += 1\n    }\n\n    codepointToUTF8(codepoint, emit)\n  }\n}\n\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */\nexport function stringFromUTF8(\n  byte: number,\n  state: { utf8seq: number; codepoint: number },\n  emit: (codepoint: number) => void\n) {\n  if (state.utf8seq === 0) {\n    if (byte <= 0x7f) {\n      emit(byte)\n      return\n    }\n\n    // count the number of 1 leading bits until you reach 0\n    for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\n      if (((byte >> (7 - leadingBit)) & 1) === 0) {\n        state.utf8seq = leadingBit\n        break\n      }\n    }\n\n    if (state.utf8seq === 2) {\n      state.codepoint = byte & 31\n    } else if (state.utf8seq === 3) {\n      state.codepoint = byte & 15\n    } else if (state.utf8seq === 4) {\n      state.codepoint = byte & 7\n    } else {\n      throw new Error('Invalid UTF-8 sequence')\n    }\n\n    state.utf8seq -= 1\n  } else if (state.utf8seq > 0) {\n    if (byte <= 0x7f) {\n      throw new Error('Invalid UTF-8 sequence')\n    }\n\n    state.codepoint = (state.codepoint << 6) | (byte & 63)\n    state.utf8seq -= 1\n\n    if (state.utf8seq === 0) {\n      emit(state.codepoint)\n    }\n  }\n}\n\n/**\n * Helper functions to convert different types of strings to Uint8Array\n */\n\nexport function base64UrlToUint8Array(str: string): Uint8Array_ {\n  const result: number[] = []\n  const state = { queue: 0, queuedBits: 0 }\n\n  const onByte = (byte: number) => {\n    result.push(byte)\n  }\n\n  for (let i = 0; i < str.length; i += 1) {\n    byteFromBase64URL(str.charCodeAt(i), state, onByte)\n  }\n\n  return new Uint8Array(result)\n}\n\nexport function stringToUint8Array(str: string): Uint8Array_ {\n  const result: number[] = []\n  stringToUTF8(str, (byte: number) => result.push(byte))\n  return new Uint8Array(result)\n}\n\nexport function bytesToBase64URL(bytes: Uint8Array) {\n  const result: string[] = []\n  const state = { queue: 0, queuedBits: 0 }\n\n  const onChar = (char: string) => {\n    result.push(char)\n  }\n\n  bytes.forEach((byte) => byteToBase64URL(byte, state, onChar))\n\n  // always call with `null` after processing all bytes\n  byteToBase64URL(null, state, onChar)\n\n  return result.join('')\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8943, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/helpers.ts"],"sourcesContent":["import { API_VERSION_HEADER_NAME, BASE64URL_REGEX } from './constants'\nimport { AuthInvalidJwtError } from './errors'\nimport { base64UrlToUint8Array, stringFromBase64URL } from './base64url'\nimport { JwtHeader, JwtPayload, SupportedStorage, User } from './types'\nimport { Uint8Array_ } from './webauthn.dom'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined'\n\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false,\n}\n\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey)\n    globalThis.localStorage.removeItem(randomKey)\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = true\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = false\n  }\n\n  return localStorageWriteTests.writable\n}\n\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href: string) {\n  const result: { [parameter: string]: string } = {}\n\n  const url = new URL(href)\n\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1))\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value\n      })\n    } catch (e: any) {\n      // hash is not a query string\n    }\n  }\n\n  // search parameters take precedence over hash parameters\n  url.searchParams.forEach((value, key) => {\n    result[key] = value\n  })\n\n  return result\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) =>\n      import('@supabase/node-fetch' as any).then(({ default: fetch }) => fetch(...args))\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const looksLikeFetchResponse = (maybeResponse: unknown): maybeResponse is Response => {\n  return (\n    typeof maybeResponse === 'object' &&\n    maybeResponse !== null &&\n    'status' in maybeResponse &&\n    'ok' in maybeResponse &&\n    'json' in maybeResponse &&\n    typeof (maybeResponse as any).json === 'function'\n  )\n}\n\n// Storage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  await storage.setItem(key, JSON.stringify(data))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<unknown> => {\n  const value = await storage.getItem(key)\n\n  if (!value) {\n    return null\n  }\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  await storage.removeItem(key)\n}\n\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred<T = any> {\n  public static promiseConstructor: PromiseConstructor = Promise\n\n  public readonly promise!: PromiseLike<T>\n\n  public readonly resolve!: (value?: T | PromiseLike<T>) => void\n\n  public readonly reject!: (reason?: any) => any\n\n  public constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this as any).promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).resolve = res\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).reject = rej\n    })\n  }\n}\n\nexport function decodeJWT(token: string): {\n  header: JwtHeader\n  payload: JwtPayload\n  signature: Uint8Array_\n  raw: {\n    header: string\n    payload: string\n  }\n} {\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new AuthInvalidJwtError('Invalid JWT structure')\n  }\n\n  // Regex checks for base64url format\n  for (let i = 0; i < parts.length; i++) {\n    if (!BASE64URL_REGEX.test(parts[i] as string)) {\n      throw new AuthInvalidJwtError('JWT not in base64url format')\n    }\n  }\n  const data = {\n    // using base64url lib\n    header: JSON.parse(stringFromBase64URL(parts[0])),\n    payload: JSON.parse(stringFromBase64URL(parts[1])),\n    signature: base64UrlToUint8Array(parts[2]),\n    raw: {\n      header: parts[0],\n      payload: parts[1],\n    },\n  }\n  return data\n}\n\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time: number): Promise<null> {\n  return await new Promise((accept) => {\n    setTimeout(() => accept(null), time)\n  })\n}\n\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable<T>(\n  fn: (attempt: number) => Promise<T>,\n  isRetryable: (attempt: number, error: any | null, result?: T) => boolean\n): Promise<T> {\n  const promise = new Promise<T>((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt)\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result)\n            return\n          }\n        } catch (e: any) {\n          if (!isRetryable(attempt, e)) {\n            reject(e)\n            return\n          }\n        }\n      }\n    })()\n  })\n\n  return promise\n}\n\nfunction dec2hex(dec: number) {\n  return ('0' + dec.toString(16)).substr(-2)\n}\n\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n  const verifierLength = 56\n  const array = new Uint32Array(verifierLength)\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~'\n    const charSetLen = charSet.length\n    let verifier = ''\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen))\n    }\n    return verifier\n  }\n  crypto.getRandomValues(array)\n  return Array.from(array, dec2hex).join('')\n}\n\nasync function sha256(randomString: string) {\n  const encoder = new TextEncoder()\n  const encodedData = encoder.encode(randomString)\n  const hash = await crypto.subtle.digest('SHA-256', encodedData)\n  const bytes = new Uint8Array(hash)\n\n  return Array.from(bytes)\n    .map((c) => String.fromCharCode(c))\n    .join('')\n}\n\nexport async function generatePKCEChallenge(verifier: string) {\n  const hasCryptoSupport =\n    typeof crypto !== 'undefined' &&\n    typeof crypto.subtle !== 'undefined' &&\n    typeof TextEncoder !== 'undefined'\n\n  if (!hasCryptoSupport) {\n    console.warn(\n      'WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.'\n    )\n    return verifier\n  }\n  const hashed = await sha256(verifier)\n  return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '')\n}\n\nexport async function getCodeChallengeAndMethod(\n  storage: SupportedStorage,\n  storageKey: string,\n  isPasswordRecovery = false\n) {\n  const codeVerifier = generatePKCEVerifier()\n  let storedCodeVerifier = codeVerifier\n  if (isPasswordRecovery) {\n    storedCodeVerifier += '/PASSWORD_RECOVERY'\n  }\n  await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier)\n  const codeChallenge = await generatePKCEChallenge(codeVerifier)\n  const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n  return [codeChallenge, codeChallengeMethod]\n}\n\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i\n\nexport function parseResponseAPIVersion(response: Response) {\n  const apiVersion = response.headers.get(API_VERSION_HEADER_NAME)\n\n  if (!apiVersion) {\n    return null\n  }\n\n  if (!apiVersion.match(API_VERSION_REGEX)) {\n    return null\n  }\n\n  try {\n    const date = new Date(`${apiVersion}T00:00:00.0Z`)\n    return date\n  } catch (e: any) {\n    return null\n  }\n}\n\nexport function validateExp(exp: number) {\n  if (!exp) {\n    throw new Error('Missing exp claim')\n  }\n  const timeNow = Math.floor(Date.now() / 1000)\n  if (exp <= timeNow) {\n    throw new Error('JWT has expired')\n  }\n}\n\nexport function getAlgorithm(\n  alg: 'HS256' | 'RS256' | 'ES256'\n): RsaHashedImportParams | EcKeyImportParams {\n  switch (alg) {\n    case 'RS256':\n      return {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' },\n      }\n    case 'ES256':\n      return {\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n        hash: { name: 'SHA-256' },\n      }\n    default:\n      throw new Error('Invalid alg claim')\n  }\n}\n\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/\n\nexport function validateUUID(str: string) {\n  if (!UUID_REGEX.test(str)) {\n    throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not')\n  }\n}\n\nexport function userNotAvailableProxy(): User {\n  const proxyTarget = {} as User\n\n  return new Proxy(proxyTarget, {\n    get: (target: any, prop: string) => {\n      if (prop === '__isUserNotAvailableProxy') {\n        return true\n      }\n      // Preventative check for common problematic symbols during cloning/inspection\n      // These symbols might be accessed by structuredClone or other internal mechanisms.\n      if (typeof prop === 'symbol') {\n        const sProp = (prop as symbol).toString()\n        if (\n          sProp === 'Symbol(Symbol.toPrimitive)' ||\n          sProp === 'Symbol(Symbol.toStringTag)' ||\n          sProp === 'Symbol(util.inspect.custom)'\n        ) {\n          // Node.js util.inspect\n          return undefined\n        }\n      }\n      throw new Error(\n        `@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`\n      )\n    },\n    set: (_target: any, prop: string) => {\n      throw new Error(\n        `@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`\n      )\n    },\n    deleteProperty: (_target: any, prop: string) => {\n      throw new Error(\n        `@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`\n      )\n    },\n  })\n}\n\n/**\n * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n * Note: Only works for JSON-safe data.\n */\nexport function deepClone<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj))\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9267, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/fetch.ts"],"sourcesContent":["import { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants'\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers'\nimport {\n  AuthResponse,\n  AuthResponsePassword,\n  SSOResponse,\n  GenerateLinkProperties,\n  GenerateLinkResponse,\n  User,\n  UserResponse,\n} from './types'\nimport {\n  AuthApiError,\n  AuthRetryableFetchError,\n  AuthWeakPasswordError,\n  AuthUnknownError,\n  AuthSessionMissingError,\n} from './errors'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst NETWORK_ERROR_CODES = [502, 503, 504]\n\nexport async function handleError(error: unknown) {\n  if (!looksLikeFetchResponse(error)) {\n    throw new AuthRetryableFetchError(_getErrorMessage(error), 0)\n  }\n\n  if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    throw new AuthRetryableFetchError(_getErrorMessage(error), error.status)\n  }\n\n  let data: any\n  try {\n    data = await error.json()\n  } catch (e: any) {\n    throw new AuthUnknownError(_getErrorMessage(e), e)\n  }\n\n  let errorCode: string | undefined = undefined\n\n  const responseAPIVersion = parseResponseAPIVersion(error)\n  if (\n    responseAPIVersion &&\n    responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n    typeof data === 'object' &&\n    data &&\n    typeof data.code === 'string'\n  ) {\n    errorCode = data.code\n  } else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n    errorCode = data.error_code\n  }\n\n  if (!errorCode) {\n    // Legacy support for weak password errors, when there were no error codes\n    if (\n      typeof data === 'object' &&\n      data &&\n      typeof data.weak_password === 'object' &&\n      data.weak_password &&\n      Array.isArray(data.weak_password.reasons) &&\n      data.weak_password.reasons.length &&\n      data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)\n    ) {\n      throw new AuthWeakPasswordError(\n        _getErrorMessage(data),\n        error.status,\n        data.weak_password.reasons\n      )\n    }\n  } else if (errorCode === 'weak_password') {\n    throw new AuthWeakPasswordError(\n      _getErrorMessage(data),\n      error.status,\n      data.weak_password?.reasons || []\n    )\n  } else if (errorCode === 'session_not_found') {\n    // The `session_id` inside the JWT does not correspond to a row in the\n    // `sessions` table. This usually means the user has signed out, has been\n    // deleted, or their session has somehow been terminated.\n    throw new AuthSessionMissingError()\n  }\n\n  throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode)\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\ninterface GotrueRequestOptions extends FetchOptions {\n  jwt?: string\n  redirectTo?: string\n  body?: object\n  query?: { [key: string]: string }\n  /**\n   * Function that transforms api response from gotrue into a desirable / standardised format\n   */\n  xform?: (data: any) => any\n}\n\nexport async function _request(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: GotrueRequestOptions\n) {\n  const headers = {\n    ...options?.headers,\n  }\n\n  if (!headers[API_VERSION_HEADER_NAME]) {\n    headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name\n  }\n\n  if (options?.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`\n  }\n\n  const qs = options?.query ?? {}\n  if (options?.redirectTo) {\n    qs['redirect_to'] = options.redirectTo\n  }\n\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\n  const data = await _handleRequest(\n    fetcher,\n    method,\n    url + queryString,\n    {\n      headers,\n      noResolveJson: options?.noResolveJson,\n    },\n    {},\n    options?.body\n  )\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  const requestParams = _getRequestParams(method, options, parameters, body)\n\n  let result: any\n\n  try {\n    result = await fetcher(url, {\n      ...requestParams,\n    })\n  } catch (e) {\n    console.error(e)\n\n    // fetch failed, likely due to a network or CORS error\n    throw new AuthRetryableFetchError(_getErrorMessage(e), 0)\n  }\n\n  if (!result.ok) {\n    await handleError(result)\n  }\n\n  if (options?.noResolveJson) {\n    return result\n  }\n\n  try {\n    return await result.json()\n  } catch (e: any) {\n    await handleError(e)\n  }\n}\n\nexport function _sessionResponse(data: any): AuthResponse {\n  let session = null\n  if (hasSession(data)) {\n    session = { ...data }\n\n    if (!data.expires_at) {\n      session.expires_at = expiresAt(data.expires_in)\n    }\n  }\n\n  const user: User = data.user ?? (data as User)\n  return { data: { session, user }, error: null }\n}\n\nexport function _sessionResponsePassword(data: any): AuthResponsePassword {\n  const response = _sessionResponse(data) as AuthResponsePassword\n\n  if (\n    !response.error &&\n    data.weak_password &&\n    typeof data.weak_password === 'object' &&\n    Array.isArray(data.weak_password.reasons) &&\n    data.weak_password.reasons.length &&\n    data.weak_password.message &&\n    typeof data.weak_password.message === 'string' &&\n    data.weak_password.reasons.reduce((a: boolean, i: any) => a && typeof i === 'string', true)\n  ) {\n    response.data.weak_password = data.weak_password\n  }\n\n  return response\n}\n\nexport function _userResponse(data: any): UserResponse {\n  const user: User = data.user ?? (data as User)\n  return { data: { user }, error: null }\n}\n\nexport function _ssoResponse(data: any): SSOResponse {\n  return { data, error: null }\n}\n\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\n\n  const properties: GenerateLinkProperties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type,\n  }\n\n  const user: User = { ...rest }\n  return {\n    data: {\n      properties,\n      user,\n    },\n    error: null,\n  }\n}\n\nexport function _noResolveJsonResponse(data: any): Response {\n  return data\n}\n\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data: any): boolean {\n  return data.access_token && data.refresh_token && data.expires_in\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9474, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/types.ts"],"sourcesContent":["import { AuthError } from './errors'\nimport { Fetch } from './fetch'\nimport { EIP1193Provider, EthereumSignInInput, Hex } from './web3/ethereum'\nimport type { SolanaSignInInput, SolanaSignInOutput } from './web3/solana'\nimport {\n  ServerCredentialCreationOptions,\n  ServerCredentialRequestOptions,\n  WebAuthnApi,\n} from './webauthn'\nimport {\n  AuthenticationCredential,\n  PublicKeyCredentialCreationOptionsFuture,\n  PublicKeyCredentialRequestOptionsFuture,\n  RegistrationCredential,\n} from './webauthn.dom'\n\n/** One of the providers supported by GoTrue. */\nexport type Provider =\n  | 'apple'\n  | 'azure'\n  | 'bitbucket'\n  | 'discord'\n  | 'facebook'\n  | 'figma'\n  | 'github'\n  | 'gitlab'\n  | 'google'\n  | 'kakao'\n  | 'keycloak'\n  | 'linkedin'\n  | 'linkedin_oidc'\n  | 'notion'\n  | 'slack'\n  | 'slack_oidc'\n  | 'spotify'\n  | 'twitch'\n  | 'twitter'\n  | 'workos'\n  | 'zoom'\n  | 'fly'\n\nexport type AuthChangeEventMFA = 'MFA_CHALLENGE_VERIFIED'\n\nexport type AuthChangeEvent =\n  | 'INITIAL_SESSION'\n  | 'PASSWORD_RECOVERY'\n  | 'SIGNED_IN'\n  | 'SIGNED_OUT'\n  | 'TOKEN_REFRESHED'\n  | 'USER_UPDATED'\n  | AuthChangeEventMFA\n\n/**\n * Provide your own global lock implementation instead of the default\n * implementation. The function should acquire a lock for the duration of the\n * `fn` async function, such that no other client instances will be able to\n * hold it at the same time.\n *\n * @experimental\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout should occur. If positive it\n *                       should throw an Error with an `isAcquireTimeout`\n *                       property set to true if the operation fails to be\n *                       acquired after this much time (ms).\n * @param fn The operation to execute when the lock is acquired.\n */\nexport type LockFunc = <R>(name: string, acquireTimeout: number, fn: () => Promise<R>) => Promise<R>\n\nexport type GoTrueClientOptions = {\n  /* The URL of the GoTrue server. */\n  url?: string\n  /* Any additional headers to send to the GoTrue server. */\n  headers?: { [key: string]: string }\n  /* Optional key name used for storing tokens in local storage. */\n  storageKey?: string\n  /* Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user. */\n  detectSessionInUrl?: boolean\n  /* Set to \"true\" if you want to automatically refresh the token before expiring. */\n  autoRefreshToken?: boolean\n  /* Set to \"true\" if you want to automatically save the user session into local storage. If set to false, session will just be saved in memory. */\n  persistSession?: boolean\n  /* Provide your own local storage implementation to use instead of the browser's local storage. */\n  storage?: SupportedStorage\n  /**\n   * Stores the user object in a separate storage location from the rest of the session data. When non-null, `storage` will only store a JSON object containing the access and refresh token and some adjacent metadata, while `userStorage` will only contain the user object under the key `storageKey + '-user'`.\n   *\n   * When this option is set and cookie storage is used, `getSession()` and other functions that load a session from the cookie store might not return back a user. It's very important to always use `getUser()` to fetch a user object in those scenarios.\n   *\n   * @experimental\n   */\n  userStorage?: SupportedStorage\n  /* A custom fetch implementation. */\n  fetch?: Fetch\n  /* If set to 'pkce' PKCE flow. Defaults to the 'implicit' flow otherwise */\n  flowType?: AuthFlowType\n  /* If debug messages are emitted. Can be used to inspect the behavior of the library. If set to a function, the provided function will be used instead of `console.log()` to perform the logging. */\n  debug?: boolean | ((message: string, ...args: any[]) => void)\n  /**\n   * Provide your own locking mechanism based on the environment. By default no locking is done at this time.\n   *\n   * @experimental\n   */\n  lock?: LockFunc\n  /**\n   * Set to \"true\" if there is a custom authorization header set globally.\n   * @experimental\n   */\n  hasCustomAuthorizationHeader?: boolean\n}\n\nconst WeakPasswordReasons = ['length', 'characters', 'pwned'] as const\n\nexport type WeakPasswordReasons = (typeof WeakPasswordReasons)[number]\nexport type WeakPassword = {\n  reasons: WeakPasswordReasons[]\n  message: string\n}\n\n/**\n * Resolve mapped types and show the derived keys and their types when hovering in\n * VS Code, instead of just showing the names those mapped types are defined with.\n */\nexport type Prettify<T> = T extends Function ? T : { [K in keyof T]: T[K] }\n\n/**\n * A stricter version of TypeScript's Omit that only allows omitting keys that actually exist.\n * This prevents typos and ensures type safety at compile time.\n * Unlike regular Omit, this will error if you try to omit a non-existent key.\n */\nexport type StrictOmit<T, K extends keyof T> = Omit<T, K>\n\n/**\n * a shared result type that encapsulates errors instead of throwing them, allows you to optionally specify the ErrorType\n */\nexport type RequestResult<T, ErrorType extends Error = AuthError> =\n  | {\n      data: T\n      error: null\n    }\n  | {\n      data: null\n      error: Error extends AuthError ? AuthError : ErrorType\n    }\n\n/**\n * similar to RequestResult except it allows you to destructure the possible shape of the success response\n *  {@see RequestResult}\n */\nexport type RequestResultSafeDestructure<T> =\n  | { data: T; error: null }\n  | {\n      data: T extends object ? { [K in keyof T]: null } : null\n      error: AuthError\n    }\n\nexport type AuthResponse = RequestResultSafeDestructure<{\n  user: User | null\n  session: Session | null\n}>\n\nexport type AuthResponsePassword = RequestResultSafeDestructure<{\n  user: User | null\n  session: Session | null\n  weak_password?: WeakPassword | null\n}>\n\n/**\n * AuthOtpResponse is returned when OTP is used.\n *\n * {@see AuthResponse}\n */\nexport type AuthOtpResponse = RequestResultSafeDestructure<{\n  user: null\n  session: null\n  messageId?: string | null\n}>\n\nexport type AuthTokenResponse = RequestResultSafeDestructure<{\n  user: User\n  session: Session\n}>\n\nexport type AuthTokenResponsePassword = RequestResultSafeDestructure<{\n  user: User\n  session: Session\n  weakPassword?: WeakPassword\n}>\n\nexport type OAuthResponse =\n  | {\n      data: {\n        provider: Provider\n        url: string\n      }\n      error: null\n    }\n  | {\n      data: {\n        provider: Provider\n        url: null\n      }\n      error: AuthError\n    }\n\nexport type SSOResponse = RequestResult<{\n  /**\n   * URL to open in a browser which will complete the sign-in flow by\n   * taking the user to the identity provider's authentication flow.\n   *\n   * On browsers you can set the URL to `window.location.href` to take\n   * the user to the authentication flow.\n   */\n  url: string\n}>\n\nexport type UserResponse = RequestResultSafeDestructure<{\n  user: User\n}>\n\nexport interface Session {\n  /**\n   * The oauth provider token. If present, this can be used to make external API requests to the oauth provider used.\n   */\n  provider_token?: string | null\n  /**\n   * The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\n   * Not all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token.\n   */\n  provider_refresh_token?: string | null\n  /**\n   * The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value.\n   */\n  access_token: string\n  /**\n   * A one-time used refresh token that never expires.\n   */\n  refresh_token: string\n  /**\n   * The number of seconds until the token expires (since it was issued). Returned when a login is confirmed.\n   */\n  expires_in: number\n  /**\n   * A timestamp of when the token will expire. Returned when a login is confirmed.\n   */\n  expires_at?: number\n  token_type: 'bearer'\n\n  /**\n   * When using a separate user storage, accessing properties of this object will throw an error.\n   */\n  user: User\n}\n\nconst AMRMethods = [\n  'password',\n  'otp',\n  'oauth',\n  'totp',\n  'mfa/totp',\n  'mfa/phone',\n  'mfa/webauthn',\n  'anonymous',\n  'sso/saml',\n  'magiclink',\n  'web3',\n] as const\n\nexport type AMRMethod = (typeof AMRMethods)[number] | (string & {})\n\n/**\n * An authentication methord reference (AMR) entry.\n *\n * An entry designates what method was used by the user to verify their\n * identity and at what time.\n *\n * @see {@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n */\nexport interface AMREntry {\n  /** Authentication method name. */\n  method: AMRMethod\n\n  /**\n   * Timestamp when the method was successfully used. Represents number of\n   * seconds since 1st January 1970 (UNIX epoch) in UTC.\n   */\n  timestamp: number\n}\n\nexport interface UserIdentity {\n  id: string\n  user_id: string\n  identity_data?: {\n    [key: string]: any\n  }\n  identity_id: string\n  provider: string\n  created_at?: string\n  last_sign_in_at?: string\n  updated_at?: string\n}\n\nconst FactorTypes = ['totp', 'phone', 'webauthn'] as const\n\n/**\n * Type of factor. `totp` and `phone` supported with this version\n */\nexport type FactorType = (typeof FactorTypes)[number]\n\nconst FactorVerificationStatuses = ['verified', 'unverified'] as const\n\n/**\n * The verification status of the factor, default is `unverified` after `.enroll()`, then `verified` after the user verifies it with `.verify()`\n */\ntype FactorVerificationStatus = (typeof FactorVerificationStatuses)[number]\n\n/**\n * A MFA factor.\n *\n * @see {@link GoTrueMFAApi#enroll}\n * @see {@link GoTrueMFAApi#listFactors}\n * @see {@link GoTrueMFAAdminApi#listFactors}\n */\nexport type Factor<\n  Type extends FactorType = FactorType,\n  Status extends FactorVerificationStatus = (typeof FactorVerificationStatuses)[number],\n> = {\n  /** ID of the factor. */\n  id: string\n\n  /** Friendly name of the factor, useful to disambiguate between multiple factors. */\n  friendly_name?: string\n\n  /**\n   * Type of factor. `totp` and `phone` supported with this version\n   */\n  factor_type: Type\n\n  /**\n   * The verification status of the factor, default is `unverified` after `.enroll()`, then `verified` after the user verifies it with `.verify()`\n   */\n  status: Status\n\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserAppMetadata {\n  provider?: string\n  [key: string]: any\n}\n\nexport interface UserMetadata {\n  [key: string]: any\n}\n\nexport interface User {\n  id: string\n  app_metadata: UserAppMetadata\n  user_metadata: UserMetadata\n  aud: string\n  confirmation_sent_at?: string\n  recovery_sent_at?: string\n  email_change_sent_at?: string\n  new_email?: string\n  new_phone?: string\n  invited_at?: string\n  action_link?: string\n  email?: string\n  phone?: string\n  created_at: string\n  confirmed_at?: string\n  email_confirmed_at?: string\n  phone_confirmed_at?: string\n  last_sign_in_at?: string\n  role?: string\n  updated_at?: string\n  identities?: UserIdentity[]\n  is_anonymous?: boolean\n  is_sso_user?: boolean\n  factors?: (Factor<FactorType, 'verified'> | Factor<FactorType, 'unverified'>)[]\n  deleted_at?: string\n}\n\nexport interface UserAttributes {\n  /**\n   * The user's email.\n   */\n  email?: string\n\n  /**\n   * The user's phone.\n   */\n  phone?: string\n\n  /**\n   * The user's password.\n   */\n  password?: string\n\n  /**\n   * The nonce sent for reauthentication if the user's password is to be updated.\n   *\n   * Call reauthenticate() to obtain the nonce first.\n   */\n  nonce?: string\n\n  /**\n   * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n   *\n   * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n   *\n   */\n  data?: object\n}\n\nexport interface AdminUserAttributes extends Omit<UserAttributes, 'data'> {\n  /**\n   * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n   *\n   *\n   * The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n   *\n   * Note: When using the GoTrueAdminApi and wanting to modify a user's metadata,\n   * this attribute is used instead of UserAttributes data.\n   *\n   */\n  user_metadata?: object\n\n  /**\n   * A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.\n   *\n   * Only a service role can modify.\n   *\n   * The `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\n   * access control information.\n   */\n  app_metadata?: object\n\n  /**\n   * Confirms the user's email address if set to true.\n   *\n   * Only a service role can modify.\n   */\n  email_confirm?: boolean\n\n  /**\n   * Confirms the user's phone number if set to true.\n   *\n   * Only a service role can modify.\n   */\n  phone_confirm?: boolean\n\n  /**\n   * Determines how long a user is banned for.\n   *\n   * The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\n   * Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n   *\n   * For example, some possible durations include: '300ms', '2h45m'.\n   *\n   * Setting the ban duration to 'none' lifts the ban on the user.\n   */\n  ban_duration?: string | 'none'\n\n  /**\n   * The `role` claim set in the user's access token JWT.\n   *\n   * When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n   *\n   * Setting this role to `service_role` is not recommended as it grants the user admin privileges.\n   */\n  role?: string\n\n  /**\n   * The `password_hash` for the user's password.\n   *\n   * Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n   *\n   * Supports bcrypt, scrypt (firebase), and argon2 password hashes.\n   */\n  password_hash?: string\n\n  /**\n   * The `id` for the user.\n   *\n   * Allows you to overwrite the default `id` set for the user.\n   */\n  id?: string\n}\n\nexport interface Subscription {\n  /**\n   * The subscriber UUID. This will be set by the client.\n   */\n  id: string\n  /**\n   * The function to call every time there is an event. eg: (eventName) => {}\n   */\n  callback: (event: AuthChangeEvent, session: Session | null) => void\n  /**\n   * Call this to remove the listener.\n   */\n  unsubscribe: () => void\n}\n\nexport type SignInAnonymouslyCredentials = {\n  options?: {\n    /**\n     * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n     *\n     * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n     */\n    data?: object\n    /** Verification token received when the user completes the captcha on the site. */\n    captchaToken?: string\n  }\n}\n\nexport type SignUpWithPasswordCredentials = Prettify<\n  PasswordCredentialsBase & {\n    options?: {\n      emailRedirectTo?: string // only for email\n      data?: object\n      captchaToken?: string\n      channel?: 'sms' | 'whatsapp' // only for phone\n    }\n  }\n>\n\ntype PasswordCredentialsBase =\n  | { email: string; password: string }\n  | { phone: string; password: string }\n\nexport type SignInWithPasswordCredentials = PasswordCredentialsBase & {\n  options?: {\n    captchaToken?: string\n  }\n}\n\nexport type SignInWithPasswordlessCredentials =\n  | {\n      /** The user's email address. */\n      email: string\n      options?: {\n        /** The redirect url embedded in the email link */\n        emailRedirectTo?: string\n        /** If set to false, this method will not create a new user. Defaults to true. */\n        shouldCreateUser?: boolean\n        /**\n         * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n         *\n         * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n         */\n        data?: object\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      /** The user's phone number. */\n      phone: string\n      options?: {\n        /** If set to false, this method will not create a new user. Defaults to true. */\n        shouldCreateUser?: boolean\n        /**\n         * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n         *\n         * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n         */\n        data?: object\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n        /** Messaging channel to use (e.g. whatsapp or sms) */\n        channel?: 'sms' | 'whatsapp'\n      }\n    }\n\nexport type AuthFlowType = 'implicit' | 'pkce'\nexport type SignInWithOAuthCredentials = {\n  /** One of the providers supported by GoTrue. */\n  provider: Provider\n  options?: {\n    /** A URL to send the user to after they are confirmed. */\n    redirectTo?: string\n    /** A space-separated list of scopes granted to the OAuth application. */\n    scopes?: string\n    /** An object of query params */\n    queryParams?: { [key: string]: string }\n    /** If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider. */\n    skipBrowserRedirect?: boolean\n  }\n}\n\nexport type SignInWithIdTokenCredentials = {\n  /** Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `kakao`, `keycloak` (deprecated). */\n  provider: 'google' | 'apple' | 'azure' | 'facebook' | 'kakao' | (string & {})\n  /** OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token. */\n  token: string\n  /** If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token. */\n  access_token?: string\n  /** If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token. */\n  nonce?: string\n  options?: {\n    /** Verification token received when the user completes the captcha on the site. */\n    captchaToken?: string\n  }\n}\n\nexport type SolanaWallet = {\n  signIn?: (...inputs: SolanaSignInInput[]) => Promise<SolanaSignInOutput | SolanaSignInOutput[]>\n  publicKey?: {\n    toBase58: () => string\n  } | null\n\n  signMessage?: (message: Uint8Array, encoding?: 'utf8' | string) => Promise<Uint8Array> | undefined\n}\n\nexport type SolanaWeb3Credentials =\n  | {\n      chain: 'solana'\n\n      /** Wallet interface to use. If not specified will default to `window.solana`. */\n      wallet?: SolanaWallet\n\n      /** Optional statement to include in the Sign in with Solana message. Must not include new line characters. Most wallets like Phantom **require specifying a statement!** */\n      statement?: string\n\n      options?: {\n        /** URL to use with the wallet interface. Some wallets do not allow signing a message for URLs different from the current page. */\n        url?: string\n\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n\n        signInWithSolana?: Partial<\n          Omit<SolanaSignInInput, 'version' | 'chain' | 'domain' | 'uri' | 'statement'>\n        >\n      }\n    }\n  | {\n      chain: 'solana'\n\n      /** Sign in with Solana compatible message. Must include `Issued At`, `URI` and `Version`. */\n      message: string\n\n      /** Ed25519 signature of the message. */\n      signature: Uint8Array\n\n      options?: {\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type EthereumWallet = EIP1193Provider\n\nexport type EthereumWeb3Credentials =\n  | {\n      chain: 'ethereum'\n\n      /** Wallet interface to use. If not specified will default to `window.ethereum`. */\n      wallet?: EthereumWallet\n\n      /** Optional statement to include in the Sign in with Ethereum message. Must not include new line characters. Most wallets like Phantom **require specifying a statement!** */\n      statement?: string\n\n      options?: {\n        /** URL to use with the wallet interface. Some wallets do not allow signing a message for URLs different from the current page. */\n        url?: string\n\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n\n        signInWithEthereum?: Partial<\n          Omit<EthereumSignInInput, 'version' | 'domain' | 'uri' | 'statement'>\n        >\n      }\n    }\n  | {\n      chain: 'ethereum'\n\n      /** Sign in with Ethereum compatible message. Must include `Issued At`, `URI` and `Version`. */\n      message: string\n\n      /** Ethereum curve (secp256k1) signature of the message. */\n      signature: Hex\n\n      options?: {\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type Web3Credentials = SolanaWeb3Credentials | EthereumWeb3Credentials\n\nexport type VerifyOtpParams = VerifyMobileOtpParams | VerifyEmailOtpParams | VerifyTokenHashParams\nexport interface VerifyMobileOtpParams {\n  /** The user's phone number. */\n  phone: string\n  /** The otp sent to the user's phone number. */\n  token: string\n  /** The user's verification type. */\n  type: MobileOtpType\n  options?: {\n    /** A URL to send the user to after they are confirmed. */\n    redirectTo?: string\n\n    /**\n     * Verification token received when the user completes the captcha on the site.\n     *\n     * @deprecated\n     */\n    captchaToken?: string\n  }\n}\nexport interface VerifyEmailOtpParams {\n  /** The user's email address. */\n  email: string\n  /** The otp sent to the user's email address. */\n  token: string\n  /** The user's verification type. */\n  type: EmailOtpType\n  options?: {\n    /** A URL to send the user to after they are confirmed. */\n    redirectTo?: string\n\n    /** Verification token received when the user completes the captcha on the site.\n     *\n     * @deprecated\n     */\n    captchaToken?: string\n  }\n}\n\nexport interface VerifyTokenHashParams {\n  /** The token hash used in an email link */\n  token_hash: string\n\n  /** The user's verification type. */\n  type: EmailOtpType\n}\n\nexport type MobileOtpType = 'sms' | 'phone_change'\nexport type EmailOtpType = 'signup' | 'invite' | 'magiclink' | 'recovery' | 'email_change' | 'email'\n\nexport type ResendParams =\n  | {\n      type: Extract<EmailOtpType, 'signup' | 'email_change'>\n      email: string\n      options?: {\n        /** A URL to send the user to after they have signed-in. */\n        emailRedirectTo?: string\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      type: Extract<MobileOtpType, 'sms' | 'phone_change'>\n      phone: string\n      options?: {\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type SignInWithSSO =\n  | {\n      /** UUID of the SSO provider to invoke single-sign on to. */\n      providerId: string\n\n      options?: {\n        /** A URL to send the user to after they have signed-in. */\n        redirectTo?: string\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n  | {\n      /** Domain name of the organization for which to invoke single-sign on. */\n      domain: string\n\n      options?: {\n        /** A URL to send the user to after they have signed-in. */\n        redirectTo?: string\n        /** Verification token received when the user completes the captcha on the site. */\n        captchaToken?: string\n      }\n    }\n\nexport type GenerateSignupLinkParams = {\n  type: 'signup'\n  email: string\n  password: string\n  options?: Pick<GenerateLinkOptions, 'data' | 'redirectTo'>\n}\n\nexport type GenerateInviteOrMagiclinkParams = {\n  type: 'invite' | 'magiclink'\n  /** The user's email */\n  email: string\n  options?: Pick<GenerateLinkOptions, 'data' | 'redirectTo'>\n}\n\nexport type GenerateRecoveryLinkParams = {\n  type: 'recovery'\n  /** The user's email */\n  email: string\n  options?: Pick<GenerateLinkOptions, 'redirectTo'>\n}\n\nexport type GenerateEmailChangeLinkParams = {\n  type: 'email_change_current' | 'email_change_new'\n  /** The user's email */\n  email: string\n  /**\n   * The user's new email. Only required if type is 'email_change_current' or 'email_change_new'.\n   */\n  newEmail: string\n  options?: Pick<GenerateLinkOptions, 'redirectTo'>\n}\n\nexport interface GenerateLinkOptions {\n  /**\n   * A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.\n   *\n   * The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n   */\n  data?: object\n  /** The URL which will be appended to the email link generated. */\n  redirectTo?: string\n}\n\nexport type GenerateLinkParams =\n  | GenerateSignupLinkParams\n  | GenerateInviteOrMagiclinkParams\n  | GenerateRecoveryLinkParams\n  | GenerateEmailChangeLinkParams\n\nexport type GenerateLinkResponse = RequestResultSafeDestructure<{\n  properties: GenerateLinkProperties\n  user: User\n}>\n\n/** The properties related to the email link generated  */\nexport type GenerateLinkProperties = {\n  /**\n   * The email link to send to the user.\n   * The action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}\n   * */\n  action_link: string\n  /**\n   * The raw email OTP.\n   * You should send this in the email if you want your users to verify using an OTP instead of the action link.\n   * */\n  email_otp: string\n  /**\n   * The hashed token appended to the action link.\n   * */\n  hashed_token: string\n  /** The URL appended to the action link. */\n  redirect_to: string\n  /** The verification type that the email link is associated to. */\n  verification_type: GenerateLinkType\n}\n\nexport type GenerateLinkType =\n  | 'signup'\n  | 'invite'\n  | 'magiclink'\n  | 'recovery'\n  | 'email_change_current'\n  | 'email_change_new'\n\nexport type MFAEnrollParams = MFAEnrollTOTPParams | MFAEnrollPhoneParams | MFAEnrollWebauthnParams\n\nexport type MFAUnenrollParams = {\n  /** ID of the factor being unenrolled. */\n  factorId: string\n}\n\ntype MFAVerifyParamsBase = {\n  /** ID of the factor being verified. Returned in enroll(). */\n  factorId: string\n  /** ID of the challenge being verified. Returned in challenge(). */\n  challengeId: string\n}\n\ntype MFAVerifyTOTPParamFields = {\n  /** Verification code provided by the user. */\n  code: string\n}\n\nexport type MFAVerifyTOTPParams = Prettify<MFAVerifyParamsBase & MFAVerifyTOTPParamFields>\n\ntype MFAVerifyPhoneParamFields = MFAVerifyTOTPParamFields\n\nexport type MFAVerifyPhoneParams = Prettify<MFAVerifyParamsBase & MFAVerifyPhoneParamFields>\n\ntype MFAVerifyWebauthnParamFieldsBase = {\n  /** Relying party ID */\n  rpId: string\n  /** Relying party origins */\n  rpOrigins?: string[]\n}\n\ntype MFAVerifyWebauthnCredentialParamFields<T extends 'create' | 'request' = 'create' | 'request'> =\n  {\n    /** Operation type */\n    type: T\n    /** Creation response from the authenticator (for enrollment/unverified factors) */\n    credential_response: T extends 'create' ? RegistrationCredential : AuthenticationCredential\n  }\n\n/**\n * WebAuthn-specific fields for MFA verification.\n * Supports both credential creation (registration) and request (authentication) flows.\n * @template T - Type of WebAuthn operation: 'create' for registration, 'request' for authentication\n */\nexport type MFAVerifyWebauthnParamFields<T extends 'create' | 'request' = 'create' | 'request'> = {\n  webauthn: MFAVerifyWebauthnParamFieldsBase & MFAVerifyWebauthnCredentialParamFields<T>\n}\n\n/**\n * Parameters for WebAuthn MFA verification.\n * Used to verify WebAuthn credentials after challenge.\n * @template T - Type of WebAuthn operation: 'create' for registration, 'request' for authentication\n * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}\n */\nexport type MFAVerifyWebauthnParams<T extends 'create' | 'request' = 'create' | 'request'> =\n  Prettify<MFAVerifyParamsBase & MFAVerifyWebauthnParamFields<T>>\n\nexport type MFAVerifyParams = MFAVerifyTOTPParams | MFAVerifyPhoneParams | MFAVerifyWebauthnParams\n\ntype MFAChallengeParamsBase = {\n  /** ID of the factor to be challenged. Returned in enroll(). */\n  factorId: string\n}\n\nconst MFATOTPChannels = ['sms', 'whatsapp'] as const\nexport type MFATOTPChannel = (typeof MFATOTPChannels)[number]\n\nexport type MFAChallengeTOTPParams = Prettify<MFAChallengeParamsBase>\n\ntype MFAChallengePhoneParamFields<Channel extends MFATOTPChannel = MFATOTPChannel> = {\n  /** Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors */\n  channel: Channel\n}\n\nexport type MFAChallengePhoneParams = Prettify<\n  MFAChallengeParamsBase & MFAChallengePhoneParamFields\n>\n\n/** WebAuthn parameters for WebAuthn factor challenge */\ntype MFAChallengeWebauthnParamFields = {\n  webauthn: {\n    /** Relying party ID */\n    rpId: string\n    /** Relying party origins*/\n    rpOrigins?: string[]\n  }\n}\n\n/**\n * Parameters for initiating a WebAuthn MFA challenge.\n * Includes Relying Party information needed for WebAuthn ceremonies.\n * @see {@link https://w3c.github.io/webauthn/#sctn-rp-operations W3C WebAuthn Spec - Relying Party Operations}\n */\nexport type MFAChallengeWebauthnParams = Prettify<\n  MFAChallengeParamsBase & MFAChallengeWebauthnParamFields\n>\n\nexport type MFAChallengeParams =\n  | MFAChallengeTOTPParams\n  | MFAChallengePhoneParams\n  | MFAChallengeWebauthnParams\n\ntype MFAChallengeAndVerifyParamsBase = Omit<MFAVerifyParamsBase, 'challengeId'>\n\ntype MFAChallengeAndVerifyTOTPParamFields = MFAVerifyTOTPParamFields\n\ntype MFAChallengeAndVerifyTOTPParams = Prettify<\n  MFAChallengeAndVerifyParamsBase & MFAChallengeAndVerifyTOTPParamFields\n>\n\nexport type MFAChallengeAndVerifyParams = MFAChallengeAndVerifyTOTPParams\n\n/**\n * Data returned after successful MFA verification.\n * Contains new session tokens and updated user information.\n */\nexport type AuthMFAVerifyResponseData = {\n  /** New access token (JWT) after successful verification. */\n  access_token: string\n\n  /** Type of token, always `bearer`. */\n  token_type: 'bearer'\n\n  /** Number of seconds in which the access token will expire. */\n  expires_in: number\n\n  /** Refresh token you can use to obtain new access tokens when expired. */\n  refresh_token: string\n\n  /** Updated user profile. */\n  user: User\n}\n\n/**\n * Response type for MFA verification operations.\n * Returns session tokens on successful verification.\n */\nexport type AuthMFAVerifyResponse = RequestResult<AuthMFAVerifyResponseData>\n\nexport type AuthMFAEnrollResponse =\n  | AuthMFAEnrollTOTPResponse\n  | AuthMFAEnrollPhoneResponse\n  | AuthMFAEnrollWebauthnResponse\n\nexport type AuthMFAUnenrollResponse = RequestResult<{\n  /** ID of the factor that was successfully unenrolled. */\n  id: string\n}>\n\ntype AuthMFAChallengeResponseBase<T extends FactorType> = {\n  /** ID of the newly created challenge. */\n  id: string\n\n  /** Factor Type which generated the challenge */\n  type: T\n\n  /** Timestamp in UNIX seconds when this challenge will no longer be usable. */\n  expires_at: number\n}\n\ntype AuthMFAChallengeTOTPResponseFields = {\n  /** no extra fields for now, kept for consistency and for possible future changes  */\n}\n\nexport type AuthMFAChallengeTOTPResponse = RequestResult<\n  Prettify<AuthMFAChallengeResponseBase<'totp'> & AuthMFAChallengeTOTPResponseFields>\n>\n\ntype AuthMFAChallengePhoneResponseFields = {\n  /** no extra fields for now, kept for consistency and for possible future changes  */\n}\n\nexport type AuthMFAChallengePhoneResponse = RequestResult<\n  Prettify<AuthMFAChallengeResponseBase<'phone'> & AuthMFAChallengePhoneResponseFields>\n>\n\ntype AuthMFAChallengeWebauthnResponseFields = {\n  webauthn:\n    | {\n        type: 'create'\n        credential_options: { publicKey: PublicKeyCredentialCreationOptionsFuture }\n      }\n    | {\n        type: 'request'\n        credential_options: { publicKey: PublicKeyCredentialRequestOptionsFuture }\n      }\n}\n\n/**\n * Response type for WebAuthn MFA challenge.\n * Contains credential creation or request options from the server.\n * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}\n */\nexport type AuthMFAChallengeWebauthnResponse = RequestResult<\n  Prettify<AuthMFAChallengeResponseBase<'webauthn'> & AuthMFAChallengeWebauthnResponseFields>\n>\n\ntype AuthMFAChallengeWebauthnResponseFieldsJSON = {\n  webauthn:\n    | {\n        type: 'create'\n        credential_options: { publicKey: ServerCredentialCreationOptions }\n      }\n    | {\n        type: 'request'\n        credential_options: { publicKey: ServerCredentialRequestOptions }\n      }\n}\n\n/**\n * JSON-serializable version of WebAuthn challenge response.\n * Used for server communication with base64url-encoded binary fields.\n */\nexport type AuthMFAChallengeWebauthnResponseDataJSON = Prettify<\n  AuthMFAChallengeResponseBase<'webauthn'> & AuthMFAChallengeWebauthnResponseFieldsJSON\n>\n\n/**\n * Server response type for WebAuthn MFA challenge.\n * Contains JSON-formatted WebAuthn options ready for browser API.\n */\nexport type AuthMFAChallengeWebauthnServerResponse =\n  RequestResult<AuthMFAChallengeWebauthnResponseDataJSON>\n\nexport type AuthMFAChallengeResponse =\n  | AuthMFAChallengeTOTPResponse\n  | AuthMFAChallengePhoneResponse\n  | AuthMFAChallengeWebauthnResponse\n\n/** response of ListFactors, which should contain all the types of factors that are available, this ensures we always include all */\nexport type AuthMFAListFactorsResponse<T extends typeof FactorTypes = typeof FactorTypes> =\n  RequestResult<\n    {\n      /** All available factors (verified and unverified). */\n      all: Prettify<Factor>[]\n\n      // Dynamically create a property for each factor type with only verified factors\n    } & {\n      [K in T[number]]: Prettify<Factor<K, 'verified'>>[]\n    }\n  >\n\nexport type AuthenticatorAssuranceLevels = 'aal1' | 'aal2'\n\nexport type AuthMFAGetAuthenticatorAssuranceLevelResponse = RequestResult<{\n  /** Current AAL level of the session. */\n  currentLevel: AuthenticatorAssuranceLevels | null\n\n  /**\n   * Next possible AAL level for the session. If the next level is higher\n   * than the current one, the user should go through MFA.\n   *\n   * @see {@link GoTrueMFAApi#challenge}\n   */\n  nextLevel: AuthenticatorAssuranceLevels | null\n\n  /**\n   * A list of all authentication methods attached to this session. Use\n   * the information here to detect the last time a user verified a\n   * factor, for example if implementing a step-up scenario.\n   */\n  currentAuthenticationMethods: AMREntry[]\n}>\n\n/**\n * Contains the full multi-factor authentication API.\n *\n */\nexport interface GoTrueMFAApi {\n  /**\n   * Starts the enrollment process for a new Multi-Factor Authentication (MFA)\n   * factor. This method creates a new `unverified` factor.\n   * To verify a factor, present the QR code or secret to the user and ask them to add it to their\n   * authenticator app.\n   * The user has to enter the code from their authenticator app to verify it.\n   *\n   * Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n   */\n  enroll(params: MFAEnrollTOTPParams): Promise<AuthMFAEnrollTOTPResponse>\n  enroll(params: MFAEnrollPhoneParams): Promise<AuthMFAEnrollPhoneResponse>\n  enroll(params: MFAEnrollWebauthnParams): Promise<AuthMFAEnrollWebauthnResponse>\n  enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse>\n\n  /**\n   * Prepares a challenge used to verify that a user has access to a MFA\n   * factor.\n   */\n  challenge(params: MFAChallengeTOTPParams): Promise<Prettify<AuthMFAChallengeTOTPResponse>>\n  challenge(params: MFAChallengePhoneParams): Promise<Prettify<AuthMFAChallengePhoneResponse>>\n  challenge(params: MFAChallengeWebauthnParams): Promise<Prettify<AuthMFAChallengeWebauthnResponse>>\n  challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse>\n\n  /**\n   * Verifies a code against a challenge. The verification code is\n   * provided by the user by entering a code seen in their authenticator app.\n   */\n  verify(params: MFAVerifyTOTPParams): Promise<AuthMFAVerifyResponse>\n  verify(params: MFAVerifyPhoneParams): Promise<AuthMFAVerifyResponse>\n  verify(params: MFAVerifyWebauthnParams): Promise<AuthMFAVerifyResponse>\n  verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse>\n\n  /**\n   * Unenroll removes a MFA factor.\n   * A user has to have an `aal2` authenticator level in order to unenroll a `verified` factor.\n   */\n  unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse>\n\n  /**\n   * Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\n   * provided by the user by entering a code seen in their authenticator app.\n   */\n  challengeAndVerify(params: MFAChallengeAndVerifyParams): Promise<AuthMFAVerifyResponse>\n\n  /**\n   * Returns the list of MFA factors enabled for this user.\n   *\n   * @see {@link GoTrueMFAApi#enroll}\n   * @see {@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   * @see {@link GoTrueClient#getUser}\n   *\n   */\n  listFactors(): Promise<AuthMFAListFactorsResponse>\n\n  /**\n   * Returns the Authenticator Assurance Level (AAL) for the active session.\n   *\n   * - `aal1` (or `null`) means that the user's identity has been verified only\n   * with a conventional login (email+password, OTP, magic link, social login,\n   * etc.).\n   * - `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n   *\n   * Although this method returns a promise, it's fairly quick (microseconds)\n   * and rarely uses the network. You can use this to check whether the current\n   * user needs to be shown a screen to verify their MFA factors.\n   *\n   */\n  getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse>\n\n  // namespace for the webauthn methods\n  webauthn: WebAuthnApi\n}\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminDeleteFactorResponse = RequestResult<{\n  /** ID of the factor that was successfully deleted. */\n  id: string\n}>\n/**\n * @expermental\n */\nexport type AuthMFAAdminDeleteFactorParams = {\n  /** ID of the MFA factor to delete. */\n  id: string\n\n  /** ID of the user whose factor is being deleted. */\n  userId: string\n}\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminListFactorsResponse = RequestResult<{\n  /** All factors attached to the user. */\n  factors: Factor[]\n}>\n\n/**\n * @expermental\n */\nexport type AuthMFAAdminListFactorsParams = {\n  /** ID of the user. */\n  userId: string\n}\n\n/**\n * Contains the full multi-factor authentication administration API.\n *\n * @expermental\n */\nexport interface GoTrueAdminMFAApi {\n  /**\n   * Lists all factors associated to a user.\n   *\n   */\n  listFactors(params: AuthMFAAdminListFactorsParams): Promise<AuthMFAAdminListFactorsResponse>\n\n  /**\n   * Deletes a factor on a user. This will log the user out of all active\n   * sessions if the deleted factor was verified.\n   *\n   * @see {@link GoTrueMFAApi#unenroll}\n   *\n   * @expermental\n   */\n  deleteFactor(params: AuthMFAAdminDeleteFactorParams): Promise<AuthMFAAdminDeleteFactorResponse>\n}\n\ntype AnyFunction = (...args: any[]) => any\ntype MaybePromisify<T> = T | Promise<T>\n\ntype PromisifyMethods<T> = {\n  [K in keyof T]: T[K] extends AnyFunction\n    ? (...args: Parameters<T[K]>) => MaybePromisify<ReturnType<T[K]>>\n    : T[K]\n}\n\nexport type SupportedStorage = PromisifyMethods<\n  Pick<Storage, 'getItem' | 'setItem' | 'removeItem'>\n> & {\n  /**\n   * If set to `true` signals to the library that the storage medium is used\n   * on a server and the values may not be authentic, such as reading from\n   * request cookies. Implementations should not set this to true if the client\n   * is used on a server that reads storage information from authenticated\n   * sources, such as a secure database or file.\n   */\n  isServer?: boolean\n}\n\nexport type InitializeResult = { error: AuthError | null }\n\nexport type CallRefreshTokenResult = RequestResult<Session>\n\nexport type Pagination = {\n  [key: string]: any\n  nextPage: number | null\n  lastPage: number\n  total: number\n}\n\nexport type PageParams = {\n  /** The page number */\n  page?: number\n  /** Number of items returned per page */\n  perPage?: number\n}\n\nexport type SignOut = {\n  /**\n   * Determines which sessions should be\n   * logged out. Global means all\n   * sessions by this account. Local\n   * means only this session. Others\n   * means all other sessions except the\n   * current one. When using others,\n   * there is no sign-out event fired on\n   * the current session!\n   */\n  scope?: 'global' | 'local' | 'others'\n}\n\ntype MFAEnrollParamsBase<T extends FactorType> = {\n  /** The type of factor being enrolled. */\n  factorType: T\n  /** Human readable name assigned to the factor. */\n  friendlyName?: string\n}\n\ntype MFAEnrollTOTPParamFields = {\n  /** Domain which the user is enrolled with. */\n  issuer?: string\n}\n\nexport type MFAEnrollTOTPParams = Prettify<MFAEnrollParamsBase<'totp'> & MFAEnrollTOTPParamFields>\n\ntype MFAEnrollPhoneParamFields = {\n  /** Phone number associated with a factor. Number should conform to E.164 format */\n  phone: string\n}\nexport type MFAEnrollPhoneParams = Prettify<\n  MFAEnrollParamsBase<'phone'> & MFAEnrollPhoneParamFields\n>\n\ntype MFAEnrollWebauthnFields = {\n  /** no extra fields for now, kept for consistency and for possible future changes  */\n}\n\n/**\n * Parameters for enrolling a WebAuthn factor.\n * Creates an unverified WebAuthn factor that must be verified with a credential.\n * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n */\nexport type MFAEnrollWebauthnParams = Prettify<\n  MFAEnrollParamsBase<'webauthn'> & MFAEnrollWebauthnFields\n>\n\ntype AuthMFAEnrollResponseBase<T extends FactorType> = {\n  /** ID of the factor that was just enrolled (in an unverified state). */\n  id: string\n\n  /** Type of MFA factor.*/\n  type: T\n\n  /** Friendly name of the factor, useful for distinguishing between factors **/\n  friendly_name?: string\n}\n\ntype AuthMFAEnrollTOTPResponseFields = {\n  /** TOTP enrollment information. */\n  totp: {\n    /** Contains a QR code encoding the authenticator URI. You can\n     * convert it to a URL by prepending `data:image/svg+xml;utf-8,` to\n     * the value. Avoid logging this value to the console. */\n    qr_code: string\n\n    /** The TOTP secret (also encoded in the QR code). Show this secret\n     * in a password-style field to the user, in case they are unable to\n     * scan the QR code. Avoid logging this value to the console. */\n    secret: string\n\n    /** The authenticator URI encoded within the QR code, should you need\n     * to use it. Avoid loggin this value to the console. */\n    uri: string\n  }\n}\n\nexport type AuthMFAEnrollTOTPResponse = RequestResult<\n  Prettify<AuthMFAEnrollResponseBase<'totp'> & AuthMFAEnrollTOTPResponseFields>\n>\n\ntype AuthMFAEnrollPhoneResponseFields = {\n  /** Phone number of the MFA factor in E.164 format. Used to send messages  */\n  phone: string\n}\n\nexport type AuthMFAEnrollPhoneResponse = RequestResult<\n  Prettify<AuthMFAEnrollResponseBase<'phone'> & AuthMFAEnrollPhoneResponseFields>\n>\n\ntype AuthMFAEnrollWebauthnFields = {\n  /** no extra fields for now, kept for consistency and for possible future changes  */\n}\n\n/**\n * Response type for WebAuthn factor enrollment.\n * Returns the enrolled factor ID and metadata.\n * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n */\nexport type AuthMFAEnrollWebauthnResponse = RequestResult<\n  Prettify<AuthMFAEnrollResponseBase<'webauthn'> & AuthMFAEnrollWebauthnFields>\n>\n\nexport type JwtHeader = {\n  alg: 'RS256' | 'ES256' | 'HS256'\n  kid: string\n  typ: string\n}\n\nexport type RequiredClaims = {\n  iss: string\n  sub: string\n  aud: string | string[]\n  exp: number\n  iat: number\n  role: string\n  aal: AuthenticatorAssuranceLevels\n  session_id: string\n}\n\nexport type JwtPayload = RequiredClaims & {\n  [key: string]: any\n}\n\nexport interface JWK {\n  kty: 'RSA' | 'EC' | 'oct'\n  key_ops: string[]\n  alg?: string\n  kid?: string\n  [key: string]: any\n}\n\nexport const SIGN_OUT_SCOPES = ['global', 'local', 'others'] as const\nexport type SignOutScope = (typeof SIGN_OUT_SCOPES)[number]\n\n/**\n * OAuth client grant types supported by the OAuth 2.1 server.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClientGrantType = 'authorization_code' | 'refresh_token'\n\n/**\n * OAuth client response types supported by the OAuth 2.1 server.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClientResponseType = 'code'\n\n/**\n * OAuth client type indicating whether the client can keep credentials confidential.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClientType = 'public' | 'confidential'\n\n/**\n * OAuth client registration type.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClientRegistrationType = 'dynamic' | 'manual'\n\n/**\n * OAuth client object returned from the OAuth 2.1 server.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClient = {\n  /** Unique identifier for the OAuth client */\n  client_id: string\n  /** Human-readable name of the OAuth client */\n  client_name: string\n  /** Client secret (only returned on registration and regeneration) */\n  client_secret?: string\n  /** Type of OAuth client */\n  client_type: OAuthClientType\n  /** Token endpoint authentication method */\n  token_endpoint_auth_method: string\n  /** Registration type of the client */\n  registration_type: OAuthClientRegistrationType\n  /** URI of the OAuth client */\n  client_uri?: string\n  /** Array of allowed redirect URIs */\n  redirect_uris: string[]\n  /** Array of allowed grant types */\n  grant_types: OAuthClientGrantType[]\n  /** Array of allowed response types */\n  response_types: OAuthClientResponseType[]\n  /** Scope of the OAuth client */\n  scope?: string\n  /** Timestamp when the client was created */\n  created_at: string\n  /** Timestamp when the client was last updated */\n  updated_at: string\n}\n\n/**\n * Parameters for creating a new OAuth client.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type CreateOAuthClientParams = {\n  /** Human-readable name of the OAuth client */\n  client_name: string\n  /** URI of the OAuth client */\n  client_uri?: string\n  /** Array of allowed redirect URIs */\n  redirect_uris: string[]\n  /** Array of allowed grant types (optional, defaults to authorization_code and refresh_token) */\n  grant_types?: OAuthClientGrantType[]\n  /** Array of allowed response types (optional, defaults to code) */\n  response_types?: OAuthClientResponseType[]\n  /** Scope of the OAuth client */\n  scope?: string\n}\n\n/**\n * Response type for OAuth client operations.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClientResponse = RequestResult<OAuthClient>\n\n/**\n * Response type for listing OAuth clients.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport type OAuthClientListResponse =\n  | {\n      data: { clients: OAuthClient[]; aud: string } & Pagination\n      error: null\n    }\n  | {\n      data: { clients: [] }\n      error: AuthError\n    }\n\n/**\n * Contains all OAuth client administration methods.\n * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n */\nexport interface GoTrueAdminOAuthApi {\n  /**\n   * Lists all OAuth clients with optional pagination.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  listClients(params?: PageParams): Promise<OAuthClientListResponse>\n\n  /**\n   * Creates a new OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  createClient(params: CreateOAuthClientParams): Promise<OAuthClientResponse>\n\n  /**\n   * Gets details of a specific OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  getClient(clientId: string): Promise<OAuthClientResponse>\n\n  /**\n   * Deletes an OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  deleteClient(clientId: string): Promise<OAuthClientResponse>\n\n  /**\n   * Regenerates the secret for an OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  regenerateClientSecret(clientId: string): Promise<OAuthClientResponse>\n}\n"],"names":[],"mappings":";;;AA+GA,MAAM,sBAAsB;IAAC;IAAU;IAAc;CAAiB;AA+ItE,MAAM,aAAa;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACQ;AAoCV,MAAM,cAAc;IAAC;IAAQ;IAAS;CAAoB;AAO1D,MAAM,6BAA6B;IAAC;IAAY;CAAsB;AAsnBtE,MAAM,kBAAkB;IAAC;IAAO;CAAoB;AA6f7C,MAAM,kBAAkB;IAAC;IAAU;IAAS;CAAkB"}},
    {"offset": {"line": 9513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9518, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts"],"sourcesContent":["import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch, validateUUID } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n  SIGN_OUT_SCOPES,\n  SignOutScope,\n  GoTrueAdminOAuthApi,\n  CreateOAuthClientParams,\n  OAuthClientResponse,\n  OAuthClientListResponse,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  /**\n   * Contains all OAuth client administration methods.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   */\n  oauth: GoTrueAdminOAuthApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n    this.oauth = {\n      listClients: this._listOAuthClients.bind(this),\n      createClient: this._createOAuthClient.bind(this),\n      getClient: this._getOAuthClient.bind(this),\n      deleteClient: this._deleteOAuthClient.bind(this),\n      regenerateClientSecret: this._regenerateOAuthClientSecret.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  async signOut(\n    jwt: string,\n    scope: SignOutScope = SIGN_OUT_SCOPES[0]\n  ): Promise<{ data: null; error: AuthError | null }> {\n    if (SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n      throw new Error(\n        `@supabase/auth-js: Parameter scope must be one of ${SIGN_OUT_SCOPES.join(', ')}`\n      )\n    }\n\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      /** A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column. */\n      data?: object\n\n      /** The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL. */\n      redirectTo?: string\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    validateUUID(uid)\n\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    validateUUID(uid)\n\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    validateUUID(id)\n\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    validateUUID(params.userId)\n\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    validateUUID(params.userId)\n    validateUUID(params.id)\n\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Lists all OAuth clients with optional pagination.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  private async _listOAuthClients(params?: PageParams): Promise<OAuthClientListResponse> {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/oauth/clients`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const clients = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...clients, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { clients: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  private async _createOAuthClient(\n    params: CreateOAuthClientParams\n  ): Promise<OAuthClientResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/oauth/clients`, {\n        body: params,\n        headers: this.headers,\n        xform: (client: any) => {\n          return { data: client, error: null }\n        },\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets details of a specific OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  private async _getOAuthClient(clientId: string): Promise<OAuthClientResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/oauth/clients/${clientId}`, {\n        headers: this.headers,\n        xform: (client: any) => {\n          return { data: client, error: null }\n        },\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Deletes an OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  private async _deleteOAuthClient(clientId: string): Promise<OAuthClientResponse> {\n    try {\n      return await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/oauth/clients/${clientId}`,\n        {\n          headers: this.headers,\n          xform: (client: any) => {\n            return { data: client, error: null }\n          },\n        }\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Regenerates the secret for an OAuth client.\n   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  private async _regenerateOAuthClientSecret(clientId: string): Promise<OAuthClientResponse> {\n    try {\n      return await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/admin/oauth/clients/${clientId}/regenerate_secret`,\n        {\n          headers: this.headers,\n          xform: (client: any) => {\n            return { data: client, error: null }\n          },\n        }\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 10005, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10010, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/local-storage.ts"],"sourcesContent":["import { SupportedStorage } from './types'\n\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store: { [key: string]: string } = {}): SupportedStorage {\n  return {\n    getItem: (key) => {\n      return store[key] || null\n    },\n\n    setItem: (key, value) => {\n      store[key] = value\n    },\n\n    removeItem: (key) => {\n      delete store[key]\n    },\n  }\n}\n"],"names":[],"mappings":"AAEA;;;;;;AAIM,SAAU,0BAA0B,QAAmC,CAAA,CAAE;IAC7E,OAAO;QACL,SAAS,CAAC;YACR,OAAO,KAAK,CAAC,IAAI,IAAI;QACvB;QAEA,SAAS,CAAC,KAAK;YACb,KAAK,CAAC,IAAI,GAAG;QACf;QAEA,YAAY,CAAC;YACX,OAAO,KAAK,CAAC,IAAI;QACnB;;AAEJ"}},
    {"offset": {"line": 10029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10034, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/locks.ts"],"sourcesContent":["import { supportsLocalStorage } from './helpers'\n\n/**\n * @experimental\n */\nexport const internals = {\n  /**\n   * @experimental\n   */\n  debug: !!(\n    globalThis &&\n    supportsLocalStorage() &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  ),\n}\n\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nexport abstract class LockAcquireTimeoutError extends Error {\n  public readonly isAcquireTimeout = true\n\n  constructor(message: string) {\n    super(message)\n  }\n}\n\nexport class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}\nexport class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function navigatorLock<R>(\n  name: string,\n  acquireTimeout: number,\n  fn: () => Promise<R>\n): Promise<R> {\n  if (internals.debug) {\n    console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout)\n  }\n\n  const abortController = new globalThis.AbortController()\n\n  if (acquireTimeout > 0) {\n    setTimeout(() => {\n      abortController.abort()\n      if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name)\n      }\n    }, acquireTimeout)\n  }\n\n  // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n\n  // Wrapping navigator.locks.request() with a plain Promise is done as some\n  // libraries like zone.js patch the Promise object to track the execution\n  // context. However, it appears that most browsers use an internal promise\n  // implementation when using the navigator.locks.request() API causing them\n  // to lose context and emit confusing log messages or break certain features.\n  // This wrapping is believed to help zone.js track the execution context\n  // better.\n  return await Promise.resolve().then(() =>\n    globalThis.navigator.locks.request(\n      name,\n      acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n          }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n          },\n      async (lock) => {\n        if (lock) {\n          if (internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name)\n          }\n\n          try {\n            return await fn()\n          } finally {\n            if (internals.debug) {\n              console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name)\n            }\n          }\n        } else {\n          if (acquireTimeout === 0) {\n            if (internals.debug) {\n              console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name)\n            }\n\n            throw new NavigatorLockAcquireTimeoutError(\n              `Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`\n            )\n          } else {\n            if (internals.debug) {\n              try {\n                const result = await globalThis.navigator.locks.query()\n\n                console.log(\n                  '@supabase/gotrue-js: Navigator LockManager state',\n                  JSON.stringify(result, null, '  ')\n                )\n              } catch (e: any) {\n                console.warn(\n                  '@supabase/gotrue-js: Error when querying Navigator LockManager state',\n                  e\n                )\n              }\n            }\n\n            // Browser is not following the Navigator LockManager spec, it\n            // returned a null lock when we didn't use ifAvailable. So we can\n            // pretend the lock is acquired in the name of backward compatibility\n            // and user experience and just run the function.\n            console.warn(\n              '@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request'\n            )\n\n            return await fn()\n          }\n        }\n      }\n    )\n  )\n}\n\nconst PROCESS_LOCKS: { [name: string]: Promise<any> } = {}\n\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function processLock<R>(\n  name: string,\n  acquireTimeout: number,\n  fn: () => Promise<R>\n): Promise<R> {\n  const previousOperation = PROCESS_LOCKS[name] ?? Promise.resolve()\n\n  const currentOperation = Promise.race(\n    [\n      previousOperation.catch(() => {\n        // ignore error of previous operation that we're waiting to finish\n        return null\n      }),\n      acquireTimeout >= 0\n        ? new Promise((_, reject) => {\n            setTimeout(() => {\n              reject(\n                new ProcessLockAcquireTimeoutError(\n                  `Acquring process lock with name \"${name}\" timed out`\n                )\n              )\n            }, acquireTimeout)\n          })\n        : null,\n    ].filter((x) => x)\n  )\n    .catch((e: any) => {\n      if (e && e.isAcquireTimeout) {\n        throw e\n      }\n\n      return null\n    })\n    .then(async () => {\n      // previous operations finished and we didn't get a race on the acquire\n      // timeout, so the current operation can finally start\n      return await fn()\n    })\n\n  PROCESS_LOCKS[name] = currentOperation.catch(async (e: any) => {\n    if (e && e.isAcquireTimeout) {\n      // if the current operation timed out, it doesn't mean that the previous\n      // operation finished, so we need contnue waiting for it to finish\n      await previousOperation\n\n      return null\n    }\n\n    throw e\n  })\n\n  // finally wait for the current operation to finish successfully, with an\n  // error or with an acquire timeout error\n  return await currentOperation\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 10161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10166, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/polyfills.ts"],"sourcesContent":["/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;AAGM,SAAU;IACd,IAAI,OAAO,eAAe,UAAU;IACpC,IAAI;QACF,OAAO,cAAc,CAAC,OAAO,SAAS,EAAE,aAAa;YACnD,KAAK;gBACH,OAAO,IAAI;YACb;YACA,cAAc;;QAEhB,2CAA2C;QAC3C,UAAU,UAAU,GAAG;QACvB,2CAA2C;QAC3C,OAAO,OAAO,SAAS,CAAC,SAAS;IACnC,EAAE,OAAO,GAAG;QACV,IAAI,OAAO,SAAS,aAAa;YAC/B,6CAA6C;YAC7C,KAAK,UAAU,GAAG;QACpB;IACF;AACF"}},
    {"offset": {"line": 10191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10196, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/web3/ethereum.ts"],"sourcesContent":["// types and functions copied over from viem so this library doesn't depend on it\n\nexport type Hex = `0x${string}`\n\nexport type Address = Hex\n\nexport type EIP1193EventMap = {\n  accountsChanged(accounts: Address[]): void\n  chainChanged(chainId: string): void\n  connect(connectInfo: { chainId: string }): void\n  disconnect(error: { code: number; message: string }): void\n  message(message: { type: string; data: unknown }): void\n}\n\nexport type EIP1193Events = {\n  on<event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]): void\n  removeListener<event extends keyof EIP1193EventMap>(\n    event: event,\n    listener: EIP1193EventMap[event]\n  ): void\n}\n\nexport type EIP1193RequestFn = (args: { method: string; params?: unknown }) => Promise<unknown>\n\nexport type EIP1193Provider = EIP1193Events & {\n  address: string\n  request: EIP1193RequestFn\n}\n\nexport type EthereumWallet = EIP1193Provider\n\n/**\n * EIP-4361 message fields\n */\nexport type SiweMessage = {\n  /**\n   * The Ethereum address performing the signing.\n   */\n  address: Address\n  /**\n   * The [EIP-155](https://eips.ethereum.org/EIPS/eip-155) Chain ID to which the session is bound,\n   */\n  chainId: number\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) authority that is requesting the signing.\n   */\n  domain: string\n  /**\n   * Time when the signed authentication message is no longer valid.\n   */\n  expirationTime?: Date | undefined\n  /**\n   * Time when the message was generated, typically the current time.\n   */\n  issuedAt?: Date | undefined\n  /**\n   * A random string typically chosen by the relying party and used to prevent replay attacks.\n   */\n  nonce?: string\n  /**\n   * Time when the signed authentication message will become valid.\n   */\n  notBefore?: Date | undefined\n  /**\n   * A system-specific identifier that may be used to uniquely refer to the sign-in request.\n   */\n  requestId?: string | undefined\n  /**\n   * A list of information or references to information the user wishes to have resolved as part of authentication by the relying party.\n   */\n  resources?: string[] | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) URI scheme of the origin of the request.\n   */\n  scheme?: string | undefined\n  /**\n   * A human-readable ASCII assertion that the user will sign.\n   */\n  statement?: string | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) URI referring to the resource that is the subject of the signing (as in the subject of a claim).\n   */\n  uri: string\n  /**\n   * The current version of the SIWE Message.\n   */\n  version: '1'\n}\n\nexport type EthereumSignInInput = SiweMessage\n\nexport function getAddress(address: string): Address {\n  if (!/^0x[a-fA-F0-9]{40}$/.test(address)) {\n    throw new Error(`@supabase/auth-js: Address \"${address}\" is invalid.`)\n  }\n  return address.toLowerCase() as Address\n}\n\nexport function fromHex(hex: Hex): number {\n  return parseInt(hex, 16)\n}\n\nexport function toHex(value: string): Hex {\n  const bytes = new TextEncoder().encode(value)\n  const hex = Array.from(bytes, (byte) => byte.toString(16).padStart(2, '0')).join('')\n  return ('0x' + hex) as Hex\n}\n\n/**\n * Creates EIP-4361 formatted message.\n */\nexport function createSiweMessage(parameters: SiweMessage): string {\n  const {\n    chainId,\n    domain,\n    expirationTime,\n    issuedAt = new Date(),\n    nonce,\n    notBefore,\n    requestId,\n    resources,\n    scheme,\n    uri,\n    version,\n  } = parameters\n\n  // Validate fields\n  {\n    if (!Number.isInteger(chainId))\n      throw new Error(\n        `@supabase/auth-js: Invalid SIWE message field \"chainId\". Chain ID must be a EIP-155 chain ID. Provided value: ${chainId}`\n      )\n\n    if (!domain)\n      throw new Error(\n        `@supabase/auth-js: Invalid SIWE message field \"domain\". Domain must be provided.`\n      )\n\n    if (nonce && nonce.length < 8)\n      throw new Error(\n        `@supabase/auth-js: Invalid SIWE message field \"nonce\". Nonce must be at least 8 characters. Provided value: ${nonce}`\n      )\n\n    if (!uri)\n      throw new Error(`@supabase/auth-js: Invalid SIWE message field \"uri\". URI must be provided.`)\n\n    if (version !== '1')\n      throw new Error(\n        `@supabase/auth-js: Invalid SIWE message field \"version\". Version must be '1'. Provided value: ${version}`\n      )\n\n    if (parameters.statement?.includes('\\n'))\n      throw new Error(\n        `@supabase/auth-js: Invalid SIWE message field \"statement\". Statement must not include '\\\\n'. Provided value: ${parameters.statement}`\n      )\n  }\n\n  // Construct message\n  const address = getAddress(parameters.address)\n  const origin = scheme ? `${scheme}://${domain}` : domain\n  const statement = parameters.statement ? `${parameters.statement}\\n` : ''\n  const prefix = `${origin} wants you to sign in with your Ethereum account:\\n${address}\\n\\n${statement}`\n\n  let suffix = `URI: ${uri}\\nVersion: ${version}\\nChain ID: ${chainId}${\n    nonce ? `\\nNonce: ${nonce}` : ''\n  }\\nIssued At: ${issuedAt.toISOString()}`\n\n  if (expirationTime) suffix += `\\nExpiration Time: ${expirationTime.toISOString()}`\n  if (notBefore) suffix += `\\nNot Before: ${notBefore.toISOString()}`\n  if (requestId) suffix += `\\nRequest ID: ${requestId}`\n  if (resources) {\n    let content = '\\nResources:'\n    for (const resource of resources) {\n      if (!resource || typeof resource !== 'string')\n        throw new Error(\n          `@supabase/auth-js: Invalid SIWE message field \"resources\". Every resource must be a valid string. Provided value: ${resource}`\n        )\n      content += `\\n- ${resource}`\n    }\n    suffix += content\n  }\n\n  return `${prefix}\\n${suffix}`\n}\n"],"names":[],"mappings":"AAAA,iFAAiF;;;;;;;AA2F3E,SAAU,WAAW,OAAe;IACxC,IAAI,CAAC,sBAAsB,IAAI,CAAC,UAAU;QACxC,MAAM,IAAI,MAAM,CAAA,4BAAA,EAA+B,QAAO,aAAA,CAAe;IACvE;IACA,OAAO,QAAQ,WAAW;AAC5B;AAEM,SAAU,QAAQ,GAAQ;IAC9B,OAAO,SAAS,KAAK;AACvB;AAEM,SAAU,MAAM,KAAa;IACjC,MAAM,QAAQ,IAAI,cAAc,MAAM,CAAC;IACvC,MAAM,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,OAAS,KAAK,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC;IACjF,OAAQ,OAAO;AACjB;AAKM,SAAU,kBAAkB,UAAuB;;IACvD,MAAM,EACJ,OAAO,EACP,MAAM,EACN,cAAc,EACd,WAAW,IAAI,MAAM,EACrB,KAAK,EACL,SAAS,EACT,SAAS,EACT,SAAS,EACT,MAAM,EACN,GAAG,EACH,OAAO,EACR,GAAG;IAEJ,kBAAkB;IAClB;QACE,IAAI,CAAC,OAAO,SAAS,CAAC,UACpB,MAAM,IAAI,MACR,CAAA,8GAAA,EAAiH,QAAO,CAAE;QAG9H,IAAI,CAAC,QACH,MAAM,IAAI,MACR,CAAA,gFAAA,CAAkF;QAGtF,IAAI,SAAS,MAAM,MAAM,GAAG,GAC1B,MAAM,IAAI,MACR,CAAA,4GAAA,EAA+G,MAAK,CAAE;QAG1H,IAAI,CAAC,KACH,MAAM,IAAI,MAAM,CAAA,0EAAA,CAA4E;QAE9F,IAAI,YAAY,KACd,MAAM,IAAI,MACR,CAAA,8FAAA,EAAiG,QAAO,CAAE;QAG9G,IAAI,CAAA,KAAA,WAAW,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,CAAC,OACjC,MAAM,IAAI,MACR,CAAA,6GAAA,EAAgH,WAAW,SAAS,CAAA,CAAE;IAE5I;IAEA,oBAAoB;IACpB,MAAM,UAAU,WAAW,WAAW,OAAO;IAC7C,MAAM,SAAS,SAAS,CAAA,EAAG,OAAM,GAAA,EAAM,OAAM,CAAE,GAAG;IAClD,MAAM,YAAY,WAAW,SAAS,GAAG,CAAA,EAAG,WAAW,SAAS,CAAA,EAAA,CAAI,GAAG;IACvE,MAAM,SAAS,CAAA,EAAG,OAAM,mDAAA,EAAsD,QAAO,IAAA,EAAO,UAAS,CAAE;IAEvG,IAAI,SAAS,CAAA,KAAA,EAAQ,IAAG,WAAA,EAAc,QAAO,YAAA,EAAe,QAAO,EACjE,QAAQ,CAAA,SAAA,EAAY,MAAK,CAAE,GAAG,GAChC,aAAA,EAAgB,SAAS,WAAW,GAAE,CAAE;IAExC,IAAI,gBAAgB,UAAU,CAAA,mBAAA,EAAsB,eAAe,WAAW,GAAE,CAAE;IAClF,IAAI,WAAW,UAAU,CAAA,cAAA,EAAiB,UAAU,WAAW,GAAE,CAAE;IACnE,IAAI,WAAW,UAAU,CAAA,cAAA,EAAiB,UAAS,CAAE;IACrD,IAAI,WAAW;QACb,IAAI,UAAU;QACd,KAAK,MAAM,YAAY,UAAW;YAChC,IAAI,CAAC,YAAY,OAAO,aAAa,UACnC,MAAM,IAAI,MACR,CAAA,kHAAA,EAAqH,SAAQ,CAAE;YAEnI,WAAW,CAAA,IAAA,EAAO,SAAQ,CAAE;QAC9B;QACA,UAAU;IACZ;IAEA,OAAO,CAAA,EAAG,OAAM,EAAA,EAAK,OAAM,CAAE;AAC/B"}},
    {"offset": {"line": 10248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10253, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/webauthn.ts"],"sourcesContent":["import GoTrueClient from '../GoTrueClient'\nimport { base64UrlToUint8Array, bytesToBase64URL } from './base64url'\nimport { AuthError, AuthUnknownError, isAuthError } from './errors'\nimport {\n  AuthMFAEnrollWebauthnResponse,\n  AuthMFAVerifyResponse,\n  AuthMFAVerifyResponseData,\n  MFAChallengeWebauthnParams,\n  MFAEnrollWebauthnParams,\n  MFAVerifyWebauthnParamFields,\n  MFAVerifyWebauthnParams,\n  RequestResult,\n  StrictOmit,\n} from './types'\nimport { isBrowser } from './helpers'\nimport type {\n  AuthenticationCredential,\n  AuthenticationResponseJSON,\n  AuthenticatorAttachment,\n  PublicKeyCredentialCreationOptionsFuture,\n  PublicKeyCredentialCreationOptionsJSON,\n  PublicKeyCredentialFuture,\n  PublicKeyCredentialRequestOptionsFuture,\n  PublicKeyCredentialRequestOptionsJSON,\n  RegistrationCredential,\n  RegistrationResponseJSON,\n} from './webauthn.dom'\n\nimport {\n  identifyAuthenticationError,\n  identifyRegistrationError,\n  isWebAuthnError,\n  WebAuthnError,\n  WebAuthnUnknownError,\n} from './webauthn.errors'\n\nexport { WebAuthnError, isWebAuthnError, identifyRegistrationError, identifyAuthenticationError }\n// Re-export the JSON types for use in other files\nexport type { RegistrationResponseJSON, AuthenticationResponseJSON }\n\n/**\n * WebAuthn abort service to manage ceremony cancellation.\n * Ensures only one WebAuthn ceremony is active at a time to prevent \"operation already in progress\" errors.\n *\n * @experimental This class is experimental and may change in future releases\n * @see {@link https://w3c.github.io/webauthn/#sctn-automation-webdriver-capability W3C WebAuthn Spec - Aborting Ceremonies}\n */\nexport class WebAuthnAbortService {\n  private controller: AbortController | undefined\n\n  /**\n   * Create an abort signal for a new WebAuthn operation.\n   * Automatically cancels any existing operation.\n   *\n   * @returns {AbortSignal} Signal to pass to navigator.credentials.create() or .get()\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal MDN - AbortSignal}\n   */\n  createNewAbortSignal(): AbortSignal {\n    // Abort any existing calls to navigator.credentials.create() or navigator.credentials.get()\n    if (this.controller) {\n      const abortError = new Error('Cancelling existing WebAuthn API call for new one')\n      abortError.name = 'AbortError'\n      this.controller.abort(abortError)\n    }\n\n    const newController = new AbortController()\n    this.controller = newController\n    return newController.signal\n  }\n\n  /**\n   * Manually cancel the current WebAuthn operation.\n   * Useful for cleaning up when user cancels or navigates away.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort MDN - AbortController.abort}\n   */\n  cancelCeremony(): void {\n    if (this.controller) {\n      const abortError = new Error('Manually cancelling existing WebAuthn API call')\n      abortError.name = 'AbortError'\n      this.controller.abort(abortError)\n      this.controller = undefined\n    }\n  }\n}\n\n/**\n * Singleton instance to ensure only one WebAuthn ceremony is active at a time.\n * This prevents \"operation already in progress\" errors when retrying WebAuthn operations.\n *\n * @experimental This instance is experimental and may change in future releases\n */\nexport const webAuthnAbortService = new WebAuthnAbortService()\n\n/**\n * Server response format for WebAuthn credential creation options.\n * Uses W3C standard JSON format with base64url-encoded binary fields.\n */\nexport type ServerCredentialCreationOptions = PublicKeyCredentialCreationOptionsJSON\n\n/**\n * Server response format for WebAuthn credential request options.\n * Uses W3C standard JSON format with base64url-encoded binary fields.\n */\nexport type ServerCredentialRequestOptions = PublicKeyCredentialRequestOptionsJSON\n\n/**\n * Convert base64url encoded strings in WebAuthn credential creation options to ArrayBuffers\n * as required by the WebAuthn browser API.\n * Supports both native WebAuthn Level 3 parseCreationOptionsFromJSON and manual fallback.\n *\n * @param {ServerCredentialCreationOptions} options - JSON options from server with base64url encoded fields\n * @returns {PublicKeyCredentialCreationOptionsFuture} Options ready for navigator.credentials.create()\n * @see {@link https://w3c.github.io/webauthn/#sctn-parseCreationOptionsFromJSON W3C WebAuthn Spec - parseCreationOptionsFromJSON}\n */\nexport function deserializeCredentialCreationOptions(\n  options: ServerCredentialCreationOptions\n): PublicKeyCredentialCreationOptionsFuture {\n  if (!options) {\n    throw new Error('Credential creation options are required')\n  }\n\n  // Check if the native parseCreationOptionsFromJSON method is available\n  if (\n    typeof PublicKeyCredential !== 'undefined' &&\n    'parseCreationOptionsFromJSON' in PublicKeyCredential &&\n    typeof (PublicKeyCredential as unknown as PublicKeyCredentialFuture)\n      .parseCreationOptionsFromJSON === 'function'\n  ) {\n    // Use the native WebAuthn Level 3 method\n    return (\n      PublicKeyCredential as unknown as PublicKeyCredentialFuture\n    ).parseCreationOptionsFromJSON(\n      /** we assert the options here as typescript still doesn't know about future webauthn types */\n      options as any\n    ) as PublicKeyCredentialCreationOptionsFuture\n  }\n\n  // Fallback to manual parsing for browsers that don't support the native method\n  // Destructure to separate fields that need transformation\n  const { challenge: challengeStr, user: userOpts, excludeCredentials, ...restOptions } = options\n\n  // Convert challenge from base64url to ArrayBuffer\n  const challenge = base64UrlToUint8Array(challengeStr).buffer as ArrayBuffer\n\n  // Convert user.id from base64url to ArrayBuffer\n  const user: PublicKeyCredentialUserEntity = {\n    ...userOpts,\n    id: base64UrlToUint8Array(userOpts.id).buffer as ArrayBuffer,\n  }\n\n  // Build the result object\n  const result: PublicKeyCredentialCreationOptionsFuture = {\n    ...restOptions,\n    challenge,\n    user,\n  }\n\n  // Only add excludeCredentials if it exists\n  if (excludeCredentials && excludeCredentials.length > 0) {\n    result.excludeCredentials = new Array(excludeCredentials.length)\n\n    for (let i = 0; i < excludeCredentials.length; i++) {\n      const cred = excludeCredentials[i]\n      result.excludeCredentials[i] = {\n        ...cred,\n        id: base64UrlToUint8Array(cred.id).buffer,\n        type: cred.type || 'public-key',\n        // Cast transports to handle future transport types like \"cable\"\n        transports: cred.transports,\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Convert base64url encoded strings in WebAuthn credential request options to ArrayBuffers\n * as required by the WebAuthn browser API.\n * Supports both native WebAuthn Level 3 parseRequestOptionsFromJSON and manual fallback.\n *\n * @param {ServerCredentialRequestOptions} options - JSON options from server with base64url encoded fields\n * @returns {PublicKeyCredentialRequestOptionsFuture} Options ready for navigator.credentials.get()\n * @see {@link https://w3c.github.io/webauthn/#sctn-parseRequestOptionsFromJSON W3C WebAuthn Spec - parseRequestOptionsFromJSON}\n */\nexport function deserializeCredentialRequestOptions(\n  options: ServerCredentialRequestOptions\n): PublicKeyCredentialRequestOptionsFuture {\n  if (!options) {\n    throw new Error('Credential request options are required')\n  }\n\n  // Check if the native parseRequestOptionsFromJSON method is available\n  if (\n    typeof PublicKeyCredential !== 'undefined' &&\n    'parseRequestOptionsFromJSON' in PublicKeyCredential &&\n    typeof (PublicKeyCredential as unknown as PublicKeyCredentialFuture)\n      .parseRequestOptionsFromJSON === 'function'\n  ) {\n    // Use the native WebAuthn Level 3 method\n    return (\n      PublicKeyCredential as unknown as PublicKeyCredentialFuture\n    ).parseRequestOptionsFromJSON(options) as PublicKeyCredentialRequestOptionsFuture\n  }\n\n  // Fallback to manual parsing for browsers that don't support the native method\n  // Destructure to separate fields that need transformation\n  const { challenge: challengeStr, allowCredentials, ...restOptions } = options\n\n  // Convert challenge from base64url to ArrayBuffer\n  const challenge = base64UrlToUint8Array(challengeStr).buffer as ArrayBuffer\n\n  // Build the result object\n  const result: PublicKeyCredentialRequestOptionsFuture = {\n    ...restOptions,\n    challenge,\n  }\n\n  // Only add allowCredentials if it exists\n  if (allowCredentials && allowCredentials.length > 0) {\n    result.allowCredentials = new Array(allowCredentials.length)\n\n    for (let i = 0; i < allowCredentials.length; i++) {\n      const cred = allowCredentials[i]\n      result.allowCredentials[i] = {\n        ...cred,\n        id: base64UrlToUint8Array(cred.id).buffer,\n        type: cred.type || 'public-key',\n        // Cast transports to handle future transport types like \"cable\"\n        transports: cred.transports,\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Server format for credential response with base64url-encoded binary fields\n * Can be either a registration or authentication response\n */\nexport type ServerCredentialResponse = RegistrationResponseJSON | AuthenticationResponseJSON\n\n/**\n * Convert a registration/enrollment credential response to server format.\n * Serializes binary fields to base64url for JSON transmission.\n * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n *\n * @param {RegistrationCredential} credential - Credential from navigator.credentials.create()\n * @returns {RegistrationResponseJSON} JSON-serializable credential for server\n * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n */\nexport function serializeCredentialCreationResponse(\n  credential: RegistrationCredential\n): RegistrationResponseJSON {\n  // Check if the credential instance has the toJSON method\n  if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n    // Use the native WebAuthn Level 3 method\n    return (credential as RegistrationCredential).toJSON()\n  }\n  const credentialWithAttachment = credential as PublicKeyCredential & {\n    response: AuthenticatorAttestationResponse\n    authenticatorAttachment?: string | null\n  }\n\n  return {\n    id: credential.id,\n    rawId: credential.id,\n    response: {\n      attestationObject: bytesToBase64URL(new Uint8Array(credential.response.attestationObject)),\n      clientDataJSON: bytesToBase64URL(new Uint8Array(credential.response.clientDataJSON)),\n    },\n    type: 'public-key',\n    clientExtensionResults: credential.getClientExtensionResults(),\n    // Convert null to undefined and cast to AuthenticatorAttachment type\n    authenticatorAttachment: (credentialWithAttachment.authenticatorAttachment ?? undefined) as\n      | AuthenticatorAttachment\n      | undefined,\n  }\n}\n\n/**\n * Convert an authentication/verification credential response to server format.\n * Serializes binary fields to base64url for JSON transmission.\n * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n *\n * @param {AuthenticationCredential} credential - Credential from navigator.credentials.get()\n * @returns {AuthenticationResponseJSON} JSON-serializable credential for server\n * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n */\nexport function serializeCredentialRequestResponse(\n  credential: AuthenticationCredential\n): AuthenticationResponseJSON {\n  // Check if the credential instance has the toJSON method\n  if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n    // Use the native WebAuthn Level 3 method\n    return (credential as AuthenticationCredential).toJSON()\n  }\n\n  // Fallback to manual conversion for browsers that don't support toJSON\n  // Access authenticatorAttachment via type assertion to handle TypeScript version differences\n  // @simplewebauthn/types includes this property but base TypeScript 4.7.4 doesn't\n  const credentialWithAttachment = credential as PublicKeyCredential & {\n    response: AuthenticatorAssertionResponse\n    authenticatorAttachment?: string | null\n  }\n\n  const clientExtensionResults = credential.getClientExtensionResults()\n  const assertionResponse = credential.response\n\n  return {\n    id: credential.id,\n    rawId: credential.id, // W3C spec expects rawId to match id for JSON format\n    response: {\n      authenticatorData: bytesToBase64URL(new Uint8Array(assertionResponse.authenticatorData)),\n      clientDataJSON: bytesToBase64URL(new Uint8Array(assertionResponse.clientDataJSON)),\n      signature: bytesToBase64URL(new Uint8Array(assertionResponse.signature)),\n      userHandle: assertionResponse.userHandle\n        ? bytesToBase64URL(new Uint8Array(assertionResponse.userHandle))\n        : undefined,\n    },\n    type: 'public-key',\n    clientExtensionResults,\n    // Convert null to undefined and cast to AuthenticatorAttachment type\n    authenticatorAttachment: (credentialWithAttachment.authenticatorAttachment ?? undefined) as\n      | AuthenticatorAttachment\n      | undefined,\n  }\n}\n\n/**\n * A simple test to determine if a hostname is a properly-formatted domain name.\n * Considers localhost valid for development environments.\n *\n * A \"valid domain\" is defined here: https://url.spec.whatwg.org/#valid-domain\n *\n * Regex sourced from here:\n * https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n *\n * @param {string} hostname - The hostname to validate\n * @returns {boolean} True if valid domain or localhost\n * @see {@link https://url.spec.whatwg.org/#valid-domain WHATWG URL Spec - Valid Domain}\n */\nexport function isValidDomain(hostname: string): boolean {\n  return (\n    // Consider localhost valid as well since it's okay wrt Secure Contexts\n    hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname)\n  )\n}\n\n/**\n * Determine if the browser is capable of WebAuthn.\n * Checks for necessary Web APIs: PublicKeyCredential and Credential Management.\n *\n * @returns {boolean} True if browser supports WebAuthn\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential#browser_compatibility MDN - PublicKeyCredential Browser Compatibility}\n */\nfunction browserSupportsWebAuthn(): boolean {\n  return !!(\n    isBrowser() &&\n    'PublicKeyCredential' in window &&\n    window.PublicKeyCredential &&\n    'credentials' in navigator &&\n    typeof navigator?.credentials?.create === 'function' &&\n    typeof navigator?.credentials?.get === 'function'\n  )\n}\n\n/**\n * Create a WebAuthn credential using the browser's credentials API.\n * Wraps navigator.credentials.create() with error handling.\n *\n * @param {CredentialCreationOptions} options - Options including publicKey parameters\n * @returns {Promise<RequestResult<RegistrationCredential, WebAuthnError>>} Created credential or error\n * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create MDN - credentials.create}\n */\nexport async function createCredential(\n  options: StrictOmit<CredentialCreationOptions, 'publicKey'> & {\n    publicKey: PublicKeyCredentialCreationOptionsFuture\n  }\n): Promise<RequestResult<RegistrationCredential, WebAuthnError>> {\n  try {\n    const response = await navigator.credentials.create(\n      /** we assert the type here until typescript types are updated */\n      options as Parameters<typeof navigator.credentials.create>[0]\n    )\n    if (!response) {\n      return {\n        data: null,\n        error: new WebAuthnUnknownError('Empty credential response', response),\n      }\n    }\n    if (!(response instanceof PublicKeyCredential)) {\n      return {\n        data: null,\n        error: new WebAuthnUnknownError('Browser returned unexpected credential type', response),\n      }\n    }\n    return { data: response as RegistrationCredential, error: null }\n  } catch (err) {\n    return {\n      data: null,\n      error: identifyRegistrationError({\n        error: err as Error,\n        options,\n      }),\n    }\n  }\n}\n\n/**\n * Get a WebAuthn credential using the browser's credentials API.\n * Wraps navigator.credentials.get() with error handling.\n *\n * @param {CredentialRequestOptions} options - Options including publicKey parameters\n * @returns {Promise<RequestResult<AuthenticationCredential, WebAuthnError>>} Retrieved credential or error\n * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get MDN - credentials.get}\n */\nexport async function getCredential(\n  options: StrictOmit<CredentialRequestOptions, 'publicKey'> & {\n    publicKey: PublicKeyCredentialRequestOptionsFuture\n  }\n): Promise<RequestResult<AuthenticationCredential, WebAuthnError>> {\n  try {\n    const response = await navigator.credentials.get(\n      /** we assert the type here until typescript types are updated */\n      options as Parameters<typeof navigator.credentials.get>[0]\n    )\n    if (!response) {\n      return {\n        data: null,\n        error: new WebAuthnUnknownError('Empty credential response', response),\n      }\n    }\n    if (!(response instanceof PublicKeyCredential)) {\n      return {\n        data: null,\n        error: new WebAuthnUnknownError('Browser returned unexpected credential type', response),\n      }\n    }\n    return { data: response as AuthenticationCredential, error: null }\n  } catch (err) {\n    return {\n      data: null,\n      error: identifyAuthenticationError({\n        error: err as Error,\n        options,\n      }),\n    }\n  }\n}\n\nexport const DEFAULT_CREATION_OPTIONS: Partial<PublicKeyCredentialCreationOptionsFuture> = {\n  hints: ['security-key'],\n  authenticatorSelection: {\n    authenticatorAttachment: 'cross-platform',\n    requireResidentKey: false,\n    /** set to preferred because older yubikeys don't have PIN/Biometric */\n    userVerification: 'preferred',\n    residentKey: 'discouraged',\n  },\n  attestation: 'none',\n}\n\nexport const DEFAULT_REQUEST_OPTIONS: Partial<PublicKeyCredentialRequestOptionsFuture> = {\n  /** set to preferred because older yubikeys don't have PIN/Biometric */\n  userVerification: 'preferred',\n  hints: ['security-key'],\n}\n\nfunction deepMerge<T>(...sources: Partial<T>[]): T {\n  const isObject = (val: unknown): val is Record<string, unknown> =>\n    val !== null && typeof val === 'object' && !Array.isArray(val)\n\n  const isArrayBufferLike = (val: unknown): val is ArrayBuffer | ArrayBufferView =>\n    val instanceof ArrayBuffer || ArrayBuffer.isView(val)\n\n  const result: Partial<T> = {}\n\n  for (const source of sources) {\n    if (!source) continue\n\n    for (const key in source) {\n      const value = source[key]\n      if (value === undefined) continue\n\n      if (Array.isArray(value)) {\n        // preserve array reference, including unions like AuthenticatorTransport[]\n        result[key] = value as T[typeof key]\n      } else if (isArrayBufferLike(value)) {\n        result[key] = value as T[typeof key]\n      } else if (isObject(value)) {\n        const existing = result[key]\n        if (isObject(existing)) {\n          result[key] = deepMerge(existing, value) as unknown as T[typeof key]\n        } else {\n          result[key] = deepMerge(value) as unknown as T[typeof key]\n        }\n      } else {\n        result[key] = value as T[typeof key]\n      }\n    }\n  }\n\n  return result as T\n}\n\n/**\n * Merges WebAuthn credential creation options with overrides.\n * Sets sensible defaults for authenticator selection and extensions.\n *\n * @param {PublicKeyCredentialCreationOptionsFuture} baseOptions - The base options from the server\n * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Optional overrides to apply\n * @param {string} friendlyName - Optional friendly name for the credential\n * @returns {PublicKeyCredentialCreationOptionsFuture} Merged credential creation options\n * @see {@link https://w3c.github.io/webauthn/#dictdef-authenticatorselectioncriteria W3C WebAuthn Spec - AuthenticatorSelectionCriteria}\n */\nexport function mergeCredentialCreationOptions(\n  baseOptions: PublicKeyCredentialCreationOptionsFuture,\n  overrides?: Partial<PublicKeyCredentialCreationOptionsFuture>\n): PublicKeyCredentialCreationOptionsFuture {\n  return deepMerge(DEFAULT_CREATION_OPTIONS, baseOptions, overrides || {})\n}\n\n/**\n * Merges WebAuthn credential request options with overrides.\n * Sets sensible defaults for user verification and hints.\n *\n * @param {PublicKeyCredentialRequestOptionsFuture} baseOptions - The base options from the server\n * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Optional overrides to apply\n * @returns {PublicKeyCredentialRequestOptionsFuture} Merged credential request options\n * @see {@link https://w3c.github.io/webauthn/#dictdef-publickeycredentialrequestoptions W3C WebAuthn Spec - PublicKeyCredentialRequestOptions}\n */\nexport function mergeCredentialRequestOptions(\n  baseOptions: PublicKeyCredentialRequestOptionsFuture,\n  overrides?: Partial<PublicKeyCredentialRequestOptionsFuture>\n): PublicKeyCredentialRequestOptionsFuture {\n  return deepMerge(DEFAULT_REQUEST_OPTIONS, baseOptions, overrides || {})\n}\n\n/**\n * WebAuthn API wrapper for Supabase Auth.\n * Provides methods for enrolling, challenging, verifying, authenticating, and registering WebAuthn credentials.\n *\n * @experimental This API is experimental and may change in future releases\n * @see {@link https://w3c.github.io/webauthn/ W3C WebAuthn Specification}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API MDN - Web Authentication API}\n */\nexport class WebAuthnApi {\n  public enroll: typeof WebAuthnApi.prototype._enroll\n  public challenge: typeof WebAuthnApi.prototype._challenge\n  public verify: typeof WebAuthnApi.prototype._verify\n  public authenticate: typeof WebAuthnApi.prototype._authenticate\n  public register: typeof WebAuthnApi.prototype._register\n\n  constructor(private client: GoTrueClient) {\n    // Bind all methods so they can be destructured\n    this.enroll = this._enroll.bind(this)\n    this.challenge = this._challenge.bind(this)\n    this.verify = this._verify.bind(this)\n    this.authenticate = this._authenticate.bind(this)\n    this.register = this._register.bind(this)\n  }\n\n  /**\n   * Enroll a new WebAuthn factor.\n   * Creates an unverified WebAuthn factor that must be verified with a credential.\n   *\n   * @experimental This method is experimental and may change in future releases\n   * @param {Omit<MFAEnrollWebauthnParams, 'factorType'>} params - Enrollment parameters (friendlyName required)\n   * @returns {Promise<AuthMFAEnrollWebauthnResponse>} Enrolled factor details or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n   */\n  public async _enroll(\n    params: Omit<MFAEnrollWebauthnParams, 'factorType'>\n  ): Promise<AuthMFAEnrollWebauthnResponse> {\n    return this.client.mfa.enroll({ ...params, factorType: 'webauthn' })\n  }\n\n  /**\n   * Challenge for WebAuthn credential creation or authentication.\n   * Combines server challenge with browser credential operations.\n   * Handles both registration (create) and authentication (request) flows.\n   *\n   * @experimental This method is experimental and may change in future releases\n   * @param {MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal }} params - Challenge parameters including factorId\n   * @param {Object} overrides - Allows you to override the parameters passed to navigator.credentials\n   * @param {PublicKeyCredentialCreationOptionsFuture} overrides.create - Override options for credential creation\n   * @param {PublicKeyCredentialRequestOptionsFuture} overrides.request - Override options for credential request\n   * @returns {Promise<RequestResult>} Challenge response with credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}\n   * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying Assertion}\n   */\n  public async _challenge(\n    {\n      factorId,\n      webauthn,\n      friendlyName,\n      signal,\n    }: MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal },\n    overrides?:\n      | {\n          create?: Partial<PublicKeyCredentialCreationOptionsFuture>\n          request?: never\n        }\n      | {\n          create?: never\n          request?: Partial<PublicKeyCredentialRequestOptionsFuture>\n        }\n  ): Promise<\n    RequestResult<\n      { factorId: string; challengeId: string } & {\n        webauthn: StrictOmit<\n          MFAVerifyWebauthnParamFields<'create' | 'request'>['webauthn'],\n          'rpId' | 'rpOrigins'\n        >\n      },\n      WebAuthnError | AuthError\n    >\n  > {\n    try {\n      // Get challenge from server using the client's MFA methods\n      const { data: challengeResponse, error: challengeError } = await this.client.mfa.challenge({\n        factorId,\n        webauthn,\n      })\n\n      if (!challengeResponse) {\n        return { data: null, error: challengeError }\n      }\n\n      const abortSignal = signal ?? webAuthnAbortService.createNewAbortSignal()\n\n      /** webauthn will fail if either of the name/displayname are blank */\n      if (challengeResponse.webauthn.type === 'create') {\n        const { user } = challengeResponse.webauthn.credential_options.publicKey\n        if (!user.name) {\n          user.name = `${user.id}:${friendlyName}`\n        }\n        if (!user.displayName) {\n          user.displayName = user.name\n        }\n      }\n\n      switch (challengeResponse.webauthn.type) {\n        case 'create': {\n          const options = mergeCredentialCreationOptions(\n            challengeResponse.webauthn.credential_options.publicKey,\n            overrides?.create\n          )\n\n          const { data, error } = await createCredential({\n            publicKey: options,\n            signal: abortSignal,\n          })\n\n          if (data) {\n            return {\n              data: {\n                factorId,\n                challengeId: challengeResponse.id,\n                webauthn: {\n                  type: challengeResponse.webauthn.type,\n                  credential_response: data,\n                },\n              },\n              error: null,\n            }\n          }\n          return { data: null, error }\n        }\n\n        case 'request': {\n          const options = mergeCredentialRequestOptions(\n            challengeResponse.webauthn.credential_options.publicKey,\n            overrides?.request\n          )\n\n          const { data, error } = await getCredential({\n            ...challengeResponse.webauthn.credential_options,\n            publicKey: options,\n            signal: abortSignal,\n          })\n\n          if (data) {\n            return {\n              data: {\n                factorId,\n                challengeId: challengeResponse.id,\n                webauthn: {\n                  type: challengeResponse.webauthn.type,\n                  credential_response: data,\n                },\n              },\n              error: null,\n            }\n          }\n          return { data: null, error }\n        }\n      }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      return {\n        data: null,\n        error: new AuthUnknownError('Unexpected error in challenge', error),\n      }\n    }\n  }\n\n  /**\n   * Verify a WebAuthn credential with the server.\n   * Completes the WebAuthn ceremony by sending the credential to the server for verification.\n   *\n   * @experimental This method is experimental and may change in future releases\n   * @param {Object} params - Verification parameters\n   * @param {string} params.challengeId - ID of the challenge being verified\n   * @param {string} params.factorId - ID of the WebAuthn factor\n   * @param {MFAVerifyWebauthnParams<T>['webauthn']} params.webauthn - WebAuthn credential response\n   * @returns {Promise<AuthMFAVerifyResponse>} Verification result with session or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}\n   * */\n  public async _verify<T extends 'create' | 'request'>({\n    challengeId,\n    factorId,\n    webauthn,\n  }: {\n    challengeId: string\n    factorId: string\n    webauthn: MFAVerifyWebauthnParams<T>['webauthn']\n  }): Promise<AuthMFAVerifyResponse> {\n    return this.client.mfa.verify({\n      factorId,\n      challengeId,\n      webauthn: webauthn,\n    })\n  }\n\n  /**\n   * Complete WebAuthn authentication flow.\n   * Performs challenge and verification in a single operation for existing credentials.\n   *\n   * @experimental This method is experimental and may change in future releases\n   * @param {Object} params - Authentication parameters\n   * @param {string} params.factorId - ID of the WebAuthn factor to authenticate with\n   * @param {Object} params.webauthn - WebAuthn configuration\n   * @param {string} params.webauthn.rpId - Relying Party ID (defaults to current hostname)\n   * @param {string[]} params.webauthn.rpOrigins - Allowed origins (defaults to current origin)\n   * @param {AbortSignal} params.webauthn.signal - Optional abort signal\n   * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Override options for navigator.credentials.get\n   * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Authentication result\n   * @see {@link https://w3c.github.io/webauthn/#sctn-authentication W3C WebAuthn Spec - Authentication Ceremony}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions MDN - PublicKeyCredentialRequestOptions}\n   */\n  public async _authenticate(\n    {\n      factorId,\n      webauthn: {\n        rpId = typeof window !== 'undefined' ? window.location.hostname : undefined,\n        rpOrigins = typeof window !== 'undefined' ? [window.location.origin] : undefined,\n        signal,\n      },\n    }: {\n      factorId: string\n      webauthn: {\n        rpId?: string\n        rpOrigins?: string[]\n        signal?: AbortSignal\n      }\n    },\n    overrides?: PublicKeyCredentialRequestOptionsFuture\n  ): Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>> {\n    if (!rpId) {\n      return {\n        data: null,\n        error: new AuthError('rpId is required for WebAuthn authentication'),\n      }\n    }\n    try {\n      if (!browserSupportsWebAuthn()) {\n        return {\n          data: null,\n          error: new AuthUnknownError('Browser does not support WebAuthn', null),\n        }\n      }\n\n      // Get challenge and credential\n      const { data: challengeResponse, error: challengeError } = await this.challenge(\n        {\n          factorId,\n          webauthn: { rpId, rpOrigins },\n          signal,\n        },\n        { request: overrides }\n      )\n\n      if (!challengeResponse) {\n        return { data: null, error: challengeError }\n      }\n\n      const { webauthn } = challengeResponse\n\n      // Verify credential\n      return this._verify({\n        factorId,\n        challengeId: challengeResponse.challengeId,\n        webauthn: {\n          type: webauthn.type,\n          rpId,\n          rpOrigins,\n          credential_response: webauthn.credential_response,\n        },\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      return {\n        data: null,\n        error: new AuthUnknownError('Unexpected error in authenticate', error),\n      }\n    }\n  }\n\n  /**\n   * Complete WebAuthn registration flow.\n   * Performs enrollment, challenge, and verification in a single operation for new credentials.\n   *\n   * @experimental This method is experimental and may change in future releases\n   * @param {Object} params - Registration parameters\n   * @param {string} params.friendlyName - User-friendly name for the credential\n   * @param {string} params.rpId - Relying Party ID (defaults to current hostname)\n   * @param {string[]} params.rpOrigins - Allowed origins (defaults to current origin)\n   * @param {AbortSignal} params.signal - Optional abort signal\n   * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Override options for navigator.credentials.create\n   * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Registration result\n   * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registration Ceremony}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions MDN - PublicKeyCredentialCreationOptions}\n   */\n  public async _register(\n    {\n      friendlyName,\n      rpId = typeof window !== 'undefined' ? window.location.hostname : undefined,\n      rpOrigins = typeof window !== 'undefined' ? [window.location.origin] : undefined,\n      signal,\n    }: {\n      friendlyName: string\n      rpId?: string\n      rpOrigins?: string[]\n      signal?: AbortSignal\n    },\n    overrides?: Partial<PublicKeyCredentialCreationOptionsFuture>\n  ): Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>> {\n    if (!rpId) {\n      return {\n        data: null,\n        error: new AuthError('rpId is required for WebAuthn registration'),\n      }\n    }\n    try {\n      if (!browserSupportsWebAuthn()) {\n        return {\n          data: null,\n          error: new AuthUnknownError('Browser does not support WebAuthn', null),\n        }\n      }\n\n      // Enroll factor\n      const { data: factor, error: enrollError } = await this._enroll({\n        friendlyName,\n      })\n\n      if (!factor) {\n        await this.client.mfa\n          .listFactors()\n          .then((factors) =>\n            factors.data?.all.find(\n              (v) =>\n                v.factor_type === 'webauthn' &&\n                v.friendly_name === friendlyName &&\n                v.status !== 'unverified'\n            )\n          )\n          .then((factor) => (factor ? this.client.mfa.unenroll({ factorId: factor?.id }) : void 0))\n        return { data: null, error: enrollError }\n      }\n\n      // Get challenge and create credential\n      const { data: challengeResponse, error: challengeError } = await this._challenge(\n        {\n          factorId: factor.id,\n          friendlyName: factor.friendly_name,\n          webauthn: { rpId, rpOrigins },\n          signal,\n        },\n        {\n          create: overrides,\n        }\n      )\n\n      if (!challengeResponse) {\n        return { data: null, error: challengeError }\n      }\n\n      return this._verify({\n        factorId: factor.id,\n        challengeId: challengeResponse.challengeId,\n        webauthn: {\n          rpId,\n          rpOrigins,\n          type: challengeResponse.webauthn.type,\n          credential_response: challengeResponse.webauthn.credential_response,\n        },\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      return {\n        data: null,\n        error: new AuthUnknownError('Unexpected error in register', error),\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CM,MAAO;IAGX;;;;;;QAOA,uBAAoB;QAClB,4FAA4F;QAC5F,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,aAAa,IAAI,MAAM;YAC7B,WAAW,IAAI,GAAG;YAClB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACxB;QAEA,MAAM,gBAAgB,IAAI;QAC1B,IAAI,CAAC,UAAU,GAAG;QAClB,OAAO,cAAc,MAAM;IAC7B;IAEA;;;;;QAMA,iBAAc;QACZ,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,aAAa,IAAI,MAAM;YAC7B,WAAW,IAAI,GAAG;YAClB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG;QACpB;IACF;;AASK,MAAM,uBAAuB,IAAI;AAuBlC,SAAU,qCACd,OAAwC;IAExC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,uEAAuE;IACvE,IACE,OAAO,wBAAwB,eAC/B,kCAAkC,uBAClC,OAAQ,oBACL,4BAA4B,KAAK,YACpC;QACA,yCAAyC;QACzC,OACE,oBACA,4BAA4B,CAC5B,4FAAA,GACA;IAEJ;IAEA,+EAA+E;IAC/E,0DAA0D;IAC1D,MAAM,EAAE,WAAW,YAAY,EAAE,MAAM,QAAQ,EAAE,kBAAkB,EAAA,GAAqB,SAAhB,cAAW,OAAK,SAAlF;QAAA;QAAA;QAAA;KAA+E;IAErF,kDAAkD;IAClD,MAAM,YAAY,CAAA,GAAA,8KAAA,CAAA,wBAAqB,AAArB,EAAsB,cAAc,MAAqB;IAE3E,gDAAgD;IAChD,MAAM,OAAI,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACL,WAAQ;QACX,IAAI,CAAA,GAAA,8KAAA,CAAA,wBAAqB,AAArB,EAAsB,SAAS,EAAE,EAAE,MAAqB;IAAA;IAG9D,0BAA0B;IAC1B,MAAM,SAAM,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACP,cAAW;QACd;QACA;IAAI;IAGN,2CAA2C;IAC3C,IAAI,sBAAsB,mBAAmB,MAAM,GAAG,GAAG;QACvD,OAAO,kBAAkB,GAAG,IAAI,MAAM,mBAAmB,MAAM;QAE/D,IAAK,IAAI,IAAI,GAAG,IAAI,mBAAmB,MAAM,EAAE,IAAK;YAClD,MAAM,OAAO,kBAAkB,CAAC,EAAE;YAClC,OAAO,kBAAkB,CAAC,EAAE,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACvB,OAAI;gBACP,IAAI,CAAA,GAAA,8KAAA,CAAA,wBAAqB,AAArB,EAAsB,KAAK,EAAE,EAAE,MAAM;gBACzC,MAAM,KAAK,IAAI,IAAI;gBACnB,gEAAgE;gBAChE,YAAY,KAAK,UAAU;YAAA;QAE/B;IACF;IAEA,OAAO;AACT;AAWM,SAAU,oCACd,OAAuC;IAEvC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,sEAAsE;IACtE,IACE,OAAO,wBAAwB,eAC/B,iCAAiC,uBACjC,OAAQ,oBACL,2BAA2B,KAAK,YACnC;QACA,yCAAyC;QACzC,OACE,oBACA,2BAA2B,CAAC;IAChC;IAEA,+EAA+E;IAC/E,0DAA0D;IAC1D,MAAM,EAAE,WAAW,YAAY,EAAE,gBAAgB,EAAA,GAAqB,SAAhB,cAAW,OAAK,SAAhE;QAAA;QAAA;KAA6D;IAEnE,kDAAkD;IAClD,MAAM,YAAY,CAAA,GAAA,8KAAA,CAAA,wBAAqB,AAArB,EAAsB,cAAc,MAAqB;IAE3E,0BAA0B;IAC1B,MAAM,SAAM,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACP,cAAW;QACd;IAAS;IAGX,yCAAyC;IACzC,IAAI,oBAAoB,iBAAiB,MAAM,GAAG,GAAG;QACnD,OAAO,gBAAgB,GAAG,IAAI,MAAM,iBAAiB,MAAM;QAE3D,IAAK,IAAI,IAAI,GAAG,IAAI,iBAAiB,MAAM,EAAE,IAAK;YAChD,MAAM,OAAO,gBAAgB,CAAC,EAAE;YAChC,OAAO,gBAAgB,CAAC,EAAE,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACrB,OAAI;gBACP,IAAI,CAAA,GAAA,8KAAA,CAAA,wBAAqB,AAArB,EAAsB,KAAK,EAAE,EAAE,MAAM;gBACzC,MAAM,KAAK,IAAI,IAAI;gBACnB,gEAAgE;gBAChE,YAAY,KAAK,UAAU;YAAA;QAE/B;IACF;IAEA,OAAO;AACT;AAiBM,SAAU,oCACd,UAAkC;;IAElC,yDAAyD;IACzD,IAAI,YAAY,cAAc,OAAO,WAAW,MAAM,KAAK,YAAY;QACrE,yCAAyC;QACzC,OAAQ,WAAsC,MAAM;IACtD;IACA,MAAM,2BAA2B;IAKjC,OAAO;QACL,IAAI,WAAW,EAAE;QACjB,OAAO,WAAW,EAAE;QACpB,UAAU;YACR,mBAAmB,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAhB,EAAiB,IAAI,WAAW,WAAW,QAAQ,CAAC,iBAAiB;YACxF,gBAAgB,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAhB,EAAiB,IAAI,WAAW,WAAW,QAAQ,CAAC,cAAc;;QAEpF,MAAM;QACN,wBAAwB,WAAW,yBAAyB;QAC5D,qEAAqE;QACrE,yBAA0B,CAAA,KAAA,yBAAyB,uBAAuB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;;AAIlF;AAWM,SAAU,mCACd,UAAoC;;IAEpC,yDAAyD;IACzD,IAAI,YAAY,cAAc,OAAO,WAAW,MAAM,KAAK,YAAY;QACrE,yCAAyC;QACzC,OAAQ,WAAwC,MAAM;IACxD;IAEA,uEAAuE;IACvE,6FAA6F;IAC7F,iFAAiF;IACjF,MAAM,2BAA2B;IAKjC,MAAM,yBAAyB,WAAW,yBAAyB;IACnE,MAAM,oBAAoB,WAAW,QAAQ;IAE7C,OAAO;QACL,IAAI,WAAW,EAAE;QACjB,OAAO,WAAW,EAAE;QACpB,UAAU;YACR,mBAAmB,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAhB,EAAiB,IAAI,WAAW,kBAAkB,iBAAiB;YACtF,gBAAgB,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAhB,EAAiB,IAAI,WAAW,kBAAkB,cAAc;YAChF,WAAW,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAhB,EAAiB,IAAI,WAAW,kBAAkB,SAAS;YACtE,YAAY,kBAAkB,UAAU,GACpC,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAhB,EAAiB,IAAI,WAAW,kBAAkB,UAAU,KAC5D;;QAEN,MAAM;QACN;QACA,qEAAqE;QACrE,yBAA0B,CAAA,KAAA,yBAAyB,uBAAuB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;;AAIlF;AAeM,SAAU,cAAc,QAAgB;IAC5C,OACE,uEAAuE;IACvE,aAAa,eAAe,0CAA0C,IAAI,CAAC;AAE/E;AAEA;;;;;;IAOA,SAAS;;IACP,OAAO,CAAC,CAAC,CACP,CAAA,GAAA,4KAAA,CAAA,YAAS,AAAT,OACA,yBAAyB,UACzB,OAAO,mBAAmB,IAC1B,iBAAiB,aACjB,OAAO,CAAA,CAAA,KAAA,cAAS,QAAT,cAAS,KAAA,IAAA,KAAA,IAAT,UAAW,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,MAAM,MAAK,cAC1C,OAAO,CAAA,CAAA,KAAA,cAAS,QAAT,cAAS,KAAA,IAAA,KAAA,IAAT,UAAW,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,MAAK,UAAU;AAErD;AAWO,eAAe,iBACpB,OAEC;IAED,IAAI;QACF,MAAM,WAAW,MAAM,UAAU,WAAW,CAAC,MAAM,CACjD,+DAAA,GACA;QAEF,IAAI,CAAC,UAAU;YACb,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,uLAAA,CAAA,uBAAoB,CAAC,6BAA6B;;QAEjE;QACA,IAAI,CAAC,CAAC,oBAAoB,mBAAmB,GAAG;YAC9C,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,uLAAA,CAAA,uBAAoB,CAAC,+CAA+C;;QAEnF;QACA,OAAO;YAAE,MAAM;YAAoC,OAAO;QAAI;IAChE,EAAE,OAAO,KAAK;QACZ,OAAO;YACL,MAAM;YACN,OAAO,CAAA,GAAA,uLAAA,CAAA,4BAAyB,AAAzB,EAA0B;gBAC/B,OAAO;gBACP;;;IAGN;AACF;AAWO,eAAe,cACpB,OAEC;IAED,IAAI;QACF,MAAM,WAAW,MAAM,UAAU,WAAW,CAAC,GAAG,CAC9C,+DAAA,GACA;QAEF,IAAI,CAAC,UAAU;YACb,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,uLAAA,CAAA,uBAAoB,CAAC,6BAA6B;;QAEjE;QACA,IAAI,CAAC,CAAC,oBAAoB,mBAAmB,GAAG;YAC9C,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,uLAAA,CAAA,uBAAoB,CAAC,+CAA+C;;QAEnF;QACA,OAAO;YAAE,MAAM;YAAsC,OAAO;QAAI;IAClE,EAAE,OAAO,KAAK;QACZ,OAAO;YACL,MAAM;YACN,OAAO,CAAA,GAAA,uLAAA,CAAA,8BAA2B,AAA3B,EAA4B;gBACjC,OAAO;gBACP;;;IAGN;AACF;AAEO,MAAM,2BAA8E;IACzF,OAAO;QAAC;KAAe;IACvB,wBAAwB;QACtB,yBAAyB;QACzB,oBAAoB;QACpB,qEAAA,GACA,kBAAkB;QAClB,aAAa;;IAEf,aAAa;;AAGR,MAAM,0BAA4E;IACvF,qEAAA,GACA,kBAAkB;IAClB,OAAO;QAAC;KAAe;;AAGzB,SAAS,UAAa,GAAG,OAAqB;IAC5C,MAAM,WAAW,CAAC,MAChB,QAAQ,QAAQ,OAAO,QAAQ,YAAY,CAAC,MAAM,OAAO,CAAC;IAE5D,MAAM,oBAAoB,CAAC,MACzB,eAAe,eAAe,YAAY,MAAM,CAAC;IAEnD,MAAM,SAAqB,CAAA;IAE3B,KAAK,MAAM,UAAU,QAAS;QAC5B,IAAI,CAAC,QAAQ;QAEb,IAAK,MAAM,OAAO,OAAQ;YACxB,MAAM,QAAQ,MAAM,CAAC,IAAI;YACzB,IAAI,UAAU,WAAW;YAEzB,IAAI,MAAM,OAAO,CAAC,QAAQ;gBACxB,2EAA2E;gBAC3E,MAAM,CAAC,IAAI,GAAG;YAChB,OAAO,IAAI,kBAAkB,QAAQ;gBACnC,MAAM,CAAC,IAAI,GAAG;YAChB,OAAO,IAAI,SAAS,QAAQ;gBAC1B,MAAM,WAAW,MAAM,CAAC,IAAI;gBAC5B,IAAI,SAAS,WAAW;oBACtB,MAAM,CAAC,IAAI,GAAG,UAAU,UAAU;gBACpC,OAAO;oBACL,MAAM,CAAC,IAAI,GAAG,UAAU;gBAC1B;YACF,OAAO;gBACL,MAAM,CAAC,IAAI,GAAG;YAChB;QACF;IACF;IAEA,OAAO;AACT;AAYM,SAAU,+BACd,WAAqD,EACrD,SAA6D;IAE7D,OAAO,UAAU,0BAA0B,aAAa,aAAa,CAAA;AACvE;AAWM,SAAU,8BACd,WAAoD,EACpD,SAA4D;IAE5D,OAAO,UAAU,yBAAyB,aAAa,aAAa,CAAA;AACtE;AAUM,MAAO;IAOX,YAAoB,MAAoB,CAAA;QAApB,IAAA,CAAA,MAAM,GAAN;QAClB,+CAA+C;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI;QAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;IAC1C;IAEA;;;;;;;;QASO,MAAM,QACX,MAAmD,EAAA;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAM,SAAM;YAAE,YAAY;QAAU;IACnE;IAEA;;;;;;;;;;;;;QAcO,MAAM,WACX,EACE,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,MAAM,EACuE,EAC/E,SAQK,EAAA;QAYL,IAAI;YACF,2DAA2D;YAC3D,MAAM,EAAE,MAAM,iBAAiB,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;gBACzF;gBACA;;YAGF,IAAI,CAAC,mBAAmB;gBACtB,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAc;YAC5C;YAEA,MAAM,cAAc,WAAM,QAAN,WAAM,KAAA,IAAN,SAAU,qBAAqB,oBAAoB;YAEvE,mEAAA,GACA,IAAI,kBAAkB,QAAQ,CAAC,IAAI,KAAK,UAAU;gBAChD,MAAM,EAAE,IAAI,EAAE,GAAG,kBAAkB,QAAQ,CAAC,kBAAkB,CAAC,SAAS;gBACxE,IAAI,CAAC,KAAK,IAAI,EAAE;oBACd,KAAK,IAAI,GAAG,CAAA,EAAG,KAAK,EAAE,CAAA,CAAA,EAAI,aAAY,CAAE;gBAC1C;gBACA,IAAI,CAAC,KAAK,WAAW,EAAE;oBACrB,KAAK,WAAW,GAAG,KAAK,IAAI;gBAC9B;YACF;YAEA,OAAQ,kBAAkB,QAAQ,CAAC,IAAI;gBACrC,KAAK;oBAAU;wBACb,MAAM,UAAU,+BACd,kBAAkB,QAAQ,CAAC,kBAAkB,CAAC,SAAS,EACvD,cAAS,QAAT,cAAS,KAAA,IAAA,KAAA,IAAT,UAAW,MAAM;wBAGnB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,iBAAiB;4BAC7C,WAAW;4BACX,QAAQ;;wBAGV,IAAI,MAAM;4BACR,OAAO;gCACL,MAAM;oCACJ;oCACA,aAAa,kBAAkB,EAAE;oCACjC,UAAU;wCACR,MAAM,kBAAkB,QAAQ,CAAC,IAAI;wCACrC,qBAAqB;;;gCAGzB,OAAO;;wBAEX;wBACA,OAAO;4BAAE,MAAM;4BAAM;wBAAK;oBAC5B;gBAEA,KAAK;oBAAW;wBACd,MAAM,UAAU,8BACd,kBAAkB,QAAQ,CAAC,kBAAkB,CAAC,SAAS,EACvD,cAAS,QAAT,cAAS,KAAA,IAAA,KAAA,IAAT,UAAW,OAAO;wBAGpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,cAAa,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACtC,kBAAkB,QAAQ,CAAC,kBAAkB,GAAA;4BAChD,WAAW;4BACX,QAAQ;wBAAW;wBAGrB,IAAI,MAAM;4BACR,OAAO;gCACL,MAAM;oCACJ;oCACA,aAAa,kBAAkB,EAAE;oCACjC,UAAU;wCACR,MAAM,kBAAkB,QAAQ,CAAC,IAAI;wCACrC,qBAAqB;;;gCAGzB,OAAO;;wBAEX;wBACA,OAAO;4BAAE,MAAM;4BAAM;wBAAK;oBAC5B;YACF;QACF,EAAE,OAAO,OAAO;YACd,IAAI,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAX,EAAY,QAAQ;gBACtB,OAAO;oBAAE,MAAM;oBAAM;gBAAK;YAC5B;YACA,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,2KAAA,CAAA,mBAAgB,CAAC,iCAAiC;;QAEjE;IACF;IAEA;;;;;;;;;;;UAYO,MAAM,QAAwC,EACnD,WAAW,EACX,QAAQ,EACR,QAAQ,EAKT,EAAA;QACC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;YAC5B;YACA;YACA,UAAU;;IAEd;IAEA;;;;;;;;;;;;;;;QAgBO,MAAM,cACX,EACE,QAAQ,EACR,UAAU,EACR,OAAO,OAAO,WAAW,cAAc,OAAO,QAAQ,CAAC,QAAQ,GAAG,SAAS,EAC3E,YAAY,OAAO,WAAW,cAAc;QAAC,OAAO,QAAQ,CAAC,MAAM;KAAC,GAAG,SAAS,EAChF,MAAM,EACP,EAQF,EACD,SAAmD,EAAA;QAEnD,IAAI,CAAC,MAAM;YACT,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,2KAAA,CAAA,YAAS,CAAC;;QAEzB;QACA,IAAI;YACF,IAAI,CAAC,2BAA2B;gBAC9B,OAAO;oBACL,MAAM;oBACN,OAAO,IAAI,2KAAA,CAAA,mBAAgB,CAAC,qCAAqC;;YAErE;YAEA,+BAA+B;YAC/B,MAAM,EAAE,MAAM,iBAAiB,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAC7E;gBACE;gBACA,UAAU;oBAAE;oBAAM;gBAAS;gBAC3B;eAEF;gBAAE,SAAS;YAAS;YAGtB,IAAI,CAAC,mBAAmB;gBACtB,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAc;YAC5C;YAEA,MAAM,EAAE,QAAQ,EAAE,GAAG;YAErB,oBAAoB;YACpB,OAAO,IAAI,CAAC,OAAO,CAAC;gBAClB;gBACA,aAAa,kBAAkB,WAAW;gBAC1C,UAAU;oBACR,MAAM,SAAS,IAAI;oBACnB;oBACA;oBACA,qBAAqB,SAAS,mBAAmB;;;QAGvD,EAAE,OAAO,OAAO;YACd,IAAI,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAX,EAAY,QAAQ;gBACtB,OAAO;oBAAE,MAAM;oBAAM;gBAAK;YAC5B;YACA,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,2KAAA,CAAA,mBAAgB,CAAC,oCAAoC;;QAEpE;IACF;IAEA;;;;;;;;;;;;;;QAeO,MAAM,UACX,EACE,YAAY,EACZ,OAAO,OAAO,WAAW,cAAc,OAAO,QAAQ,CAAC,QAAQ,GAAG,SAAS,EAC3E,YAAY,OAAO,WAAW,cAAc;QAAC,OAAO,QAAQ,CAAC,MAAM;KAAC,GAAG,SAAS,EAChF,MAAM,EAMP,EACD,SAA6D,EAAA;QAE7D,IAAI,CAAC,MAAM;YACT,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,2KAAA,CAAA,YAAS,CAAC;;QAEzB;QACA,IAAI;YACF,IAAI,CAAC,2BAA2B;gBAC9B,OAAO;oBACL,MAAM;oBACN,OAAO,IAAI,2KAAA,CAAA,mBAAgB,CAAC,qCAAqC;;YAErE;YAEA,gBAAgB;YAChB,MAAM,EAAE,MAAM,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC;gBAC9D;;YAGF,IAAI,CAAC,QAAQ;gBACX,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAClB,WAAW,GACX,IAAI,CAAC,CAAC;;oBACL,OAAA,CAAA,KAAA,QAAQ,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,GAAG,CAAC,IAAI,CACpB,CAAC,IACC,EAAE,WAAW,KAAK,cAClB,EAAE,aAAa,KAAK,gBACpB,EAAE,MAAM,KAAK;mBAGlB,IAAI,CAAC,CAAC,SAAY,SAAS,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;wBAAE,UAAU,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,EAAE;oBAAA,KAAM,KAAK;gBACxF,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAW;YACzC;YAEA,sCAAsC;YACtC,MAAM,EAAE,MAAM,iBAAiB,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,IAAI,CAAC,UAAU,CAC9E;gBACE,UAAU,OAAO,EAAE;gBACnB,cAAc,OAAO,aAAa;gBAClC,UAAU;oBAAE;oBAAM;gBAAS;gBAC3B;eAEF;gBACE,QAAQ;;YAIZ,IAAI,CAAC,mBAAmB;gBACtB,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAc;YAC5C;YAEA,OAAO,IAAI,CAAC,OAAO,CAAC;gBAClB,UAAU,OAAO,EAAE;gBACnB,aAAa,kBAAkB,WAAW;gBAC1C,UAAU;oBACR;oBACA;oBACA,MAAM,kBAAkB,QAAQ,CAAC,IAAI;oBACrC,qBAAqB,kBAAkB,QAAQ,CAAC,mBAAmB;;;QAGzE,EAAE,OAAO,OAAO;YACd,IAAI,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAX,EAAY,QAAQ;gBACtB,OAAO;oBAAE,MAAM;oBAAM;gBAAK;YAC5B;YACA,OAAO;gBACL,MAAM;gBACN,OAAO,IAAI,2KAAA,CAAA,mBAAgB,CAAC,gCAAgC;;QAEhE;IACF"}},
    {"offset": {"line": 10874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10879, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/lib/webauthn.errors.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { StrictOmit } from './types'\nimport { isValidDomain } from './webauthn'\nimport {\n  PublicKeyCredentialCreationOptionsFuture,\n  PublicKeyCredentialRequestOptionsFuture,\n} from './webauthn.dom'\n\n/**\n * A custom Error used to return a more nuanced error detailing _why_ one of the eight documented\n * errors in the spec was raised after calling `navigator.credentials.create()` or\n * `navigator.credentials.get()`:\n *\n * - `AbortError`\n * - `ConstraintError`\n * - `InvalidStateError`\n * - `NotAllowedError`\n * - `NotSupportedError`\n * - `SecurityError`\n * - `TypeError`\n * - `UnknownError`\n *\n * Error messages were determined through investigation of the spec to determine under which\n * scenarios a given error would be raised.\n */\nexport class WebAuthnError extends Error {\n  code: WebAuthnErrorCode\n\n  protected __isWebAuthnError = true\n\n  constructor({\n    message,\n    code,\n    cause,\n    name,\n  }: {\n    message: string\n    code: WebAuthnErrorCode\n    cause?: Error | unknown\n    name?: string\n  }) {\n    // @ts-ignore: help Rollup understand that `cause` is okay to set\n    super(message, { cause })\n    this.name = name ?? (cause instanceof Error ? cause.name : undefined) ?? 'Unknown Error'\n    this.code = code\n  }\n}\n\n/**\n * Error class for unknown WebAuthn errors.\n * Wraps unexpected errors that don't match known WebAuthn error conditions.\n */\nexport class WebAuthnUnknownError extends WebAuthnError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super({\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: originalError,\n      message,\n    })\n    this.name = 'WebAuthnUnknownError'\n    this.originalError = originalError\n  }\n}\n\n/**\n * Type guard to check if an error is a WebAuthnError.\n * @param {unknown} error - The error to check\n * @returns {boolean} True if the error is a WebAuthnError\n */\nexport function isWebAuthnError(error: unknown): error is WebAuthnError {\n  return typeof error === 'object' && error !== null && '__isWebAuthnError' in error\n}\n\n/**\n * Error codes for WebAuthn operations.\n * These codes provide specific information about why a WebAuthn ceremony failed.\n * @see {@link https://w3c.github.io/webauthn/#sctn-defined-errors W3C WebAuthn Spec - Defined Errors}\n */\nexport type WebAuthnErrorCode =\n  | 'ERROR_CEREMONY_ABORTED'\n  | 'ERROR_INVALID_DOMAIN'\n  | 'ERROR_INVALID_RP_ID'\n  | 'ERROR_INVALID_USER_ID_LENGTH'\n  | 'ERROR_MALFORMED_PUBKEYCREDPARAMS'\n  | 'ERROR_AUTHENTICATOR_GENERAL_ERROR'\n  | 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT'\n  | 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT'\n  | 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED'\n  | 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG'\n  | 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE'\n  | 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY'\n\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.create()`.\n * Maps browser errors to specific WebAuthn error codes for better debugging.\n * @param {Object} params - Error identification parameters\n * @param {Error} params.error - The error thrown by the browser\n * @param {CredentialCreationOptions} params.options - The options passed to credentials.create()\n * @returns {WebAuthnError} A WebAuthnError with a specific error code\n * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n */\nexport function identifyRegistrationError({\n  error,\n  options,\n}: {\n  error: Error\n  options: StrictOmit<CredentialCreationOptions, 'publicKey'> & {\n    publicKey: PublicKeyCredentialCreationOptionsFuture\n  }\n}): WebAuthnError {\n  const { publicKey } = options\n\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property')\n  }\n\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n      return new WebAuthnError({\n        message: 'Registration ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'ConstraintError') {\n    if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 4)\n      return new WebAuthnError({\n        message:\n          'Discoverable credentials were required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n        cause: error,\n      })\n    } else if (\n      // @ts-ignore: `mediation` doesn't yet exist on CredentialCreationOptions but it's possible as of Sept 2024\n      options.mediation === 'conditional' &&\n      publicKey.authenticatorSelection?.userVerification === 'required'\n    ) {\n      // https://w3c.github.io/webauthn/#sctn-createCredential (Step 22.4)\n      return new WebAuthnError({\n        message:\n          'User verification was required during automatic registration but it could not be performed',\n        code: 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE',\n        cause: error,\n      })\n    } else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n      // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 5)\n      return new WebAuthnError({\n        message: 'User verification was required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'InvalidStateError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 20)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 3)\n    return new WebAuthnError({\n      message: 'The authenticator was previously registered',\n      code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n      cause: error,\n    })\n  } else if (error.name === 'NotAllowedError') {\n    /**\n     * Pass the error directly through. Platforms are overloading this error beyond what the spec\n     * defines and we don't want to overwrite potentially useful error messages.\n     */\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error,\n    })\n  } else if (error.name === 'NotSupportedError') {\n    const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(\n      (param) => param.type === 'public-key'\n    )\n\n    if (validPubKeyCredParams.length === 0) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 10)\n      return new WebAuthnError({\n        message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n        code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n        cause: error,\n      })\n    }\n\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 2)\n    return new WebAuthnError({\n      message:\n        'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n      code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n      cause: error,\n    })\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname\n    if (!isValidDomain(effectiveDomain)) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 7)\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error,\n      })\n    } else if (publicKey.rp.id !== effectiveDomain) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 8)\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'TypeError') {\n    if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 5)\n      return new WebAuthnError({\n        message: 'User ID was not between 1 and 64 characters',\n        code: 'ERROR_INVALID_USER_ID_LENGTH',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'UnknownError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 1)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 8)\n    return new WebAuthnError({\n      message:\n        'The authenticator was unable to process the specified options, or could not create a new credential',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error,\n    })\n  }\n\n  return new WebAuthnError({\n    message: 'a Non-Webauthn related error has occurred',\n    code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n    cause: error,\n  })\n}\n\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.get()`.\n * Maps browser errors to specific WebAuthn error codes for better debugging.\n * @param {Object} params - Error identification parameters\n * @param {Error} params.error - The error thrown by the browser\n * @param {CredentialRequestOptions} params.options - The options passed to credentials.get()\n * @returns {WebAuthnError} A WebAuthnError with a specific error code\n * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n */\nexport function identifyAuthenticationError({\n  error,\n  options,\n}: {\n  error: Error\n  options: StrictOmit<CredentialRequestOptions, 'publicKey'> & {\n    publicKey: PublicKeyCredentialRequestOptionsFuture\n  }\n}): WebAuthnError {\n  const { publicKey } = options\n\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property')\n  }\n\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n      return new WebAuthnError({\n        message: 'Authentication ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'NotAllowedError') {\n    /**\n     * Pass the error directly through. Platforms are overloading this error beyond what the spec\n     * defines and we don't want to overwrite potentially useful error messages.\n     */\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error,\n    })\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname\n    if (!isValidDomain(effectiveDomain)) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-discover-from-external-source (Step 5)\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error,\n      })\n    } else if (publicKey.rpId !== effectiveDomain) {\n      // https://www.w3.org/TR/webauthn-2/#sctn-discover-from-external-source (Step 6)\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error,\n      })\n    }\n  } else if (error.name === 'UnknownError') {\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion (Step 1)\n    // https://www.w3.org/TR/webauthn-2/#sctn-op-get-assertion (Step 12)\n    return new WebAuthnError({\n      message:\n        'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error,\n    })\n  }\n\n  return new WebAuthnError({\n    message: 'a Non-Webauthn related error has occurred',\n    code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n    cause: error,\n  })\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 11084, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11101, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/GoTrueClient.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport {\n  AUTO_REFRESH_TICK_DURATION_MS,\n  AUTO_REFRESH_TICK_THRESHOLD,\n  DEFAULT_HEADERS,\n  EXPIRY_MARGIN_MS,\n  GOTRUE_URL,\n  JWKS_TTL,\n  STORAGE_KEY,\n} from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthInvalidCredentialsError,\n  AuthInvalidJwtError,\n  AuthInvalidTokenResponseError,\n  AuthPKCEGrantCodeExchangeError,\n  AuthSessionMissingError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n  isAuthImplicitGrantRedirectError,\n  isAuthRetryableFetchError,\n  isAuthSessionMissingError,\n} from './lib/errors'\nimport {\n  Fetch,\n  _request,\n  _sessionResponse,\n  _sessionResponsePassword,\n  _ssoResponse,\n  _userResponse,\n} from './lib/fetch'\nimport {\n  decodeJWT,\n  deepClone,\n  Deferred,\n  getAlgorithm,\n  getCodeChallengeAndMethod,\n  getItemAsync,\n  isBrowser,\n  parseParametersFromURL,\n  removeItemAsync,\n  resolveFetch,\n  retryable,\n  setItemAsync,\n  sleep,\n  supportsLocalStorage,\n  userNotAvailableProxy,\n  uuid,\n  validateExp,\n} from './lib/helpers'\nimport { memoryLocalStorageAdapter } from './lib/local-storage'\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { version } from './lib/version'\n\nimport { bytesToBase64URL, stringToUint8Array } from './lib/base64url'\nimport type {\n  AuthChangeEvent,\n  AuthenticatorAssuranceLevels,\n  AuthFlowType,\n  AuthMFAChallengePhoneResponse,\n  AuthMFAChallengeResponse,\n  AuthMFAChallengeTOTPResponse,\n  AuthMFAChallengeWebauthnResponse,\n  AuthMFAChallengeWebauthnServerResponse,\n  AuthMFAEnrollPhoneResponse,\n  AuthMFAEnrollResponse,\n  AuthMFAEnrollTOTPResponse,\n  AuthMFAEnrollWebauthnResponse,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthMFAListFactorsResponse,\n  AuthMFAUnenrollResponse,\n  AuthMFAVerifyResponse,\n  AuthOtpResponse,\n  AuthResponse,\n  AuthResponsePassword,\n  AuthTokenResponse,\n  AuthTokenResponsePassword,\n  CallRefreshTokenResult,\n  EthereumWallet,\n  EthereumWeb3Credentials,\n  Factor,\n  GoTrueClientOptions,\n  GoTrueMFAApi,\n  InitializeResult,\n  JWK,\n  JwtHeader,\n  JwtPayload,\n  LockFunc,\n  MFAChallengeAndVerifyParams,\n  MFAChallengeParams,\n  MFAChallengePhoneParams,\n  MFAChallengeTOTPParams,\n  MFAChallengeWebauthnParams,\n  MFAEnrollParams,\n  MFAEnrollPhoneParams,\n  MFAEnrollTOTPParams,\n  MFAEnrollWebauthnParams,\n  MFAUnenrollParams,\n  MFAVerifyParams,\n  MFAVerifyPhoneParams,\n  MFAVerifyTOTPParams,\n  MFAVerifyWebauthnParamFields,\n  MFAVerifyWebauthnParams,\n  OAuthResponse,\n  Prettify,\n  Provider,\n  ResendParams,\n  Session,\n  SignInAnonymouslyCredentials,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignInWithSSO,\n  SignOut,\n  SignUpWithPasswordCredentials,\n  SolanaWallet,\n  SolanaWeb3Credentials,\n  SSOResponse,\n  StrictOmit,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserIdentity,\n  UserResponse,\n  VerifyOtpParams,\n  Web3Credentials,\n} from './lib/types'\nimport {\n  createSiweMessage,\n  fromHex,\n  getAddress,\n  Hex,\n  SiweMessage,\n  toHex,\n} from './lib/web3/ethereum'\nimport {\n  deserializeCredentialCreationOptions,\n  deserializeCredentialRequestOptions,\n  serializeCredentialCreationResponse,\n  serializeCredentialRequestResponse,\n  WebAuthnApi,\n} from './lib/webauthn'\nimport {\n  AuthenticationCredential,\n  PublicKeyCredentialJSON,\n  RegistrationCredential,\n} from './lib/webauthn.dom'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<\n  Required<GoTrueClientOptions>,\n  'fetch' | 'storage' | 'userStorage' | 'lock'\n> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false,\n  hasCustomAuthorizationHeader: false,\n}\n\nasync function lockNoOp<R>(name: string, acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n  return await fn()\n}\n\n/**\n * Caches JWKS values for all clients created in the same environment. This is\n * especially useful for shared-memory execution environments such as Vercel's\n * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n * many clients are created, if they share the same storage key they will use\n * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n * JWTs.\n */\nconst GLOBAL_JWKS: { [storageKey: string]: { cachedAt: number; jwks: { keys: JWK[] } } } = {}\n\nexport default class GoTrueClient {\n  private static nextInstanceID = 0\n\n  private instanceID: number\n\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  protected flowType: AuthFlowType\n\n  /**\n   * The JWKS used for verifying asymmetric JWTs\n   */\n  protected get jwks() {\n    return GLOBAL_JWKS[this.storageKey]?.jwks ?? { keys: [] }\n  }\n\n  protected set jwks(value: { keys: JWK[] }) {\n    GLOBAL_JWKS[this.storageKey] = { ...GLOBAL_JWKS[this.storageKey], jwks: value }\n  }\n\n  protected get jwks_cached_at() {\n    return GLOBAL_JWKS[this.storageKey]?.cachedAt ?? Number.MIN_SAFE_INTEGER\n  }\n\n  protected set jwks_cached_at(value: number) {\n    GLOBAL_JWKS[this.storageKey] = { ...GLOBAL_JWKS[this.storageKey], cachedAt: value }\n  }\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  /**\n   * @experimental\n   */\n  protected userStorage: SupportedStorage | null = null\n  protected memoryStorage: { [key: string]: string } | null = null\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the auth state is known and it's safe to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected hasCustomAuthorizationHeader = false\n  protected suppressGetSessionWarning = false\n  protected fetch: Fetch\n  protected lock: LockFunc\n  protected lockAcquired = false\n  protected pendingInLock: Promise<any>[] = []\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  protected logDebugMessages: boolean\n  protected logger: (message: string, ...args: any[]) => void = console.log\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    this.instanceID = GoTrueClient.nextInstanceID\n    GoTrueClient.nextInstanceID += 1\n\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn(\n        'Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.'\n      )\n    }\n\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n\n    this.logDebugMessages = !!settings.debug\n    if (typeof settings.debug === 'function') {\n      this.logger = settings.debug\n    }\n\n    this.persistSession = settings.persistSession\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.lock = settings.lock || lockNoOp\n    this.detectSessionInUrl = settings.detectSessionInUrl\n    this.flowType = settings.flowType\n    this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader\n\n    if (settings.lock) {\n      this.lock = settings.lock\n    } else if (isBrowser() && globalThis?.navigator?.locks) {\n      this.lock = navigatorLock\n    } else {\n      this.lock = lockNoOp\n    }\n\n    if (!this.jwks) {\n      this.jwks = { keys: [] }\n      this.jwks_cached_at = Number.MIN_SAFE_INTEGER\n    }\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n      webauthn: new WebAuthnApi(this),\n    }\n\n    if (this.persistSession) {\n      if (settings.storage) {\n        this.storage = settings.storage\n      } else {\n        if (supportsLocalStorage()) {\n          this.storage = globalThis.localStorage\n        } else {\n          this.memoryStorage = {}\n          this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n        }\n      }\n\n      if (settings.userStorage) {\n        this.userStorage = settings.userStorage\n      }\n    } else {\n      this.memoryStorage = {}\n      this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      } catch (e: any) {\n        console.error(\n          'Failed to create a new BroadcastChannel, multi-tab state changes will not be available',\n          e\n        )\n      }\n\n      this.broadcastChannel?.addEventListener('message', async (event) => {\n        this._debug('received broadcast notification from other tab or client', event)\n\n        await this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  private _debug(...args: any[]): GoTrueClient {\n    if (this.logDebugMessages) {\n      this.logger(\n        `GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`,\n        ...args\n      )\n    }\n\n    return this\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  async initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return await this.initializePromise\n    }\n\n    this.initializePromise = (async () => {\n      return await this._acquireLock(-1, async () => {\n        return await this._initialize()\n      })\n    })()\n\n    return await this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    try {\n      const params = parseParametersFromURL(window.location.href)\n      let callbackUrlType = 'none'\n      if (this._isImplicitGrantCallback(params)) {\n        callbackUrlType = 'implicit'\n      } else if (await this._isPKCECallback(params)) {\n        callbackUrlType = 'pkce'\n      }\n\n      /**\n       * Attempt to get the session from the URL only if these conditions are fulfilled\n       *\n       * Note: If the URL isn't one of the callback url types (implicit or pkce),\n       * then there could be an existing session so we don't want to prematurely remove it\n       */\n      if (isBrowser() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n        const { data, error } = await this._getSessionFromURL(params, callbackUrlType)\n        if (error) {\n          this._debug('#_initialize()', 'error detecting session from URL', error)\n\n          if (isAuthImplicitGrantRedirectError(error)) {\n            const errorCode = error.details?.code\n            if (\n              errorCode === 'identity_already_exists' ||\n              errorCode === 'identity_not_found' ||\n              errorCode === 'single_identity_not_deletable'\n            ) {\n              return { error }\n            }\n          }\n\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        this._debug(\n          '#_initialize()',\n          'detected session in URL',\n          session,\n          'redirect type',\n          redirectType\n        )\n\n        await this._saveSession(session)\n\n        setTimeout(async () => {\n          if (redirectType === 'recovery') {\n            await this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n          } else {\n            await this._notifyAllSubscribers('SIGNED_IN', session)\n          }\n        }, 0)\n\n        return { error: null }\n      }\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n      this._debug('#_initialize()', 'end')\n    }\n  }\n\n  /**\n   * Creates a new anonymous user.\n   *\n   * @returns A session where the is_anonymous claim in the access token JWT set to true\n   */\n  async signInAnonymously(credentials?: SignInAnonymouslyCredentials): Promise<AuthResponse> {\n    try {\n      const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n        headers: this.headers,\n        body: {\n          data: credentials?.options?.data ?? {},\n          gotrue_meta_security: { captcha_token: credentials?.options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            channel: options?.channel ?? 'sms',\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(\n    credentials: SignInWithPasswordCredentials\n  ): Promise<AuthTokenResponsePassword> {\n    try {\n      let res: AuthResponsePassword\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponsePassword,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponsePassword,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return {\n        data: {\n          user: data.user,\n          session: data.session,\n          ...(data.weak_password ? { weakPassword: data.weak_password } : null),\n        },\n        error,\n      }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   * This method supports the PKCE flow.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    return await this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n   */\n  async exchangeCodeForSession(authCode: string): Promise<AuthTokenResponse> {\n    await this.initializePromise\n\n    return this._acquireLock(-1, async () => {\n      return this._exchangeCodeForSession(authCode)\n    })\n  }\n\n  /**\n   * Signs in a user by verifying a message signed by the user's private key.\n   * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n   * both of which derive from the EIP-4361 standard\n   * With slight variation on Solana's side.\n   * @reference https://eips.ethereum.org/EIPS/eip-4361\n   */\n  async signInWithWeb3(credentials: Web3Credentials): Promise<\n    | {\n        data: { session: Session; user: User }\n        error: null\n      }\n    | { data: { session: null; user: null }; error: AuthError }\n  > {\n    const { chain } = credentials\n\n    switch (chain) {\n      case 'ethereum':\n        return await this.signInWithEthereum(credentials)\n      case 'solana':\n        return await this.signInWithSolana(credentials)\n      default:\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`)\n    }\n  }\n\n  private async signInWithEthereum(\n    credentials: EthereumWeb3Credentials\n  ): Promise<\n    | { data: { session: Session; user: User }; error: null }\n    | { data: { session: null; user: null }; error: AuthError }\n  > {\n    // TODO: flatten type\n    let message: string\n    let signature: Hex\n\n    if ('message' in credentials) {\n      message = credentials.message\n      signature = credentials.signature\n    } else {\n      const { chain, wallet, statement, options } = credentials\n\n      let resolvedWallet: EthereumWallet\n\n      if (!isBrowser()) {\n        if (typeof wallet !== 'object' || !options?.url) {\n          throw new Error(\n            '@supabase/auth-js: Both wallet and url must be specified in non-browser environments.'\n          )\n        }\n\n        resolvedWallet = wallet\n      } else if (typeof wallet === 'object') {\n        resolvedWallet = wallet\n      } else {\n        const windowAny = window as any\n\n        if (\n          'ethereum' in windowAny &&\n          typeof windowAny.ethereum === 'object' &&\n          'request' in windowAny.ethereum &&\n          typeof windowAny.ethereum.request === 'function'\n        ) {\n          resolvedWallet = windowAny.ethereum\n        } else {\n          throw new Error(\n            `@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`\n          )\n        }\n      }\n\n      const url = new URL(options?.url ?? window.location.href)\n\n      const accounts = await resolvedWallet\n        .request({\n          method: 'eth_requestAccounts',\n        })\n        .then((accs) => accs as string[])\n        .catch(() => {\n          throw new Error(\n            `@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`\n          )\n        })\n\n      if (!accounts || accounts.length === 0) {\n        throw new Error(\n          `@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`\n        )\n      }\n\n      const address = getAddress(accounts[0])\n\n      let chainId = options?.signInWithEthereum?.chainId\n      if (!chainId) {\n        const chainIdHex = await resolvedWallet.request({\n          method: 'eth_chainId',\n        })\n        chainId = fromHex(chainIdHex as Hex)\n      }\n\n      const siweMessage: SiweMessage = {\n        domain: url.host,\n        address: address,\n        statement: statement,\n        uri: url.href,\n        version: '1',\n        chainId: chainId,\n        nonce: options?.signInWithEthereum?.nonce,\n        issuedAt: options?.signInWithEthereum?.issuedAt ?? new Date(),\n        expirationTime: options?.signInWithEthereum?.expirationTime,\n        notBefore: options?.signInWithEthereum?.notBefore,\n        requestId: options?.signInWithEthereum?.requestId,\n        resources: options?.signInWithEthereum?.resources,\n      }\n\n      message = createSiweMessage(siweMessage)\n\n      // Sign message\n      signature = (await resolvedWallet.request({\n        method: 'personal_sign',\n        params: [toHex(message), address],\n      })) as Hex\n    }\n\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/token?grant_type=web3`,\n        {\n          headers: this.headers,\n          body: {\n            chain: 'ethereum',\n            message,\n            signature,\n            ...(credentials.options?.captchaToken\n              ? { gotrue_meta_security: { captcha_token: credentials.options?.captchaToken } }\n              : null),\n          },\n          xform: _sessionResponse,\n        }\n      )\n      if (error) {\n        throw error\n      }\n      if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data: { ...data }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async signInWithSolana(credentials: SolanaWeb3Credentials) {\n    let message: string\n    let signature: Uint8Array\n\n    if ('message' in credentials) {\n      message = credentials.message\n      signature = credentials.signature\n    } else {\n      const { chain, wallet, statement, options } = credentials\n\n      let resolvedWallet: SolanaWallet\n\n      if (!isBrowser()) {\n        if (typeof wallet !== 'object' || !options?.url) {\n          throw new Error(\n            '@supabase/auth-js: Both wallet and url must be specified in non-browser environments.'\n          )\n        }\n\n        resolvedWallet = wallet\n      } else if (typeof wallet === 'object') {\n        resolvedWallet = wallet\n      } else {\n        const windowAny = window as any\n\n        if (\n          'solana' in windowAny &&\n          typeof windowAny.solana === 'object' &&\n          (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\n            ('signMessage' in windowAny.solana &&\n              typeof windowAny.solana.signMessage === 'function'))\n        ) {\n          resolvedWallet = windowAny.solana\n        } else {\n          throw new Error(\n            `@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`\n          )\n        }\n      }\n\n      const url = new URL(options?.url ?? window.location.href)\n\n      if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n        const output = await resolvedWallet.signIn({\n          issuedAt: new Date().toISOString(),\n\n          ...options?.signInWithSolana,\n\n          // non-overridable properties\n          version: '1',\n          domain: url.host,\n          uri: url.href,\n\n          ...(statement ? { statement } : null),\n        })\n\n        let outputToProcess: any\n\n        if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n          outputToProcess = output[0]\n        } else if (\n          output &&\n          typeof output === 'object' &&\n          'signedMessage' in output &&\n          'signature' in output\n        ) {\n          outputToProcess = output\n        } else {\n          throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value')\n        }\n\n        if (\n          'signedMessage' in outputToProcess &&\n          'signature' in outputToProcess &&\n          (typeof outputToProcess.signedMessage === 'string' ||\n            outputToProcess.signedMessage instanceof Uint8Array) &&\n          outputToProcess.signature instanceof Uint8Array\n        ) {\n          message =\n            typeof outputToProcess.signedMessage === 'string'\n              ? outputToProcess.signedMessage\n              : new TextDecoder().decode(outputToProcess.signedMessage)\n          signature = outputToProcess.signature\n        } else {\n          throw new Error(\n            '@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields'\n          )\n        }\n      } else {\n        if (\n          !('signMessage' in resolvedWallet) ||\n          typeof resolvedWallet.signMessage !== 'function' ||\n          !('publicKey' in resolvedWallet) ||\n          typeof resolvedWallet !== 'object' ||\n          !resolvedWallet.publicKey ||\n          !('toBase58' in resolvedWallet.publicKey) ||\n          typeof resolvedWallet.publicKey.toBase58 !== 'function'\n        ) {\n          throw new Error(\n            '@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API'\n          )\n        }\n\n        message = [\n          `${url.host} wants you to sign in with your Solana account:`,\n          resolvedWallet.publicKey.toBase58(),\n          ...(statement ? ['', statement, ''] : ['']),\n          'Version: 1',\n          `URI: ${url.href}`,\n          `Issued At: ${options?.signInWithSolana?.issuedAt ?? new Date().toISOString()}`,\n          ...(options?.signInWithSolana?.notBefore\n            ? [`Not Before: ${options.signInWithSolana.notBefore}`]\n            : []),\n          ...(options?.signInWithSolana?.expirationTime\n            ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\n            : []),\n          ...(options?.signInWithSolana?.chainId\n            ? [`Chain ID: ${options.signInWithSolana.chainId}`]\n            : []),\n          ...(options?.signInWithSolana?.nonce ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\n          ...(options?.signInWithSolana?.requestId\n            ? [`Request ID: ${options.signInWithSolana.requestId}`]\n            : []),\n          ...(options?.signInWithSolana?.resources?.length\n            ? [\n                'Resources',\n                ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\n              ]\n            : []),\n        ].join('\\n')\n\n        const maybeSignature = await resolvedWallet.signMessage(\n          new TextEncoder().encode(message),\n          'utf8'\n        )\n\n        if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n          throw new Error(\n            '@supabase/auth-js: Wallet signMessage() API returned an recognized value'\n          )\n        }\n\n        signature = maybeSignature\n      }\n    }\n\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/token?grant_type=web3`,\n        {\n          headers: this.headers,\n          body: {\n            chain: 'solana',\n            message,\n            signature: bytesToBase64URL(signature),\n\n            ...(credentials.options?.captchaToken\n              ? { gotrue_meta_security: { captcha_token: credentials.options?.captchaToken } }\n              : null),\n          },\n          xform: _sessionResponse,\n        }\n      )\n      if (error) {\n        throw error\n      }\n      if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data: { ...data }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _exchangeCodeForSession(authCode: string): Promise<\n    | {\n        data: { session: Session; user: User; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; user: null; redirectType: null }; error: AuthError }\n  > {\n    const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    const [codeVerifier, redirectType] = ((storageItem ?? '') as string).split('/')\n\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/token?grant_type=pkce`,\n        {\n          headers: this.headers,\n          body: {\n            auth_code: authCode,\n            code_verifier: codeVerifier,\n          },\n          xform: _sessionResponse,\n        }\n      )\n      await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n      if (error) {\n        throw error\n      }\n      if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null, redirectType: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data: { ...data, redirectType: redirectType ?? null }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Allows signing in with an OIDC ID token. The authentication provider used\n   * should be enabled and configured.\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthTokenResponse> {\n    try {\n      const { options, provider, token, access_token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          access_token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   *\n   * Do note that you will need to configure a Whatsapp sender on Twilio\n   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n   * channel is not supported on other providers\n   * at this time.\n   * This method supports PKCE when an email is passed.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthOtpResponse> {\n    try {\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            channel: options?.channel ?? 'sms',\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      let redirectTo: string | undefined = undefined\n      let captchaToken: string | undefined = undefined\n      if ('options' in params) {\n        redirectTo = params.options?.redirectTo\n        captchaToken = params.options?.captchaToken\n      }\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: captchaToken },\n        },\n        redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw new Error('An error occurred on token verification.')\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        await this._notifyAllSubscribers(\n          params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN',\n          session\n        )\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      let codeChallenge: string | null = null\n      let codeChallengeMethod: string | null = null\n      if (this.flowType === 'pkce') {\n        ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n          this.storage,\n          this.storageKey\n        )\n      }\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Sends a reauthentication OTP to the user's email or phone number.\n   * Requires the user to be signed-in.\n   */\n  async reauthenticate(): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._reauthenticate()\n    })\n  }\n\n  private async _reauthenticate(): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) throw sessionError\n        if (!session) throw new AuthSessionMissingError()\n\n        const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n          headers: this.headers,\n          jwt: session.access_token,\n        })\n        return { data: { user: null, session: null }, error }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n   */\n  async resend(credentials: ResendParams): Promise<AuthOtpResponse> {\n    try {\n      const endpoint = `${this.url}/resend`\n      if ('email' in credentials) {\n        const { email, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            email,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      } else if ('phone' in credentials) {\n        const { phone, type, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            phone,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError(\n        'You must provide either an email or phone number and a type'\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   *\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   *\n   * **IMPORTANT:** This method loads values directly from the storage attached\n   * to the client. If that storage is based on request cookies for example,\n   * the values in it may not be authentic and therefore it's strongly advised\n   * against using this method and its results in such circumstances. A warning\n   * will be emitted if this is detected. Use {@link #getUser()} instead.\n   */\n  async getSession() {\n    await this.initializePromise\n\n    const result = await this._acquireLock(-1, async () => {\n      return this._useSession(async (result) => {\n        return result\n      })\n    })\n\n    return result\n  }\n\n  /**\n   * Acquires a global lock based on the storage key.\n   */\n  private async _acquireLock<R>(acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n    this._debug('#_acquireLock', 'begin', acquireTimeout)\n\n    try {\n      if (this.lockAcquired) {\n        const last = this.pendingInLock.length\n          ? this.pendingInLock[this.pendingInLock.length - 1]\n          : Promise.resolve()\n\n        const result = (async () => {\n          await last\n          return await fn()\n        })()\n\n        this.pendingInLock.push(\n          (async () => {\n            try {\n              await result\n            } catch (e: any) {\n              // we just care if it finished\n            }\n          })()\n        )\n\n        return result\n      }\n\n      return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n        this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey)\n\n        try {\n          this.lockAcquired = true\n\n          const result = fn()\n\n          this.pendingInLock.push(\n            (async () => {\n              try {\n                await result\n              } catch (e: any) {\n                // we just care if it finished\n              }\n            })()\n          )\n\n          await result\n\n          // keep draining the queue until there's nothing to wait on\n          while (this.pendingInLock.length) {\n            const waitOn = [...this.pendingInLock]\n\n            await Promise.all(waitOn)\n\n            this.pendingInLock.splice(0, waitOn.length)\n          }\n\n          return await result\n        } finally {\n          this._debug('#_acquireLock', 'lock released for storage key', this.storageKey)\n\n          this.lockAcquired = false\n        }\n      })\n    } finally {\n      this._debug('#_acquireLock', 'end')\n    }\n  }\n\n  /**\n   * Use instead of {@link #getSession} inside the library. It is\n   * semantically usually what you want, as getting a session involves some\n   * processing afterwards that requires only one client operating on the\n   * session at once across multiple tabs or processes.\n   */\n  private async _useSession<R>(\n    fn: (\n      result:\n        | {\n            data: {\n              session: Session\n            }\n            error: null\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: AuthError\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: null\n          }\n    ) => Promise<R>\n  ): Promise<R> {\n    this._debug('#_useSession', 'begin')\n\n    try {\n      // the use of __loadSession here is the only correct use of the function!\n      const result = await this.__loadSession()\n\n      return await fn(result)\n    } finally {\n      this._debug('#_useSession', 'end')\n    }\n  }\n\n  /**\n   * NEVER USE DIRECTLY!\n   *\n   * Always use {@link #_useSession}.\n   */\n  private async __loadSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    this._debug('#__loadSession()', 'begin')\n\n    if (!this.lockAcquired) {\n      this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack)\n    }\n\n    try {\n      let currentSession: Session | null = null\n\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      this._debug('#getSession()', 'session from storage', maybeSession)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          this._debug('#getSession()', 'session from storage is not valid')\n          await this._removeSession()\n        }\n      }\n\n      if (!currentSession) {\n        return { data: { session: null }, error: null }\n      }\n\n      // A session is considered expired before the access token _actually_\n      // expires. When the autoRefreshToken option is off (or when the tab is\n      // in the background), very eager users of getSession() -- like\n      // realtime-js -- might send a valid JWT which will expire by the time it\n      // reaches the server.\n      const hasExpired = currentSession.expires_at\n        ? currentSession.expires_at * 1000 - Date.now() < EXPIRY_MARGIN_MS\n        : false\n\n      this._debug(\n        '#__loadSession()',\n        `session has${hasExpired ? '' : ' not'} expired`,\n        'expires_at',\n        currentSession.expires_at\n      )\n\n      if (!hasExpired) {\n        if (this.userStorage) {\n          const maybeUser: { user?: User | null } | null = (await getItemAsync(\n            this.userStorage,\n            this.storageKey + '-user'\n          )) as any\n\n          if (maybeUser?.user) {\n            currentSession.user = maybeUser.user\n          } else {\n            currentSession.user = userNotAvailableProxy()\n          }\n        }\n\n        if (this.storage.isServer && currentSession.user) {\n          let suppressWarning = this.suppressGetSessionWarning\n          const proxySession: Session = new Proxy(currentSession, {\n            get: (target: any, prop: string, receiver: any) => {\n              if (!suppressWarning && prop === 'user') {\n                // only show warning when the user object is being accessed from the server\n                console.warn(\n                  'Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.'\n                )\n                suppressWarning = true // keeps this proxy instance from logging additional warnings\n                this.suppressGetSessionWarning = true // keeps this client's future proxy instances from warning\n              }\n              return Reflect.get(target, prop, receiver)\n            },\n          })\n          currentSession = proxySession\n        }\n\n        return { data: { session: currentSession }, error: null }\n      }\n\n      const { data: session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { session: null }, error }\n      }\n\n      return { data: { session }, error: null }\n    } finally {\n      this._debug('#__loadSession()', 'end')\n    }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session. This method\n   * performs a network request to the Supabase Auth server, so the returned\n   * value is authentic and can be used to base authorization rules on.\n   *\n   * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    if (jwt) {\n      return await this._getUser(jwt)\n    }\n\n    await this.initializePromise\n\n    const result = await this._acquireLock(-1, async () => {\n      return await this._getUser()\n    })\n\n    return result\n  }\n\n  private async _getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (jwt) {\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: jwt,\n          xform: _userResponse,\n        })\n      }\n\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n\n        // returns an error if there is no access_token or custom authorization header\n        if (!data.session?.access_token && !this.hasCustomAuthorizationHeader) {\n          return { data: { user: null }, error: new AuthSessionMissingError() }\n        }\n\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n          xform: _userResponse,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        if (isAuthSessionMissingError(error)) {\n          // JWT contains a `session_id` which does not correspond to an active\n          // session in the database, indicating the user is signed out.\n\n          await this._removeSession()\n          await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n        }\n\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._updateUser(attributes, options)\n    })\n  }\n\n  protected async _updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          throw sessionError\n        }\n        if (!sessionData.session) {\n          throw new AuthSessionMissingError()\n        }\n        const session: Session = sessionData.session\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce' && attributes.email != null) {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n\n        const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            ...attributes,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          jwt: session.access_token,\n          xform: _userResponse,\n        })\n        if (userError) throw userError\n        session.user = data.user as User\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('USER_UPDATED', session)\n        return { data: { user: session.user }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._setSession(currentSession)\n    })\n  }\n\n  protected async _setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const { payload } = decodeJWT(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { data: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this._getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._refreshSession(currentSession)\n    })\n  }\n\n  protected async _refreshSession(currentSession?: {\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        if (!currentSession) {\n          const { data, error } = result\n          if (error) {\n            throw error\n          }\n\n          currentSession = data.session ?? undefined\n        }\n\n        if (!currentSession?.refresh_token) {\n          throw new AuthSessionMissingError()\n        }\n\n        const { data: session, error } = await this._callRefreshToken(currentSession.refresh_token)\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!session) {\n          return { data: { user: null, session: null }, error: null }\n        }\n\n        return { data: { user: session.user, session }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromURL(\n    params: { [parameter: string]: string },\n    callbackUrlType: string\n  ): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n\n      // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n      if (params.error || params.error_description || params.error_code) {\n        // The error class returned implies that the redirect is from an implicit grant flow\n        // but it could also be from a redirect error from a PKCE flow.\n        throw new AuthImplicitGrantRedirectError(\n          params.error_description || 'Error in URL with unspecified error_description',\n          {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code',\n          }\n        )\n      }\n\n      // Checks for mismatches between the flowType initialised in the client and the URL parameters\n      switch (callbackUrlType) {\n        case 'implicit':\n          if (this.flowType === 'pkce') {\n            throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.')\n          }\n          break\n        case 'pkce':\n          if (this.flowType === 'implicit') {\n            throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n          }\n          break\n        default:\n        // there's no mismatch so we continue\n      }\n\n      // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n      if (callbackUrlType === 'pkce') {\n        this._debug('#_initialize()', 'begin', 'is PKCE flow', true)\n        if (!params.code) throw new AuthPKCEGrantCodeExchangeError('No code detected.')\n        const { data, error } = await this._exchangeCodeForSession(params.code)\n        if (error) throw error\n\n        const url = new URL(window.location.href)\n        url.searchParams.delete('code')\n\n        window.history.replaceState(window.history.state, '', url.toString())\n\n        return { data: { session: data.session, redirectType: null }, error: null }\n      }\n\n      const {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        refresh_token,\n        expires_in,\n        expires_at,\n        token_type,\n      } = params\n\n      if (!access_token || !expires_in || !refresh_token || !token_type) {\n        throw new AuthImplicitGrantRedirectError('No session defined in URL')\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = parseInt(expires_in)\n      let expiresAt = timeNow + expiresIn\n\n      if (expires_at) {\n        expiresAt = parseInt(expires_at)\n      }\n\n      const actuallyExpiresIn = expiresAt - timeNow\n      if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION_MS) {\n        console.warn(\n          `@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`\n        )\n      }\n\n      const issuedAt = expiresAt - expiresIn\n      if (timeNow - issuedAt >= 120) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      } else if (timeNow - issuedAt < 0) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      }\n\n      const { data, error } = await this._getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: expiresIn,\n        expires_at: expiresAt,\n        refresh_token,\n        token_type: token_type as 'bearer',\n        user: data.user,\n      }\n\n      // Remove tokens from URL\n      window.location.hash = ''\n      this._debug('#_getSessionFromURL()', 'clearing window.location.hash')\n\n      return { data: { session, redirectType: params.type }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantCallback(params: { [parameter: string]: string }): boolean {\n    return Boolean(params.access_token || params.error_description)\n  }\n\n  /**\n   * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n   */\n  private async _isPKCECallback(params: { [parameter: string]: string }): Promise<boolean> {\n    const currentStorageContent = await getItemAsync(\n      this.storage,\n      `${this.storageKey}-code-verifier`\n    )\n\n    return !!(params.code && currentStorageContent)\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   *\n   * If using `others` scope, no `SIGNED_OUT` event is fired!\n   */\n  async signOut(options: SignOut = { scope: 'global' }): Promise<{ error: AuthError | null }> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._signOut(options)\n    })\n  }\n\n  protected async _signOut(\n    { scope }: SignOut = { scope: 'global' }\n  ): Promise<{ error: AuthError | null }> {\n    return await this._useSession(async (result) => {\n      const { data, error: sessionError } = result\n      if (sessionError) {\n        return { error: sessionError }\n      }\n      const accessToken = data.session?.access_token\n      if (accessToken) {\n        const { error } = await this.admin.signOut(accessToken, scope)\n        if (error) {\n          // ignore 404s since user might not exist anymore\n          // ignore 401s since an invalid or expired JWT should sign out the current session\n          if (\n            !(\n              isAuthApiError(error) &&\n              (error.status === 404 || error.status === 401 || error.status === 403)\n            )\n          ) {\n            return { error }\n          }\n        }\n      }\n      if (scope !== 'others') {\n        await this._removeSession()\n        await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n      }\n      return { error: null }\n    })\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * Safe to use without an async function as callback.\n   *\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: { subscription: Subscription }\n  }\n\n  /**\n   * Avoid using an async function inside `onAuthStateChange` as you might end\n   * up with a deadlock. The callback function runs inside an exclusive lock,\n   * so calling other Supabase Client APIs that also try to acquire the\n   * exclusive lock, might cause a deadlock. This behavior is observable across\n   * tabs. In the next major library version, this behavior will not be supported.\n   *\n   * Receive a notification every time an auth event happens.\n   *\n   * @param callback A callback function to be invoked when an auth event happens.\n   * @deprecated Due to the possibility of deadlocks with async functions as callbacks, use the version without an async function.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => Promise<void>): {\n    data: { subscription: Subscription }\n  }\n\n  onAuthStateChange(\n    callback: (event: AuthChangeEvent, session: Session | null) => void | Promise<void>\n  ): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this._debug('#unsubscribe()', 'state change callback with id removed', id)\n\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this._debug('#onAuthStateChange()', 'registered callback with id', id)\n\n    this.stateChangeEmitters.set(id, subscription)\n    ;(async () => {\n      await this.initializePromise\n\n      await this._acquireLock(-1, async () => {\n        this._emitInitialSession(id)\n      })\n    })()\n\n    return { data: { subscription } }\n  }\n\n  private async _emitInitialSession(id: string): Promise<void> {\n    return await this._useSession(async (result) => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = result\n        if (error) throw error\n\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', session)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'session', session)\n      } catch (err) {\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', null)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'error', err)\n        console.error(err)\n      }\n    })\n  }\n\n  /**\n   * Sends a password reset request to an email address. This method supports the PKCE flow.\n   *\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    let codeChallenge: string | null = null\n    let codeChallengeMethod: string | null = null\n\n    if (this.flowType === 'pkce') {\n      ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n        this.storage,\n        this.storageKey,\n        true // isPasswordRecovery\n      )\n    }\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: {\n          email,\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets all the identities linked to a user.\n   */\n  async getUserIdentities(): Promise<\n    | {\n        data: {\n          identities: UserIdentity[]\n        }\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      const { data, error } = await this.getUser()\n      if (error) throw error\n      return { data: { identities: data.user.identities ?? [] }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Links an oauth identity to an existing user.\n   * This method supports the PKCE flow.\n   */\n  async linkIdentity(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse>\n\n  /**\n   * Links an OIDC identity to an existing user.\n   */\n  async linkIdentity(credentials: SignInWithIdTokenCredentials): Promise<AuthTokenResponse>\n\n  async linkIdentity(credentials: any): Promise<any> {\n    if ('token' in credentials) {\n      return this.linkIdentityIdToken(credentials)\n    }\n\n    return this.linkIdentityOAuth(credentials)\n  }\n\n  private async linkIdentityOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    try {\n      const { data, error } = await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) throw error\n        const url: string = await this._getUrlForProvider(\n          `${this.url}/user/identities/authorize`,\n          credentials.provider,\n          {\n            redirectTo: credentials.options?.redirectTo,\n            scopes: credentials.options?.scopes,\n            queryParams: credentials.options?.queryParams,\n            skipBrowserRedirect: true,\n          }\n        )\n        return await _request(this.fetch, 'GET', url, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n        })\n      })\n      if (error) throw error\n      if (isBrowser() && !credentials.options?.skipBrowserRedirect) {\n        window.location.assign(data?.url)\n      }\n      return { data: { provider: credentials.provider, url: data?.url }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { provider: credentials.provider, url: null }, error }\n      }\n      throw error\n    }\n  }\n\n  private async linkIdentityIdToken(\n    credentials: SignInWithIdTokenCredentials\n  ): Promise<AuthTokenResponse> {\n    return await this._useSession(async (result) => {\n      try {\n        const {\n          error: sessionError,\n          data: { session },\n        } = result\n        if (sessionError) throw sessionError\n\n        const { options, provider, token, access_token, nonce } = credentials\n\n        const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n          headers: this.headers,\n          jwt: session?.access_token ?? undefined,\n          body: {\n            provider,\n            id_token: token,\n            access_token,\n            nonce,\n            link_identity: true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n\n        const { data, error } = res\n        if (error) {\n          return { data: { user: null, session: null }, error }\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: { user: null, session: null },\n            error: new AuthInvalidTokenResponseError(),\n          }\n        }\n        if (data.session) {\n          await this._saveSession(data.session)\n          await this._notifyAllSubscribers('USER_UPDATED', data.session)\n        }\n        return { data, error }\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: { user: null, session: null }, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n   */\n  async unlinkIdentity(identity: UserIdentity): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n        return await _request(\n          this.fetch,\n          'DELETE',\n          `${this.url}/user/identities/${identity.identity_id}`,\n          {\n            headers: this.headers,\n            jwt: data.session?.access_token ?? undefined,\n          }\n        )\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`\n    this._debug(debugName, 'begin')\n\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          if (attempt > 0) {\n            await sleep(200 * Math.pow(2, attempt - 1)) // 200, 400, 800, ...\n          }\n\n          this._debug(debugName, 'refreshing attempt', attempt)\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt)\n          return (\n            error &&\n            isAuthRetryableFetchError(error) &&\n            // retryable only if the request can be sent before the backoff overflows the tick duration\n            Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION_MS\n          )\n        }\n      )\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private async _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const url: string = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n\n    this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url)\n\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes the token\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    const debugName = '#_recoverAndRefresh()'\n    this._debug(debugName, 'begin')\n\n    try {\n      const currentSession = (await getItemAsync(this.storage, this.storageKey)) as Session | null\n\n      if (currentSession && this.userStorage) {\n        let maybeUser: { user: User | null } | null = (await getItemAsync(\n          this.userStorage,\n          this.storageKey + '-user'\n        )) as any\n\n        if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n          // storage and userStorage are the same storage medium, for example\n          // window.localStorage if userStorage does not have the user from\n          // storage stored, store it first thereby migrating the user object\n          // from storage -> userStorage\n\n          maybeUser = { user: currentSession.user }\n          await setItemAsync(this.userStorage, this.storageKey + '-user', maybeUser)\n        }\n\n        currentSession.user = maybeUser?.user ?? userNotAvailableProxy()\n      } else if (currentSession && !currentSession.user) {\n        // user storage is not set, let's check if it was previously enabled so\n        // we bring back the storage as it should be\n\n        if (!currentSession.user) {\n          // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n          const separateUser: { user: User | null } | null = (await getItemAsync(\n            this.storage,\n            this.storageKey + '-user'\n          )) as any\n\n          if (separateUser && separateUser?.user) {\n            currentSession.user = separateUser.user\n\n            await removeItemAsync(this.storage, this.storageKey + '-user')\n            await setItemAsync(this.storage, this.storageKey, currentSession)\n          } else {\n            currentSession.user = userNotAvailableProxy()\n          }\n        }\n      }\n\n      this._debug(debugName, 'session from storage', currentSession)\n\n      if (!this._isValidSession(currentSession)) {\n        this._debug(debugName, 'session is not valid')\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const expiresWithMargin =\n        (currentSession.expires_at ?? Infinity) * 1000 - Date.now() < EXPIRY_MARGIN_MS\n\n      this._debug(\n        debugName,\n        `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN_MS}s`\n      )\n\n      if (expiresWithMargin) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.error(error)\n\n            if (!isAuthRetryableFetchError(error)) {\n              this._debug(\n                debugName,\n                'refresh failed with a non-retryable error, removing the session',\n                error\n              )\n              await this._removeSession()\n            }\n          }\n        }\n      } else if (\n        currentSession.user &&\n        (currentSession.user as any).__isUserNotAvailableProxy === true\n      ) {\n        // If we have a proxy user, try to get the real user data\n        try {\n          const { data, error: userError } = await this._getUser(currentSession.access_token)\n\n          if (!userError && data?.user) {\n            currentSession.user = data.user\n            await this._saveSession(currentSession)\n            await this._notifyAllSubscribers('SIGNED_IN', currentSession)\n          } else {\n            this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification')\n          }\n        } catch (getUserError) {\n          console.error('Error getting user data:', getUserError)\n          this._debug(\n            debugName,\n            'error getting user data, skipping SIGNED_IN notification',\n            getUserError\n          )\n        }\n      } else {\n        // no need to persist currentSession again, as we just loaded it from\n        // local storage; persisting it again may overwrite a value saved by\n        // another client with access to the same local storage\n        await this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      this._debug(debugName, 'error', err)\n\n      console.error(err)\n      return\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    if (!refreshToken) {\n      throw new AuthSessionMissingError()\n    }\n\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`\n\n    this._debug(debugName, 'begin')\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { data: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        const result = { data: null, error }\n\n        if (!isAuthRetryableFetchError(error)) {\n          await this._removeSession()\n        }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _notifyAllSubscribers(\n    event: AuthChangeEvent,\n    session: Session | null,\n    broadcast = true\n  ) {\n    const debugName = `#_notifyAllSubscribers(${event})`\n    this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`)\n\n    try {\n      if (this.broadcastChannel && broadcast) {\n        this.broadcastChannel.postMessage({ event, session })\n      }\n\n      const errors: any[] = []\n      const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n        try {\n          await x.callback(event, session)\n        } catch (e: any) {\n          errors.push(e)\n        }\n      })\n\n      await Promise.all(promises)\n\n      if (errors.length > 0) {\n        for (let i = 0; i < errors.length; i += 1) {\n          console.error(errors[i])\n        }\n\n        throw errors[0]\n      }\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    this._debug('#_saveSession()', session)\n    // _saveSession is always called whenever a new session has been acquired\n    // so we can safely suppress the warning returned by future getSession calls\n    this.suppressGetSessionWarning = true\n\n    // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n    const sessionToProcess = { ...session }\n\n    const userIsProxy =\n      sessionToProcess.user && (sessionToProcess.user as any).__isUserNotAvailableProxy === true\n    if (this.userStorage) {\n      if (!userIsProxy && sessionToProcess.user) {\n        // If it's a real user object, save it to userStorage.\n        await setItemAsync(this.userStorage, this.storageKey + '-user', {\n          user: sessionToProcess.user,\n        })\n      } else if (userIsProxy) {\n        // If it's the proxy, it means user was not found in userStorage.\n        // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n        // or simply not save the proxy. For now, we don't save the proxy here.\n        // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n      }\n\n      // Prepare the main session data for primary storage: remove the user property before cloning\n      // This is important because the original session.user might be the proxy\n      const mainSessionData: Omit<Session, 'user'> & { user?: User } = { ...sessionToProcess }\n      delete mainSessionData.user // Remove user (real or proxy) before cloning for main storage\n\n      const clonedMainSessionData = deepClone(mainSessionData)\n      await setItemAsync(this.storage, this.storageKey, clonedMainSessionData)\n    } else {\n      // No userStorage is configured.\n      // In this case, session.user should ideally not be a proxy.\n      // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n      const clonedSession = deepClone(sessionToProcess) // sessionToProcess still has its original user property\n      await setItemAsync(this.storage, this.storageKey, clonedSession)\n    }\n  }\n\n  private async _removeSession() {\n    this._debug('#_removeSession()')\n\n    await removeItemAsync(this.storage, this.storageKey)\n    await removeItemAsync(this.storage, this.storageKey + '-code-verifier')\n    await removeItemAsync(this.storage, this.storageKey + '-user')\n\n    if (this.userStorage) {\n      await removeItemAsync(this.userStorage, this.storageKey + '-user')\n    }\n\n    await this._notifyAllSubscribers('SIGNED_OUT', null)\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    this._debug('#_removeVisibilityChangedCallback()')\n\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    this._debug('#_startAutoRefresh()')\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION_MS)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n      // @ts-expect-error TS has no context of Deno\n    } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n      // similar like for NodeJS, but with the Deno API\n      // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n      // @ts-expect-error TS has no context of Deno\n      Deno.unrefTimer(ticker)\n    }\n\n    // run the tick immediately, but in the next pass of the event loop so that\n    // #_initialize can be allowed to complete without recursively waiting on\n    // itself\n    setTimeout(async () => {\n      await this.initializePromise\n      await this._autoRefreshTokenTick()\n    }, 0)\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    this._debug('#_stopAutoRefresh()')\n\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desirable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    this._debug('#_autoRefreshTokenTick()', 'begin')\n\n    try {\n      await this._acquireLock(0, async () => {\n        try {\n          const now = Date.now()\n\n          try {\n            return await this._useSession(async (result) => {\n              const {\n                data: { session },\n              } = result\n\n              if (!session || !session.refresh_token || !session.expires_at) {\n                this._debug('#_autoRefreshTokenTick()', 'no session')\n                return\n              }\n\n              // session will expire in this many ticks (or has already expired if <= 0)\n              const expiresInTicks = Math.floor(\n                (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION_MS\n              )\n\n              this._debug(\n                '#_autoRefreshTokenTick()',\n                `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`\n              )\n\n              if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                await this._callRefreshToken(session.refresh_token)\n              }\n            })\n          } catch (e: any) {\n            console.error(\n              'Auto refresh tick failed with error. This is likely a transient error.',\n              e\n            )\n          }\n        } finally {\n          this._debug('#_autoRefreshTokenTick()', 'end')\n        }\n      })\n    } catch (e: any) {\n      if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n        this._debug('auto refresh token tick lock not available')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    this._debug('#_handleVisibilityChange()')\n\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(calledFromInitialize: boolean) {\n    const methodName = `#_onVisibilityChanged(${calledFromInitialize})`\n    this._debug(methodName, 'visibilityState', document.visibilityState)\n\n    if (document.visibilityState === 'visible') {\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n\n      if (!calledFromInitialize) {\n        // called when the visibility has changed, i.e. the browser\n        // transitioned from hidden -> visible so we need to see if the session\n        // should be recovered immediately... but to do that we need to acquire\n        // the lock first asynchronously\n        await this.initializePromise\n\n        await this._acquireLock(-1, async () => {\n          if (document.visibilityState !== 'visible') {\n            this._debug(\n              methodName,\n              'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting'\n            )\n\n            // visibility has changed while waiting for the lock, abort\n            return\n          }\n\n          // recover the session\n          await this._recoverAndRefresh()\n        })\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private async _getUrlForProvider(\n    url: string,\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (this.flowType === 'pkce') {\n      const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n        this.storage,\n        this.storageKey\n      )\n\n      const flowParams = new URLSearchParams({\n        code_challenge: `${encodeURIComponent(codeChallenge)}`,\n        code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n      })\n      urlParams.push(flowParams.toString())\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n    if (options?.skipBrowserRedirect) {\n      urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`)\n    }\n\n    return `${url}?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollTOTPParams): Promise<AuthMFAEnrollTOTPResponse>\n  private async _enroll(params: MFAEnrollPhoneParams): Promise<AuthMFAEnrollPhoneResponse>\n  private async _enroll(params: MFAEnrollWebauthnParams): Promise<AuthMFAEnrollWebauthnResponse>\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        const body = {\n          friendly_name: params.friendlyName,\n          factor_type: params.factorType,\n          ...(params.factorType === 'phone'\n            ? { phone: params.phone }\n            : params.factorType === 'totp'\n              ? { issuer: params.issuer }\n              : {}),\n        }\n\n        const { data, error } = (await _request(this.fetch, 'POST', `${this.url}/factors`, {\n          body,\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })) as AuthMFAEnrollResponse\n        if (error) {\n          return { data: null, error }\n        }\n\n        if (params.factorType === 'totp' && data.type === 'totp' && data?.totp?.qr_code) {\n          data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n        }\n\n        return { data, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyTOTPParams): Promise<AuthMFAVerifyResponse>\n  private async _verify(params: MFAVerifyPhoneParams): Promise<AuthMFAVerifyResponse>\n  private async _verify<T extends 'create' | 'request'>(\n    params: MFAVerifyWebauthnParams<T>\n  ): Promise<AuthMFAVerifyResponse>\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          const body: StrictOmit<\n            | Exclude<MFAVerifyParams, MFAVerifyWebauthnParams>\n            /** Exclude out the webauthn params from here because we're going to need to serialize them in the response */\n            | Prettify<\n                StrictOmit<MFAVerifyWebauthnParams, 'webauthn'> & {\n                  webauthn: Prettify<\n                    StrictOmit<MFAVerifyWebauthnParamFields['webauthn'], 'credential_response'> & {\n                      credential_response: PublicKeyCredentialJSON\n                    }\n                  >\n                }\n              >,\n            /*  Exclude challengeId because the backend expects snake_case, and exclude factorId since it's passed in the path params */\n            'challengeId' | 'factorId'\n          > & {\n            challenge_id: string\n          } = {\n            challenge_id: params.challengeId,\n            ...('webauthn' in params\n              ? {\n                  webauthn: {\n                    ...params.webauthn,\n                    credential_response:\n                      params.webauthn.type === 'create'\n                        ? serializeCredentialCreationResponse(\n                            params.webauthn.credential_response as RegistrationCredential\n                          )\n                        : serializeCredentialRequestResponse(\n                            params.webauthn.credential_response as AuthenticationCredential\n                          ),\n                  },\n                }\n              : { code: params.code }),\n          }\n\n          const { data, error } = await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/verify`,\n            {\n              body,\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n          if (error) {\n            return { data: null, error }\n          }\n\n          await this._saveSession({\n            expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n            ...data,\n          })\n          await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n          return { data, error }\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(\n    params: MFAChallengeTOTPParams\n  ): Promise<Prettify<AuthMFAChallengeTOTPResponse>>\n  private async _challenge(\n    params: MFAChallengePhoneParams\n  ): Promise<Prettify<AuthMFAChallengePhoneResponse>>\n  private async _challenge(\n    params: MFAChallengeWebauthnParams\n  ): Promise<Prettify<AuthMFAChallengeWebauthnResponse>>\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          const response = (await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/challenge`,\n            {\n              body: params,\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )) as\n            | Exclude<AuthMFAChallengeResponse, AuthMFAChallengeWebauthnResponse>\n            /** The server will send `serialized` data, so we assert the serialized response */\n            | AuthMFAChallengeWebauthnServerResponse\n\n          if (response.error) {\n            return response\n          }\n\n          const { data } = response\n\n          if (data.type !== 'webauthn') {\n            return { data, error: null }\n          }\n\n          switch (data.webauthn.type) {\n            case 'create':\n              return {\n                data: {\n                  ...data,\n                  webauthn: {\n                    ...data.webauthn,\n                    credential_options: {\n                      ...data.webauthn.credential_options,\n                      publicKey: deserializeCredentialCreationOptions(\n                        data.webauthn.credential_options.publicKey\n                      ),\n                    },\n                  },\n                },\n                error: null,\n              }\n            case 'request':\n              return {\n                data: {\n                  ...data,\n                  webauthn: {\n                    ...data.webauthn,\n                    credential_options: {\n                      ...data.webauthn.credential_options,\n                      publicKey: deserializeCredentialRequestOptions(\n                        data.webauthn.credential_options.publicKey\n                      ),\n                    },\n                  },\n                },\n                error: null,\n              }\n          }\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    // both _challenge and _verify independently acquire the lock, so no need\n    // to acquire it here\n\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    // use #getUser instead of #_getUser as the former acquires a lock\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const data: AuthMFAListFactorsResponse['data'] = {\n      all: [],\n      phone: [],\n      totp: [],\n      webauthn: [],\n    }\n\n    // loop over the factors ONCE\n    for (const factor of user?.factors ?? []) {\n      data.all.push(factor)\n      if (factor.status === 'verified') {\n        ;(data[factor.factor_type] as (typeof factor)[]).push(factor)\n      }\n    }\n\n    return {\n      data,\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    return this._acquireLock(-1, async () => {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n        if (!session) {\n          return {\n            data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n            error: null,\n          }\n        }\n\n        const { payload } = decodeJWT(session.access_token)\n\n        let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n        if (payload.aal) {\n          currentLevel = payload.aal\n        }\n\n        let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n        const verifiedFactors =\n          session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n        if (verifiedFactors.length > 0) {\n          nextLevel = 'aal2'\n        }\n\n        const currentAuthenticationMethods = payload.amr || []\n\n        return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n      })\n    })\n  }\n\n  private async fetchJwk(kid: string, jwks: { keys: JWK[] } = { keys: [] }): Promise<JWK | null> {\n    // try fetching from the supplied jwks\n    let jwk = jwks.keys.find((key) => key.kid === kid)\n    if (jwk) {\n      return jwk\n    }\n\n    const now = Date.now()\n\n    // try fetching from cache\n    jwk = this.jwks.keys.find((key) => key.kid === kid)\n\n    // jwk exists and jwks isn't stale\n    if (jwk && this.jwks_cached_at + JWKS_TTL > now) {\n      return jwk\n    }\n    // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n    const { data, error } = await _request(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n      headers: this.headers,\n    })\n    if (error) {\n      throw error\n    }\n    if (!data.keys || data.keys.length === 0) {\n      return null\n    }\n\n    this.jwks = data\n    this.jwks_cached_at = now\n\n    // Find the signing key\n    jwk = data.keys.find((key: any) => key.kid === kid)\n    if (!jwk) {\n      return null\n    }\n    return jwk\n  }\n\n  /**\n   * Extracts the JWT claims present in the access token by first verifying the\n   * JWT against the server's JSON Web Key Set endpoint\n   * `/.well-known/jwks.json` which is often cached, resulting in significantly\n   * faster responses. Prefer this method over {@link #getUser} which always\n   * sends a request to the Auth server for each JWT.\n   *\n   * If the project is not using an asymmetric JWT signing key (like ECC or\n   * RSA) it always sends a request to the Auth server (similar to {@link\n   * #getUser}) to verify the JWT.\n   *\n   * @param jwt An optional specific JWT you wish to verify, not the one you\n   *            can obtain from {@link #getSession}.\n   * @param options Various additional options that allow you to customize the\n   *                behavior of this method.\n   */\n  async getClaims(\n    jwt?: string,\n    options: {\n      /**\n       * @deprecated Please use options.jwks instead.\n       */\n      keys?: JWK[]\n\n      /** If set to `true` the `exp` claim will not be validated against the current time. */\n      allowExpired?: boolean\n\n      /** If set, this JSON Web Key Set is going to have precedence over the cached value available on the server. */\n      jwks?: { keys: JWK[] }\n    } = {}\n  ): Promise<\n    | {\n        data: { claims: JwtPayload; header: JwtHeader; signature: Uint8Array }\n        error: null\n      }\n    | { data: null; error: AuthError }\n    | { data: null; error: null }\n  > {\n    try {\n      let token = jwt\n      if (!token) {\n        const { data, error } = await this.getSession()\n        if (error || !data.session) {\n          return { data: null, error }\n        }\n        token = data.session.access_token\n      }\n\n      const {\n        header,\n        payload,\n        signature,\n        raw: { header: rawHeader, payload: rawPayload },\n      } = decodeJWT(token)\n\n      if (!options?.allowExpired) {\n        // Reject expired JWTs should only happen if jwt argument was passed\n        validateExp(payload.exp)\n      }\n\n      const signingKey =\n        !header.alg ||\n        header.alg.startsWith('HS') ||\n        !header.kid ||\n        !('crypto' in globalThis && 'subtle' in globalThis.crypto)\n          ? null\n          : await this.fetchJwk(header.kid, options?.keys ? { keys: options.keys } : options?.jwks)\n\n      // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n      if (!signingKey) {\n        const { error } = await this.getUser(token)\n        if (error) {\n          throw error\n        }\n        // getUser succeeds so the claims in the JWT can be trusted\n        return {\n          data: {\n            claims: payload,\n            header,\n            signature,\n          },\n          error: null,\n        }\n      }\n\n      const algorithm = getAlgorithm(header.alg)\n\n      // Convert JWK to CryptoKey\n      const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\n        'verify',\n      ])\n\n      // Verify the signature\n      const isValid = await crypto.subtle.verify(\n        algorithm,\n        publicKey,\n        signature,\n        stringToUint8Array(`${rawHeader}.${rawPayload}`)\n      )\n\n      if (!isValid) {\n        throw new AuthInvalidJwtError('Invalid JWT signature')\n      }\n\n      // If verification succeeds, decode and return claims\n      return {\n        data: {\n          claims: payload,\n          header,\n          signature,\n        },\n        error: null,\n      }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 14020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14025, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/AuthAdminApi.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\n\nconst AuthAdminApi = GoTrueAdminApi\n\nexport default AuthAdminApi\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,eAAe,4KAAA,CAAA,UAAc;uCAEpB"}},
    {"offset": {"line": 14034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14039, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/AuthClient.ts"],"sourcesContent":["import GoTrueClient from './GoTrueClient'\n\nconst AuthClient = GoTrueClient\n\nexport default AuthClient\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,aAAa,0KAAA,CAAA,UAAY;uCAEhB"}},
    {"offset": {"line": 14048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14053, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/auth-js/src/index.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport GoTrueClient from './GoTrueClient'\nimport AuthAdminApi from './AuthAdminApi'\nimport AuthClient from './AuthClient'\nexport { GoTrueAdminApi, GoTrueClient, AuthAdminApi, AuthClient }\nexport * from './lib/types'\nexport * from './lib/errors'\nexport {\n  navigatorLock,\n  NavigatorLockAcquireTimeoutError,\n  internals as lockInternals,\n  processLock,\n} from './lib/locks'\n"],"names":[],"mappings":""}},
    {"offset": {"line": 14063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14093, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts"],"sourcesContent":["import { AuthClient } from '@supabase/auth-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends AuthClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAGM,MAAO,2BAA2B,iNAAA,CAAA,aAAU;IAChD,YAAY,OAAkC,CAAA;QAC5C,KAAK,CAAC;IACR"}},
    {"offset": {"line": 14105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14110, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/SupabaseClient.ts"],"sourcesContent":["import { FunctionsClient } from '@supabase/functions-js'\nimport { AuthChangeEvent } from '@supabase/auth-js'\nimport {\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n} from '@supabase/postgrest-js'\nimport {\n  RealtimeChannel,\n  RealtimeChannelOptions,\n  RealtimeClient,\n  RealtimeClientOptions,\n} from '@supabase/realtime-js'\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js'\nimport {\n  DEFAULT_GLOBAL_OPTIONS,\n  DEFAULT_DB_OPTIONS,\n  DEFAULT_AUTH_OPTIONS,\n  DEFAULT_REALTIME_OPTIONS,\n} from './lib/constants'\nimport { fetchWithAuth } from './lib/fetch'\nimport { applySettingDefaults, validateSupabaseUrl } from './lib/helpers'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport { Fetch, GenericSchema, SupabaseClientOptions, SupabaseAuthClientOptions } from './lib/types'\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient<\n  Database = any,\n  // The second type parameter is also used for specifying db_schema, so we\n  // support both cases.\n  // TODO: Allow setting db_schema from ClientOptions.\n  SchemaNameOrClientOptions extends\n    | (string & keyof Omit<Database, '__InternalSupabase'>)\n    | { PostgrestVersion: string } = 'public' extends keyof Omit<Database, '__InternalSupabase'>\n    ? 'public'\n    : string & keyof Omit<Database, '__InternalSupabase'>,\n  SchemaName extends string &\n    keyof Omit<Database, '__InternalSupabase'> = SchemaNameOrClientOptions extends string &\n    keyof Omit<Database, '__InternalSupabase'>\n    ? SchemaNameOrClientOptions\n    : 'public' extends keyof Omit<Database, '__InternalSupabase'>\n      ? 'public'\n      : string & keyof Omit<Omit<Database, '__InternalSupabase'>, '__InternalSupabase'>,\n  Schema extends Omit<Database, '__InternalSupabase'>[SchemaName] extends GenericSchema\n    ? Omit<Database, '__InternalSupabase'>[SchemaName]\n    : never = Omit<Database, '__InternalSupabase'>[SchemaName] extends GenericSchema\n    ? Omit<Database, '__InternalSupabase'>[SchemaName]\n    : never,\n  ClientOptions extends { PostgrestVersion: string } = SchemaNameOrClientOptions extends string &\n    keyof Omit<Database, '__InternalSupabase'>\n    ? // If the version isn't explicitly set, look for it in the __InternalSupabase object to infer the right version\n      Database extends { __InternalSupabase: { PostgrestVersion: string } }\n      ? Database['__InternalSupabase']\n      : // otherwise default to 12\n        { PostgrestVersion: '12' }\n    : SchemaNameOrClientOptions extends { PostgrestVersion: string }\n      ? SchemaNameOrClientOptions\n      : never,\n> {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n  realtime: RealtimeClient\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  storage: SupabaseStorageClient\n\n  protected realtimeUrl: URL\n  protected authUrl: URL\n  protected storageUrl: URL\n  protected functionsUrl: URL\n  protected rest: PostgrestClient<Database, ClientOptions, SchemaName>\n  protected storageKey: string\n  protected fetch?: Fetch\n  protected changedAccessToken?: string\n  protected accessToken?: () => Promise<string | null>\n\n  protected headers: Record<string, string>\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.storage Options passed along to the storage-js constructor.\n   * @param options.global.fetch A custom fetch implementation.\n   * @param options.global.headers Any additional headers to send with each network request.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions<SchemaName>\n  ) {\n    const baseUrl = validateSupabaseUrl(supabaseUrl)\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    this.realtimeUrl = new URL('realtime/v1', baseUrl)\n    this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws')\n    this.authUrl = new URL('auth/v1', baseUrl)\n    this.storageUrl = new URL('storage/v1', baseUrl)\n    this.functionsUrl = new URL('functions/v1', baseUrl)\n\n    // default storage key uses the supabase project ref as a namespace\n    const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`\n    const DEFAULTS = {\n      db: DEFAULT_DB_OPTIONS,\n      realtime: DEFAULT_REALTIME_OPTIONS,\n      auth: { ...DEFAULT_AUTH_OPTIONS, storageKey: defaultStorageKey },\n      global: DEFAULT_GLOBAL_OPTIONS,\n    }\n\n    const settings = applySettingDefaults(options ?? {}, DEFAULTS)\n\n    this.storageKey = settings.auth.storageKey ?? ''\n    this.headers = settings.global.headers ?? {}\n\n    if (!settings.accessToken) {\n      this.auth = this._initSupabaseAuthClient(\n        settings.auth ?? {},\n        this.headers,\n        settings.global.fetch\n      )\n    } else {\n      this.accessToken = settings.accessToken\n\n      this.auth = new Proxy<SupabaseAuthClient>({} as any, {\n        get: (_, prop) => {\n          throw new Error(\n            `@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(\n              prop\n            )} is not possible`\n          )\n        },\n      })\n    }\n\n    this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch)\n    this.realtime = this._initRealtimeClient({\n      headers: this.headers,\n      accessToken: this._getAccessToken.bind(this),\n      ...settings.realtime,\n    })\n    this.rest = new PostgrestClient(new URL('rest/v1', baseUrl).href, {\n      headers: this.headers,\n      schema: settings.db.schema,\n      fetch: this.fetch,\n    })\n\n    this.storage = new SupabaseStorageClient(\n      this.storageUrl.href,\n      this.headers,\n      this.fetch,\n      options?.storage\n    )\n\n    if (!settings.accessToken) {\n      this._listenForAuthEvents()\n    }\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions(): FunctionsClient {\n    return new FunctionsClient(this.functionsUrl.href, {\n      headers: this.headers,\n      customFetch: this.fetch,\n    })\n  }\n\n  // NOTE: signatures must be kept in sync with PostgrestClient.from\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName],\n  >(relation: TableName): PostgrestQueryBuilder<ClientOptions, Schema, Table, TableName>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<ClientOptions, Schema, View, ViewName>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<ClientOptions, Schema, any> {\n    return this.rest.from(relation)\n  }\n\n  // NOTE: signatures must be kept in sync with PostgrestClient.schema\n  /**\n   * Select a schema to query or perform an function (rpc) call.\n   *\n   * The schema needs to be on the list of exposed schemas inside Supabase.\n   *\n   * @param schema - The schema to query\n   */\n  schema<DynamicSchema extends string & keyof Omit<Database, '__InternalSupabase'>>(\n    schema: DynamicSchema\n  ): PostgrestClient<\n    Database,\n    ClientOptions,\n    DynamicSchema,\n    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any\n  > {\n    return this.rest.schema<DynamicSchema>(schema)\n  }\n\n  // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.get - When set to `true`, the function will be called with\n   * read-only access mode.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<FnName extends string & keyof Schema['Functions'], Fn extends Schema['Functions'][FnName]>(\n    fn: FnName,\n    args: Fn['Args'] = {},\n    options: {\n      head?: boolean\n      get?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Fn['Returns'] extends any[]\n      ? Fn['Returns'][number] extends Record<string, unknown>\n        ? Fn['Returns'][number]\n        : never\n      : never,\n    Fn['Returns'],\n    FnName,\n    null,\n    'RPC'\n  > {\n    return this.rest.rpc(fn, args, options)\n  }\n\n  /**\n   * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n   *\n   * @param {string} name - The name of the Realtime channel.\n   * @param {Object} opts - The options to pass to the Realtime channel.\n   *\n   */\n  channel(name: string, opts: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    return this.realtime.channel(name, opts)\n  }\n\n  /**\n   * Returns all Realtime channels.\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.realtime.getChannels()\n  }\n\n  /**\n   * Unsubscribes and removes Realtime channel from Realtime client.\n   *\n   * @param {RealtimeChannel} channel - The name of the Realtime channel.\n   *\n   */\n  removeChannel(channel: RealtimeChannel): Promise<'ok' | 'timed out' | 'error'> {\n    return this.realtime.removeChannel(channel)\n  }\n\n  /**\n   * Unsubscribes and removes all Realtime channels from Realtime client.\n   */\n  removeAllChannels(): Promise<('ok' | 'timed out' | 'error')[]> {\n    return this.realtime.removeAllChannels()\n  }\n\n  private async _getAccessToken() {\n    if (this.accessToken) {\n      return await this.accessToken()\n    }\n\n    const { data } = await this.auth.getSession()\n\n    return data.session?.access_token ?? this.supabaseKey\n  }\n\n  private _initSupabaseAuthClient(\n    {\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      storageKey,\n      flowType,\n      lock,\n      debug,\n    }: SupabaseAuthClientOptions,\n    headers?: Record<string, string>,\n    fetch?: Fetch\n  ) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl.href,\n      headers: { ...authHeaders, ...headers },\n      storageKey: storageKey,\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      flowType,\n      lock,\n      debug,\n      fetch,\n      // auth checks if there is a custom authorizaiton header using this flag\n      // so it knows whether to return an error when getUser is called with no session\n      hasCustomAuthorizationHeader: Object.keys(this.headers).some(\n        (key) => key.toLowerCase() === 'authorization'\n      ),\n    })\n  }\n\n  private _initRealtimeClient(options: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl.href, {\n      ...options,\n      params: { ...{ apikey: this.supabaseKey }, ...options?.params },\n    })\n  }\n\n  private _listenForAuthEvents() {\n    let data = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, 'CLIENT', session?.access_token)\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    source: 'CLIENT' | 'STORAGE',\n    token?: string\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      this.changedAccessToken = token\n      this.realtime.setAuth(token)\n    } else if (event === 'SIGNED_OUT') {\n      this.realtime.setAuth()\n      if (source == 'STORAGE') this.auth.signOut()\n      this.changedAccessToken = undefined\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 14357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14362, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@supabase/supabase-js/src/index.ts"],"sourcesContent":["import SupabaseClient from './SupabaseClient'\nimport type { SupabaseClientOptions } from './lib/types'\n\nexport * from '@supabase/auth-js'\nexport type { User as AuthUser, Session as AuthSession } from '@supabase/auth-js'\nexport {\n  type PostgrestResponse,\n  type PostgrestSingleResponse,\n  type PostgrestMaybeSingleResponse,\n  PostgrestError,\n} from '@supabase/postgrest-js'\nexport {\n  FunctionsHttpError,\n  FunctionsFetchError,\n  FunctionsRelayError,\n  FunctionsError,\n  type FunctionInvokeOptions,\n  FunctionRegion,\n} from '@supabase/functions-js'\nexport * from '@supabase/realtime-js'\nexport { default as SupabaseClient } from './SupabaseClient'\nexport type { SupabaseClientOptions, QueryResult, QueryData, QueryError } from './lib/types'\n\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = <\n  Database = any,\n  SchemaNameOrClientOptions extends\n    | (string & keyof Omit<Database, '__InternalSupabase'>)\n    | { PostgrestVersion: string } = 'public' extends keyof Omit<Database, '__InternalSupabase'>\n    ? 'public'\n    : string & keyof Omit<Database, '__InternalSupabase'>,\n  SchemaName extends string &\n    keyof Omit<Database, '__InternalSupabase'> = SchemaNameOrClientOptions extends string &\n    keyof Omit<Database, '__InternalSupabase'>\n    ? SchemaNameOrClientOptions\n    : 'public' extends keyof Omit<Database, '__InternalSupabase'>\n      ? 'public'\n      : string & keyof Omit<Omit<Database, '__InternalSupabase'>, '__InternalSupabase'>,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName>\n): SupabaseClient<Database, SchemaNameOrClientOptions, SchemaName> => {\n  return new SupabaseClient<Database, SchemaNameOrClientOptions, SchemaName>(\n    supabaseUrl,\n    supabaseKey,\n    options\n  )\n}\n\n// Check for Node.js <= 18 deprecation\nfunction shouldShowDeprecationWarning(): boolean {\n  // Skip in browser environments\n  if (typeof window !== 'undefined') {\n    return false\n  }\n\n  // Skip if process is not available (e.g., Edge Runtime)\n  if (typeof process === 'undefined') {\n    return false\n  }\n\n  // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n  const processVersion = (process as any)['version']\n  if (processVersion === undefined || processVersion === null) {\n    return false\n  }\n\n  const versionMatch = processVersion.match(/^v(\\d+)\\./)\n  if (!versionMatch) {\n    return false\n  }\n\n  const majorVersion = parseInt(versionMatch[1], 10)\n  return majorVersion <= 18\n}\n\nif (shouldShowDeprecationWarning()) {\n  console.warn(\n    `⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. ` +\n      `Please upgrade to Node.js 20 or later. ` +\n      `For more information, visit: https://github.com/orgs/supabase/discussions/37217`\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;AA0BO,MAAM,eAAe,CAe1B,aACA,aACA;IAEA,OAAO,IAAI,gLAAA,CAAA,UAAc,CACvB,aACA,aACA;AAEJ;AAEA,sCAAsC;AACtC,SAAS;IACP,+BAA+B;IAC/B,IAAI,OAAO,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,wDAAwD;IACxD,IAAI,OAAO,YAAY,aAAa;QAClC,OAAO;IACT;IAEA,qFAAqF;IACrF,MAAM,iBAAkB,OAAe,CAAC,UAAU;IAClD,IAAI,mBAAmB,aAAa,mBAAmB,MAAM;QAC3D,OAAO;IACT;IAEA,MAAM,eAAe,eAAe,KAAK,CAAC;IAC1C,IAAI,CAAC,cAAc;QACjB,OAAO;IACT;IAEA,MAAM,eAAe,SAAS,YAAY,CAAC,EAAE,EAAE;IAC/C,OAAO,gBAAgB;AACzB;AAEA,IAAI,gCAAgC;IAClC,QAAQ,IAAI,CACV,CAAA,qHAAA,CAAuH,GACrH,CAAA,uCAAA,CAAyC,GACzC,CAAA,+EAAA,CAAiF;AAEvF"}},
    {"offset": {"line": 14401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}